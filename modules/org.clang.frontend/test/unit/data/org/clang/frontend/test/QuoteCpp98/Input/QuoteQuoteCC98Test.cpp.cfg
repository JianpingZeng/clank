exception() throw()
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

bad_exception() throw() : std::exception()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1:  (CXXConstructExpr, class std::exception)
   2: exception([B1.1]) (Base initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline __gnu_cxx::__ops::_Iter_less_iter __iter_less_iter()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__ops::_Iter_less_iter() (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_less_iter)
   2: [B1.1] (ImplicitCastExpr, NoOp, const struct __gnu_cxx::__ops::_Iter_less_iter)
   3: [B1.2]
   4: [B1.3] (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_less_iter)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline __gnu_cxx::__ops::_Iter_less_val __iter_less_val()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__ops::_Iter_less_val() (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_less_val)
   2: [B1.1] (ImplicitCastExpr, NoOp, const struct __gnu_cxx::__ops::_Iter_less_val)
   3: [B1.2]
   4: [B1.3] (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_less_val)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline __gnu_cxx::__ops::_Iter_less_val __iter_comp_val(__gnu_cxx::__ops::_Iter_less_iter)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__ops::_Iter_less_val() (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_less_val)
   2: [B1.1] (ImplicitCastExpr, NoOp, const struct __gnu_cxx::__ops::_Iter_less_val)
   3: [B1.2]
   4: [B1.3] (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_less_val)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline __gnu_cxx::__ops::_Val_less_iter __val_less_iter()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__ops::_Val_less_iter() (CXXConstructExpr, struct __gnu_cxx::__ops::_Val_less_iter)
   2: [B1.1] (ImplicitCastExpr, NoOp, const struct __gnu_cxx::__ops::_Val_less_iter)
   3: [B1.2]
   4: [B1.3] (CXXConstructExpr, struct __gnu_cxx::__ops::_Val_less_iter)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline __gnu_cxx::__ops::_Val_less_iter __val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__ops::_Val_less_iter() (CXXConstructExpr, struct __gnu_cxx::__ops::_Val_less_iter)
   2: [B1.1] (ImplicitCastExpr, NoOp, const struct __gnu_cxx::__ops::_Val_less_iter)
   3: [B1.2]
   4: [B1.3] (CXXConstructExpr, struct __gnu_cxx::__ops::_Val_less_iter)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline __gnu_cxx::__ops::_Iter_equal_to_iter __iter_equal_to_iter()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__ops::_Iter_equal_to_iter() (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_equal_to_iter)
   2: [B1.1] (ImplicitCastExpr, NoOp, const struct __gnu_cxx::__ops::_Iter_equal_to_iter)
   3: [B1.2]
   4: [B1.3] (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_equal_to_iter)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline __gnu_cxx::__ops::_Iter_equal_to_val __iter_equal_to_val()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__ops::_Iter_equal_to_val() (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_equal_to_val)
   2: [B1.1] (ImplicitCastExpr, NoOp, const struct __gnu_cxx::__ops::_Iter_equal_to_val)
   3: [B1.2]
   4: [B1.3] (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_equal_to_val)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline __gnu_cxx::__ops::_Iter_equal_to_val __iter_comp_val(__gnu_cxx::__ops::_Iter_equal_to_iter)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__ops::_Iter_equal_to_val() (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_equal_to_val)
   2: [B1.1] (ImplicitCastExpr, NoOp, const struct __gnu_cxx::__ops::_Iter_equal_to_val)
   3: [B1.2]
   4: [B1.3] (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_equal_to_val)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline int __lg(int __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: sizeof(int)
   2: 8
   3: [B1.2] (ImplicitCastExpr, IntegralCast, unsigned long)
   4: [B1.1] * [B1.3]
   5: 1
   6: [B1.5] (ImplicitCastExpr, IntegralCast, unsigned long)
   7: [B1.4] - [B1.6]
   8: __builtin_clz
   9: [B1.8] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)(unsigned int))
  10: __n
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, int)
  12: [B1.11] (ImplicitCastExpr, IntegralCast, unsigned int)
  13: [B1.9]([B1.12])
  14: [B1.13] (ImplicitCastExpr, IntegralCast, unsigned long)
  15: [B1.7] - [B1.14]
  16: [B1.15] (ImplicitCastExpr, IntegralCast, int)
  17: return [B1.16];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline unsigned int __lg(unsigned int __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: sizeof(int)
   2: 8
   3: [B1.2] (ImplicitCastExpr, IntegralCast, unsigned long)
   4: [B1.1] * [B1.3]
   5: 1
   6: [B1.5] (ImplicitCastExpr, IntegralCast, unsigned long)
   7: [B1.4] - [B1.6]
   8: __builtin_clz
   9: [B1.8] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)(unsigned int))
  10: __n
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, unsigned int)
  12: [B1.9]([B1.11])
  13: [B1.12] (ImplicitCastExpr, IntegralCast, unsigned long)
  14: [B1.7] - [B1.13]
  15: [B1.14] (ImplicitCastExpr, IntegralCast, unsigned int)
  16: return [B1.15];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline long __lg(long __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: sizeof(long)
   2: 8
   3: [B1.2] (ImplicitCastExpr, IntegralCast, unsigned long)
   4: [B1.1] * [B1.3]
   5: 1
   6: [B1.5] (ImplicitCastExpr, IntegralCast, unsigned long)
   7: [B1.4] - [B1.6]
   8: __builtin_clzl
   9: [B1.8] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)(unsigned long))
  10: __n
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, long)
  12: [B1.11] (ImplicitCastExpr, IntegralCast, unsigned long)
  13: [B1.9]([B1.12])
  14: [B1.13] (ImplicitCastExpr, IntegralCast, unsigned long)
  15: [B1.7] - [B1.14]
  16: [B1.15] (ImplicitCastExpr, IntegralCast, long)
  17: return [B1.16];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline unsigned long __lg(unsigned long __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: sizeof(long)
   2: 8
   3: [B1.2] (ImplicitCastExpr, IntegralCast, unsigned long)
   4: [B1.1] * [B1.3]
   5: 1
   6: [B1.5] (ImplicitCastExpr, IntegralCast, unsigned long)
   7: [B1.4] - [B1.6]
   8: __builtin_clzl
   9: [B1.8] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)(unsigned long))
  10: __n
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, unsigned long)
  12: [B1.9]([B1.11])
  13: [B1.12] (ImplicitCastExpr, IntegralCast, unsigned long)
  14: [B1.7] - [B1.13]
  15: return [B1.14];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline long long __lg(long long __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: sizeof(long long)
   2: 8
   3: [B1.2] (ImplicitCastExpr, IntegralCast, unsigned long)
   4: [B1.1] * [B1.3]
   5: 1
   6: [B1.5] (ImplicitCastExpr, IntegralCast, unsigned long)
   7: [B1.4] - [B1.6]
   8: __builtin_clzll
   9: [B1.8] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)(unsigned long long))
  10: __n
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, long long)
  12: [B1.11] (ImplicitCastExpr, IntegralCast, unsigned long long)
  13: [B1.9]([B1.12])
  14: [B1.13] (ImplicitCastExpr, IntegralCast, unsigned long)
  15: [B1.7] - [B1.14]
  16: [B1.15] (ImplicitCastExpr, IntegralCast, long long)
  17: return [B1.16];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline unsigned long long __lg(unsigned long long __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: sizeof(long long)
   2: 8
   3: [B1.2] (ImplicitCastExpr, IntegralCast, unsigned long)
   4: [B1.1] * [B1.3]
   5: 1
   6: [B1.5] (ImplicitCastExpr, IntegralCast, unsigned long)
   7: [B1.4] - [B1.6]
   8: __builtin_clzll
   9: [B1.8] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)(unsigned long long))
  10: __n
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, unsigned long long)
  12: [B1.9]([B1.11])
  13: [B1.12] (ImplicitCastExpr, IntegralCast, unsigned long)
  14: [B1.7] - [B1.13]
  15: [B1.14] (ImplicitCastExpr, IntegralCast, unsigned long long)
  16: return [B1.15];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static void assign(char_type &__c1, const char_type &__c2)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c2
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char_type)
   3: __c1
   4: [B1.3] = [B1.2]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static bool eq(const char_type &__c1, const char_type &__c2)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c1
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char_type)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: __c2
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, char_type)
   6: [B1.5] (ImplicitCastExpr, IntegralCast, int)
   7: [B1.3] == [B1.6]
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static bool lt(const char_type &__c1, const char_type &__c2)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c1
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char_type)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, unsigned char)
   4: static_cast<unsigned char>([B1.3]) (CXXStaticCastExpr, NoOp, unsigned char)
   5: [B1.4] (ImplicitCastExpr, IntegralCast, int)
   6: __c2
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, char_type)
   8: [B1.7] (ImplicitCastExpr, IntegralCast, unsigned char)
   9: static_cast<unsigned char>([B1.8]) (CXXStaticCastExpr, NoOp, unsigned char)
  10: [B1.9] (ImplicitCastExpr, IntegralCast, int)
  11: [B1.5] < [B1.10]
  12: return ([B1.11]);
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: __builtin_memcmp
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)(const void *, const void *, unsigned long))
   3: __s1
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, const char_type *)
   5: [B1.4] (ImplicitCastExpr, BitCast, const void *)
   6: __s2
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, const char_type *)
   8: [B1.7] (ImplicitCastExpr, BitCast, const void *)
   9: __n
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, size_t)
  11: [B1.2]([B1.5], [B1.8], [B1.10])
  12: return [B1.11];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: 0
   2: return [B2.1];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: 0
   4: [B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: [B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static size_t length(const char_type *__s)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __builtin_strlen
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, unsigned long (*)(const char *))
   3: __s
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, const char_type *)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: __builtin_memchr
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, void *(*)(const void *, int, unsigned long))
   3: __s
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, const char_type *)
   5: [B1.4] (ImplicitCastExpr, BitCast, const void *)
   6: __a
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, char_type)
   8: [B1.7] (ImplicitCastExpr, IntegralCast, int)
   9: __n
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, size_t)
  11: [B1.2]([B1.5], [B1.8], [B1.10])
  12: static_cast<const char_type *>([B1.11]) (CXXStaticCastExpr, BitCast, const char_type *)
  13: return [B1.12];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: 0
   2: [B2.1] (ImplicitCastExpr, NullToPointer, const char_type *)
   3: return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: 0
   4: [B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: [B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: __builtin_memmove
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, void *(*)(void *, const void *, unsigned long))
   3: __s1
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type *)
   5: [B1.4] (ImplicitCastExpr, BitCast, void *)
   6: __s2
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, const char_type *)
   8: [B1.7] (ImplicitCastExpr, BitCast, const void *)
   9: __n
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, size_t)
  11: [B1.2]([B1.5], [B1.8], [B1.10])
  12: static_cast<char_type *>([B1.11]) (CXXStaticCastExpr, BitCast, char_type *)
  13: return [B1.12];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __s1
   2: [B2.1] (ImplicitCastExpr, LValueToRValue, char_type *)
   3: return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: 0
   4: [B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: [B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: __builtin_memcpy
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, void *(*)(void *, const void *, unsigned long))
   3: __s1
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type *)
   5: [B1.4] (ImplicitCastExpr, BitCast, void *)
   6: __s2
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, const char_type *)
   8: [B1.7] (ImplicitCastExpr, BitCast, const void *)
   9: __n
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, size_t)
  11: [B1.2]([B1.5], [B1.8], [B1.10])
  12: static_cast<char_type *>([B1.11]) (CXXStaticCastExpr, BitCast, char_type *)
  13: return [B1.12];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __s1
   2: [B2.1] (ImplicitCastExpr, LValueToRValue, char_type *)
   3: return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: 0
   4: [B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: [B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static char_type *assign(char_type *__s, size_t __n, char_type __a)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: __builtin_memset
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, void *(*)(void *, int, unsigned long))
   3: __s
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type *)
   5: [B1.4] (ImplicitCastExpr, BitCast, void *)
   6: __a
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, char_type)
   8: [B1.7] (ImplicitCastExpr, IntegralCast, int)
   9: __n
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, size_t)
  11: [B1.2]([B1.5], [B1.8], [B1.10])
  12: static_cast<char_type *>([B1.11]) (CXXStaticCastExpr, BitCast, char_type *)
  13: return [B1.12];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __s
   2: [B2.1] (ImplicitCastExpr, LValueToRValue, char_type *)
   3: return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: 0
   4: [B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: [B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static char_type to_char_type(const int_type &__c)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, int_type)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, char_type)
   4: static_cast<char_type>([B1.3]) (CXXStaticCastExpr, NoOp, char_type)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static int_type to_int_type(const char_type &__c)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char_type)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, unsigned char)
   4: static_cast<unsigned char>([B1.3]) (CXXStaticCastExpr, NoOp, unsigned char)
   5: [B1.4] (ImplicitCastExpr, IntegralCast, int_type)
   6: static_cast<int_type>([B1.5]) (CXXStaticCastExpr, NoOp, int_type)
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static bool eq_int_type(const int_type &__c1, const int_type &__c2)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c1
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, int_type)
   3: __c2
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, int_type)
   5: [B1.2] == [B1.4]
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static int_type eof()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: 1
   2: -[B1.1]
   3: static_cast<int_type>([B1.2]) (CXXStaticCastExpr, NoOp, int_type)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static int_type not_eof(const int_type &__c)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: ([B4.6]) ? [B2.1] : [B3.2]
   2: return [B1.1];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: 0
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: __c
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, int_type)
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: __c
   2: [B4.1] (ImplicitCastExpr, LValueToRValue, int_type)
   3: eof
   4: [B4.3] (ImplicitCastExpr, FunctionToPointerDecay, int_type (*)(void))
   5: [B4.4]()
   6: [B4.2] == [B4.5]
   T: ([B4.6]) ? ... : ...
   Preds (1): B5
   Succs (2): B2 B3

 [B0 (EXIT)]
   Preds (1): B1

static void assign(char_type &__c1, const char_type &__c2)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c2
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char_type)
   3: __c1
   4: [B1.3] = [B1.2]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static bool eq(const char_type &__c1, const char_type &__c2)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c1
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char_type)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: __c2
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, char_type)
   6: [B1.5] (ImplicitCastExpr, IntegralCast, int)
   7: [B1.3] == [B1.6]
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static bool lt(const char_type &__c1, const char_type &__c2)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c1
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char_type)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: __c2
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, char_type)
   6: [B1.5] (ImplicitCastExpr, IntegralCast, int)
   7: [B1.3] < [B1.6]
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: wmemcmp
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const wchar_t *, const wchar_t *, size_t) throw())
   3: __s1
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, const char_type *)
   5: __s2
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const char_type *)
   7: __n
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, size_t)
   9: [B1.2]([B1.4], [B1.6], [B1.8])
  10: return [B1.9];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: 0
   2: return [B2.1];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: 0
   4: [B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: [B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static size_t length(const char_type *__s)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: wcslen
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(const wchar_t *) throw())
   3: __s
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, const char_type *)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: wmemchr
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, const wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw())
   3: __s
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, const char_type *)
   5: __a
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, char_type)
   7: __n
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, size_t)
   9: [B1.2]([B1.4], [B1.6], [B1.8])
  10: return [B1.9];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: 0
   2: [B2.1] (ImplicitCastExpr, NullToPointer, const char_type *)
   3: return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: 0
   4: [B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: [B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: wmemmove
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw())
   3: __s1
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type *)
   5: __s2
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const char_type *)
   7: __n
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, size_t)
   9: [B1.2]([B1.4], [B1.6], [B1.8])
  10: return [B1.9];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __s1
   2: [B2.1] (ImplicitCastExpr, LValueToRValue, char_type *)
   3: return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: 0
   4: [B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: [B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: wmemcpy
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, wchar_t *(*)(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw())
   3: __s1
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type *)
   5: __s2
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const char_type *)
   7: __n
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, size_t)
   9: [B1.2]([B1.4], [B1.6], [B1.8])
  10: return [B1.9];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __s1
   2: [B2.1] (ImplicitCastExpr, LValueToRValue, char_type *)
   3: return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: 0
   4: [B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: [B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static char_type *assign(char_type *__s, size_t __n, char_type __a)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: wmemset
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, wchar_t *(*)(wchar_t *, wchar_t, size_t) throw())
   3: __s
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type *)
   5: __a
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, char_type)
   7: __n
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, size_t)
   9: [B1.2]([B1.4], [B1.6], [B1.8])
  10: return [B1.9];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __s
   2: [B2.1] (ImplicitCastExpr, LValueToRValue, char_type *)
   3: return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: 0
   4: [B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: [B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static char_type to_char_type(const int_type &__c)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, int_type)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, char_type)
   4: char_type([B1.3]) (CXXFunctionalCastExpr, NoOp, char_type)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static int_type to_int_type(const char_type &__c)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char_type)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int_type)
   4: int_type([B1.3]) (CXXFunctionalCastExpr, NoOp, int_type)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static bool eq_int_type(const int_type &__c1, const int_type &__c2)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c1
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, int_type)
   3: __c2
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, int_type)
   5: [B1.2] == [B1.4]
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static int_type eof()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: 4294967295U
   2: static_cast<int_type>(([B1.1])) (CXXStaticCastExpr, NoOp, int_type)
   3: return [B1.2];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static int_type not_eof(const int_type &__c)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: [B4.8] ? [B2.2] : [B3.2]
   2: return [B1.1];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: 0
   2: [B2.1] (ImplicitCastExpr, IntegralCast, unsigned int)
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: __c
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, int_type)
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: eq_int_type
   2: [B4.1] (ImplicitCastExpr, FunctionToPointerDecay, _Bool (*)(const int_type &, const int_type &))
   3: __c
   4: eof
   5: [B4.4] (ImplicitCastExpr, FunctionToPointerDecay, int_type (*)(void))
   6: [B4.5]()
   7: [B4.6]
   8: [B4.2]([B4.3], [B4.7])
   T: [B4.8] ? ... : ...
   Preds (1): B5
   Succs (2): B2 B3

 [B0 (EXIT)]
   Preds (1): B1

inline int __convert_from_v(const __c_locale &__cloc, char *__out, const int __size, const char *__fmt, ...)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__uselocale
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (uselocale) *)
   3: __cloc
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __c_locale)
   5: [B1.2]([B1.4])
   6: __c_locale __old = __gnu_cxx::__uselocale(__cloc);
   7:  (CXXConstructExpr, __builtin_va_list)
   8: __builtin_va_list __args;
   9: __builtin_va_start
  10: [B1.9] (ImplicitCastExpr, BuiltinFnToFnPtr, void (*)(struct __va_list_tag *, ...))
  11: __args
  12: [B1.11] (ImplicitCastExpr, ArrayToPointerDecay, struct __va_list_tag *)
  13: __fmt
  14: [B1.10]([B1.12], [B1.13])
  15: __builtin_vsnprintf
  16: [B1.15] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)(char *, unsigned long, const char *, struct __va_list_tag *))
  17: __out
  18: [B1.17] (ImplicitCastExpr, LValueToRValue, char *)
  19: __size
  20: [B1.19] (ImplicitCastExpr, LValueToRValue, int)
  21: [B1.20] (ImplicitCastExpr, IntegralCast, unsigned long)
  22: __fmt
  23: [B1.22] (ImplicitCastExpr, LValueToRValue, const char *)
  24: __args
  25: [B1.24] (ImplicitCastExpr, ArrayToPointerDecay, struct __va_list_tag *)
  26: [B1.16]([B1.18], [B1.21], [B1.23], [B1.25])
  27: const int __ret = __builtin_vsnprintf(__out, __size, __fmt, __args);
  28: __builtin_va_end
  29: [B1.28] (ImplicitCastExpr, BuiltinFnToFnPtr, void (*)(struct __va_list_tag *))
  30: __args
  31: [B1.30] (ImplicitCastExpr, ArrayToPointerDecay, struct __va_list_tag *)
  32: [B1.29]([B1.31])
  33: __gnu_cxx::__uselocale
  34: [B1.33] (ImplicitCastExpr, FunctionToPointerDecay, typeof (uselocale) *)
  35: __old
  36: [B1.35] (ImplicitCastExpr, LValueToRValue, __c_locale)
  37: [B1.34]([B1.36])
  38: __ret
  39: [B1.38] (ImplicitCastExpr, LValueToRValue, int)
  40: return [B1.39];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline unsigned int __bswap_32(unsigned int __bsx)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __builtin_bswap32
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, unsigned int (*)(unsigned int))
   3: __bsx
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, unsigned int)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline __uint64_t __bswap_64(__uint64_t __bsx)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __builtin_bswap64
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, unsigned long long (*)(unsigned long long))
   3: __bsx
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __uint64_t)
   5: [B1.4] (ImplicitCastExpr, IntegralCast, unsigned long long)
   6: [B1.2]([B1.5])
   7: [B1.6] (ImplicitCastExpr, IntegralCast, __uint64_t)
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

__pthread_cleanup_class(void (*__fct)(void *), void *__arg) : __cancel_routine(__fct), __cancel_arg(__arg), __do_it(1)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __fct
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, void (*)(void *))
   3: __cancel_routine([B1.2]) (Member initializer)
   4: __arg
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, void *)
   6: __cancel_arg([B1.5]) (Member initializer)
   7: 1
   8: __do_it([B1.7]) (Member initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

~__pthread_cleanup_class()
 [B3 (ENTRY)]
   Succs (1): B2

 [B1]
   1: this
   2: [B1.1]->__cancel_routine
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, void (*)(void *))
   4: this
   5: [B1.4]->__cancel_arg
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, void *)
   7: [B1.3]([B1.6])
   Preds (1): B2
   Succs (1): B0

 [B2]
   1: this
   2: [B2.1]->__do_it
   3: [B2.2] (ImplicitCastExpr, LValueToRValue, int)
   4: [B2.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B2.4]
   Preds (1): B3
   Succs (2): B1 B0

 [B0 (EXIT)]
   Preds (2): B1 B2

void __setdoit(int __newval)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __newval
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, int)
   3: this
   4: [B1.3]->__do_it
   5: [B1.4] = [B1.2]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void __defer()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: pthread_setcanceltype
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(int, int *))
   3: PTHREAD_CANCEL_DEFERRED
   4: [B1.3] (ImplicitCastExpr, IntegralCast, int)
   5: this
   6: [B1.5]->__cancel_type
   7: &[B1.6]
   8: [B1.2]([B1.4], [B1.7])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void __restore() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: pthread_setcanceltype
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(int, int *))
   3: this
   4: [B1.3]->__cancel_type
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, int)
   6: 0
   7: [B1.6] (ImplicitCastExpr, NullToPointer, int *)
   8: [B1.2]([B1.5], [B1.7])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_active_p()
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: __gthread_active_ptr
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, void *)
   3: 0
   4: [B1.3] (ImplicitCastExpr, NullToPointer, void *)
   5: [B1.2] != [B1.4]
   6: [B1.5] (ImplicitCastExpr, IntegralCast, int)
   7: return [B1.6];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: __gthrw___pthread_key_create
   2: &[B2.1]
   3: (void *)[B2.2] (CStyleCastExpr, BitCast, void *)
   4: static void *const __gthread_active_ptr = __extension__ (void *)&__gthrw___pthread_key_create;
   Preds (1): B3
   Succs (1): B1

 [B3]
   T: static init __gthread_active_ptr
   Preds (1): B4
   Succs (2): B1 B2

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_create(__gthread_t *__threadid, void *(*__func)(void *), void *__args)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_create
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_create) *)
   3: __threadid
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_t *)
   5: __null
   6: [B1.5] (ImplicitCastExpr, NullToPointer, const pthread_attr_t *)
   7: __func
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, void *(*)(void *))
   9: __args
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, void *)
  11: [B1.2]([B1.4], [B1.6], [B1.8], [B1.10])
  12: return [B1.11];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_join(__gthread_t __threadid, void **__value_ptr)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_join
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_join) *)
   3: __threadid
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_t)
   5: __value_ptr
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, void **)
   7: [B1.2]([B1.4], [B1.6])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_detach(__gthread_t __threadid)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_detach
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_detach) *)
   3: __threadid
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_t)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_equal(__gthread_t __t1, __gthread_t __t2)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_equal
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_equal) *)
   3: __t1
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_t)
   5: __t2
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, __gthread_t)
   7: [B1.2]([B1.4], [B1.6])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline __gthread_t __gthread_self()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_self
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_self) *)
   3: [B1.2]()
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_yield()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_sched_yield
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (sched_yield) *)
   3: [B1.2]()
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_once(__gthread_once_t *__once, void (*__func)())
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: 1
   2: -[B1.1]
   3: return [B1.2];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __gthrw_pthread_once
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_once) *)
   3: __once
   4: [B2.3] (ImplicitCastExpr, LValueToRValue, __gthread_once_t *)
   5: __func
   6: [B2.5] (ImplicitCastExpr, LValueToRValue, void (*)(void))
   7: [B2.2]([B2.4], [B2.6])
   8: return [B2.7];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __gthread_active_p
   2: [B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(void))
   3: [B3.2]()
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static inline int __gthread_key_create(__gthread_key_t *__key, void (*__dtor)(void *))
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_key_create
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_key_create) *)
   3: __key
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_key_t *)
   5: __dtor
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, void (*)(void *))
   7: [B1.2]([B1.4], [B1.6])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_key_delete(__gthread_key_t __key)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_key_delete
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_key_delete) *)
   3: __key
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_key_t)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline void *__gthread_getspecific(__gthread_key_t __key)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_getspecific
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_getspecific) *)
   3: __key
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_key_t)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_setspecific(__gthread_key_t __key, const void *__ptr)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_setspecific
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_setspecific) *)
   3: __key
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_key_t)
   5: __ptr
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const void *)
   7: [B1.2]([B1.4], [B1.6])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline void __gthread_mutex_init_function(__gthread_mutex_t *__mutex)
 [B3 (ENTRY)]
   Succs (1): B2

 [B1]
   1: __gthrw_pthread_mutex_init
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_mutex_init) *)
   3: __mutex
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_mutex_t *)
   5: __null
   6: [B1.5] (ImplicitCastExpr, NullToPointer, const pthread_mutexattr_t *)
   7: [B1.2]([B1.4], [B1.6])
   Preds (1): B2
   Succs (1): B0

 [B2]
   1: __gthread_active_p
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(void))
   3: [B2.2]()
   4: [B2.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B2.4]
   Preds (1): B3
   Succs (2): B1 B0

 [B0 (EXIT)]
   Preds (2): B1 B2

static inline int __gthread_mutex_destroy(__gthread_mutex_t *__mutex)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: 0
   2: return [B1.1];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __gthrw_pthread_mutex_destroy
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_mutex_destroy) *)
   3: __mutex
   4: [B2.3] (ImplicitCastExpr, LValueToRValue, __gthread_mutex_t *)
   5: [B2.2]([B2.4])
   6: return [B2.5];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __gthread_active_p
   2: [B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(void))
   3: [B3.2]()
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static inline int __gthread_mutex_lock(__gthread_mutex_t *__mutex)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: 0
   2: return [B1.1];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __gthrw_pthread_mutex_lock
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_mutex_lock) *)
   3: __mutex
   4: [B2.3] (ImplicitCastExpr, LValueToRValue, __gthread_mutex_t *)
   5: [B2.2]([B2.4])
   6: return [B2.5];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __gthread_active_p
   2: [B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(void))
   3: [B3.2]()
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static inline int __gthread_mutex_trylock(__gthread_mutex_t *__mutex)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: 0
   2: return [B1.1];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __gthrw_pthread_mutex_trylock
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_mutex_trylock) *)
   3: __mutex
   4: [B2.3] (ImplicitCastExpr, LValueToRValue, __gthread_mutex_t *)
   5: [B2.2]([B2.4])
   6: return [B2.5];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __gthread_active_p
   2: [B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(void))
   3: [B3.2]()
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static inline int __gthread_mutex_timedlock(__gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: 0
   2: return [B1.1];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __gthrw_pthread_mutex_timedlock
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_mutex_timedlock) *)
   3: __mutex
   4: [B2.3] (ImplicitCastExpr, LValueToRValue, __gthread_mutex_t *)
   5: __abs_timeout
   6: [B2.5] (ImplicitCastExpr, LValueToRValue, const __gthread_time_t *)
   7: [B2.2]([B2.4], [B2.6])
   8: return [B2.7];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __gthread_active_p
   2: [B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(void))
   3: [B3.2]()
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static inline int __gthread_mutex_unlock(__gthread_mutex_t *__mutex)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: 0
   2: return [B1.1];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __gthrw_pthread_mutex_unlock
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_mutex_unlock) *)
   3: __mutex
   4: [B2.3] (ImplicitCastExpr, LValueToRValue, __gthread_mutex_t *)
   5: [B2.2]([B2.4])
   6: return [B2.5];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __gthread_active_p
   2: [B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(void))
   3: [B3.2]()
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static inline int __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t *__mutex)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthread_mutex_lock
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(__gthread_mutex_t *))
   3: __mutex
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_recursive_mutex_t *)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_recursive_mutex_trylock(__gthread_recursive_mutex_t *__mutex)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthread_mutex_trylock
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(__gthread_mutex_t *))
   3: __mutex
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_recursive_mutex_t *)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_recursive_mutex_timedlock(__gthread_recursive_mutex_t *__mutex, const __gthread_time_t *__abs_timeout)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthread_mutex_timedlock
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(__gthread_mutex_t *, const __gthread_time_t *))
   3: __mutex
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_recursive_mutex_t *)
   5: __abs_timeout
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const __gthread_time_t *)
   7: [B1.2]([B1.4], [B1.6])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_recursive_mutex_unlock(__gthread_recursive_mutex_t *__mutex)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthread_mutex_unlock
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(__gthread_mutex_t *))
   3: __mutex
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_recursive_mutex_t *)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_recursive_mutex_destroy(__gthread_recursive_mutex_t *__mutex)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthread_mutex_destroy
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(__gthread_mutex_t *))
   3: __mutex
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_recursive_mutex_t *)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_cond_broadcast(__gthread_cond_t *__cond)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_cond_broadcast
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_cond_broadcast) *)
   3: __cond
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_cond_t *)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_cond_signal(__gthread_cond_t *__cond)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_cond_signal
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_cond_signal) *)
   3: __cond
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_cond_t *)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_cond_wait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_cond_wait
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_cond_wait) *)
   3: __cond
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_cond_t *)
   5: __mutex
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, __gthread_mutex_t *)
   7: [B1.2]([B1.4], [B1.6])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_cond_timedwait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_cond_timedwait
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_cond_timedwait) *)
   3: __cond
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_cond_t *)
   5: __mutex
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, __gthread_mutex_t *)
   7: __abs_timeout
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, const __gthread_time_t *)
   9: [B1.2]([B1.4], [B1.6], [B1.8])
  10: return [B1.9];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_cond_wait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *__mutex)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthread_cond_wait
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(__gthread_cond_t *, __gthread_mutex_t *))
   3: __cond
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_cond_t *)
   5: __mutex
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, __gthread_recursive_mutex_t *)
   7: [B1.2]([B1.4], [B1.6])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_cond_destroy(__gthread_cond_t *__cond)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_cond_destroy
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_cond_destroy) *)
   3: __cond
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_cond_t *)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline _Atomic_word __exchange_and_add(volatile _Atomic_word *__mem, int __val)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __mem
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, volatile _Atomic_word *)
   3: 4
   4: __val
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, int)
   6: __atomic_fetch_add([B1.2], [B1.5], [B1.3])
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline void __atomic_add(volatile _Atomic_word *__mem, int __val)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __mem
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, volatile _Atomic_word *)
   3: 4
   4: __val
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, int)
   6: __atomic_fetch_add([B1.2], [B1.5], [B1.3])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline _Atomic_word __exchange_and_add_single(_Atomic_word *__mem, int __val)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __mem
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, _Atomic_word *)
   3: *[B1.2]
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, _Atomic_word)
   5: _Atomic_word __result = *__mem;
   6: __mem
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, _Atomic_word *)
   8: *[B1.7]
   9: __val
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, int)
  11: [B1.8] += [B1.10]
  12: __result
  13: [B1.12] (ImplicitCastExpr, LValueToRValue, _Atomic_word)
  14: return [B1.13];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline void __atomic_add_single(_Atomic_word *__mem, int __val)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __mem
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, _Atomic_word *)
   3: *[B1.2]
   4: __val
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, int)
   6: [B1.3] += [B1.5]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline _Atomic_word __exchange_and_add_dispatch(_Atomic_word *__mem, int __val)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: __exchange_and_add_single
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, _Atomic_word (*)(_Atomic_word *, int))
   3: __mem
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, _Atomic_word *)
   5: __val
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, int)
   7: [B1.2]([B1.4], [B1.6])
   8: return [B1.7];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __exchange_and_add
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, _Atomic_word (*)(volatile _Atomic_word *, int))
   3: __mem
   4: [B2.3] (ImplicitCastExpr, LValueToRValue, _Atomic_word *)
   5: [B2.4] (ImplicitCastExpr, NoOp, volatile _Atomic_word *)
   6: __val
   7: [B2.6] (ImplicitCastExpr, LValueToRValue, int)
   8: [B2.2]([B2.5], [B2.7])
   9: return [B2.8];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __gthread_active_p
   2: [B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(void))
   3: [B3.2]()
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static inline void __atomic_add_dispatch(_Atomic_word *__mem, int __val)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: __atomic_add_single
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(_Atomic_word *, int))
   3: __mem
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, _Atomic_word *)
   5: __val
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, int)
   7: [B1.2]([B1.4], [B1.6])
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __atomic_add
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(volatile _Atomic_word *, int))
   3: __mem
   4: [B2.3] (ImplicitCastExpr, LValueToRValue, _Atomic_word *)
   5: [B2.4] (ImplicitCastExpr, NoOp, volatile _Atomic_word *)
   6: __val
   7: [B2.6] (ImplicitCastExpr, LValueToRValue, int)
   8: [B2.2]([B2.5], [B2.7])
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __gthread_active_p
   2: [B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(void))
   3: [B3.2]()
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

bad_alloc() throw() : std::exception()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1:  (CXXConstructExpr, class std::exception)
   2: exception([B1.1]) (Base initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline void *operator new(std::size_t, void *__p) throw()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __p
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, void *)
   3: return [B1.2];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline void *operator new[](std::size_t, void *__p) throw()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __p
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, void *)
   3: return [B1.2];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline void operator delete(void *, void *) throw()
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline void operator delete[](void *, void *) throw()
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

bool operator!=(const std::locale &__other) const throw()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->operator==
   3: __other
   4: [B1.2]([B1.3])
   5: !([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

explicit facet(size_t __refs = 0) throw() : _M_refcount(__refs ? 1 : 0)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: [B4.3] ? [B2.1] : [B3.1]
   2: _M_refcount([B1.1]) (Member initializer)
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: 1
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: 0
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: __refs
   2: [B4.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: [B4.2] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: [B4.3] ? ... : ...
   Preds (1): B5
   Succs (2): B2 B3

 [B0 (EXIT)]
   Preds (1): B1

void _M_add_reference() const throw()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__atomic_add_dispatch
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(_Atomic_word *, int))
   3: this
   4: [B1.3]->_M_refcount
   5: &[B1.4]
   6: 1
   7: [B1.2]([B1.5], [B1.6])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_remove_reference() const throw()
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   T: try ...
   Succs (1): B2

 [B2]
  catch (...):
   1: catch (...) {
}
   Preds (1): B1
   Succs (1): B0

 [B3]
   1: this
   2: [B3.1]->~facet() (Implicit destructor)
   3: delete [B3.1]
   Preds (1): B4
   Succs (1): B0

 [B4]
   1: __gnu_cxx::__exchange_and_add_dispatch
   2: [B4.1] (ImplicitCastExpr, FunctionToPointerDecay, _Atomic_word (*)(_Atomic_word *, int))
   3: this
   4: [B4.3]->_M_refcount
   5: &[B4.4]
   6: 1
   7: -[B4.6]
   8: [B4.2]([B4.5], [B4.7])
   9: 1
  10: [B4.8] == [B4.9]
   T: if [B4.10]
   Preds (1): B5
   Succs (2): B3 B0

 [B0 (EXIT)]
   Preds (3): B2 B3 B4

id()
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_add_reference() throw()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__atomic_add_dispatch
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(_Atomic_word *, int))
   3: this
   4: [B1.3]->_M_refcount
   5: &[B1.4]
   6: 1
   7: [B1.2]([B1.5], [B1.6])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_remove_reference() throw()
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   T: try ...
   Succs (1): B2

 [B2]
  catch (...):
   1: catch (...) {
}
   Preds (1): B1
   Succs (1): B0

 [B3]
   1: this
   2: [B3.1]->~_Impl() (Implicit destructor)
   3: delete [B3.1]
   Preds (1): B4
   Succs (1): B0

 [B4]
   1: __gnu_cxx::__exchange_and_add_dispatch
   2: [B4.1] (ImplicitCastExpr, FunctionToPointerDecay, _Atomic_word (*)(_Atomic_word *, int))
   3: this
   4: [B4.3]->_M_refcount
   5: &[B4.4]
   6: 1
   7: -[B4.6]
   8: [B4.2]([B4.5], [B4.7])
   9: 1
  10: [B4.8] == [B4.9]
   T: if [B4.10]
   Preds (1): B5
   Succs (2): B3 B0

 [B0 (EXIT)]
   Preds (3): B2 B3 B4

bool _M_check_same_name()
 [B8 (ENTRY)]
   Succs (1): B7

 [B1]
   1: __ret
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, _Bool)
   3: return [B1.2];
   Preds (3): B4 B5 B7
   Succs (1): B0

 [B2]
   1: __i
   2: ++[B2.1]
   Preds (1): B3
   Succs (1): B5

 [B3]
   1: __builtin_strcmp
   2: [B3.1] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)(const char *, const char *))
   3: this
   4: [B3.3]->_M_names
   5: [B3.4] (ImplicitCastExpr, LValueToRValue, char **)
   6: __i
   7: [B3.6] (ImplicitCastExpr, LValueToRValue, size_t)
   8: [B3.5][[B3.7]]
   9: [B3.8] (ImplicitCastExpr, LValueToRValue, char *)
  10: [B3.9] (ImplicitCastExpr, NoOp, const char *)
  11: this
  12: [B3.11]->_M_names
  13: [B3.12] (ImplicitCastExpr, LValueToRValue, char **)
  14: __i
  15: [B3.14] (ImplicitCastExpr, LValueToRValue, size_t)
  16: 1
  17: [B3.16] (ImplicitCastExpr, IntegralCast, unsigned long)
  18: [B3.15] + [B3.17]
  19: [B3.13][[B3.18]]
  20: [B3.19] (ImplicitCastExpr, LValueToRValue, char *)
  21: [B3.20] (ImplicitCastExpr, NoOp, const char *)
  22: [B3.2]([B3.10], [B3.21])
  23: 0
  24: [B3.22] == [B3.23]
  25: __ret
  26: [B3.25] = [B3.24]
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: __i
   2: [B4.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: _S_categories_size
   4: [B4.3] (ImplicitCastExpr, IntegralCast, int)
   5: 1
   6: [B4.4] - [B4.5]
   7: [B4.6] (ImplicitCastExpr, IntegralCast, unsigned long)
   8: [B4.2] < [B4.7]
   T: for (...; [B5.2] && [B4.8]; ...)
   Preds (1): B5
   Succs (2): B3 B1

 [B5]
   1: __ret
   2: [B5.1] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: [B5.2] && ...
   Preds (2): B2 B6
   Succs (2): B4 B1

 [B6]
   1: 0
   2: [B6.1] (ImplicitCastExpr, IntegralCast, size_t)
   3: size_t __i = 0;
   Preds (1): B7
   Succs (1): B5

 [B7]
   1: true
   2: bool __ret = true;
   3: this
   4: [B7.3]->_M_names
   5: [B7.4] (ImplicitCastExpr, LValueToRValue, char **)
   6: 1
   7: [B7.5][[B7.6]]
   8: [B7.7] (ImplicitCastExpr, LValueToRValue, char *)
   9: [B7.8] (ImplicitCastExpr, PointerToBoolean, _Bool)
   T: if [B7.9]
   Preds (1): B8
   Succs (2): B6 B1

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Fmtflags operator&(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   7: [B1.6] (ImplicitCastExpr, IntegralCast, int)
   8: static_cast<int>([B1.7]) (CXXStaticCastExpr, NoOp, int)
   9: [B1.4] & [B1.8]
  10: std::_Ios_Fmtflags([B1.9]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Fmtflags)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Fmtflags operator|(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   7: [B1.6] (ImplicitCastExpr, IntegralCast, int)
   8: static_cast<int>([B1.7]) (CXXStaticCastExpr, NoOp, int)
   9: [B1.4] | [B1.8]
  10: std::_Ios_Fmtflags([B1.9]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Fmtflags)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Fmtflags operator^(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   7: [B1.6] (ImplicitCastExpr, IntegralCast, int)
   8: static_cast<int>([B1.7]) (CXXStaticCastExpr, NoOp, int)
   9: [B1.4] ^ [B1.8]
  10: std::_Ios_Fmtflags([B1.9]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Fmtflags)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Fmtflags operator~(std::_Ios_Fmtflags __a)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: ~[B1.4]
   6: std::_Ios_Fmtflags([B1.5]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Fmtflags)
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline const std::_Ios_Fmtflags &operator|=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator|
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags))
   3: __a
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   7: [B1.4] | [B1.6] (OperatorCall)
   8: __a
   9: [B1.8] = [B1.7]
  10: [B1.9] (ImplicitCastExpr, NoOp, const enum std::_Ios_Fmtflags)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline const std::_Ios_Fmtflags &operator&=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator&
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags))
   3: __a
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   7: [B1.4] & [B1.6] (OperatorCall)
   8: __a
   9: [B1.8] = [B1.7]
  10: [B1.9] (ImplicitCastExpr, NoOp, const enum std::_Ios_Fmtflags)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline const std::_Ios_Fmtflags &operator^=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator^
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags))
   3: __a
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   7: [B1.4] ^ [B1.6] (OperatorCall)
   8: __a
   9: [B1.8] = [B1.7]
  10: [B1.9] (ImplicitCastExpr, NoOp, const enum std::_Ios_Fmtflags)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Openmode operator&(std::_Ios_Openmode __a, std::_Ios_Openmode __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   7: [B1.6] (ImplicitCastExpr, IntegralCast, int)
   8: static_cast<int>([B1.7]) (CXXStaticCastExpr, NoOp, int)
   9: [B1.4] & [B1.8]
  10: std::_Ios_Openmode([B1.9]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Openmode)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Openmode operator|(std::_Ios_Openmode __a, std::_Ios_Openmode __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   7: [B1.6] (ImplicitCastExpr, IntegralCast, int)
   8: static_cast<int>([B1.7]) (CXXStaticCastExpr, NoOp, int)
   9: [B1.4] | [B1.8]
  10: std::_Ios_Openmode([B1.9]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Openmode)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Openmode operator^(std::_Ios_Openmode __a, std::_Ios_Openmode __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   7: [B1.6] (ImplicitCastExpr, IntegralCast, int)
   8: static_cast<int>([B1.7]) (CXXStaticCastExpr, NoOp, int)
   9: [B1.4] ^ [B1.8]
  10: std::_Ios_Openmode([B1.9]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Openmode)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Openmode operator~(std::_Ios_Openmode __a)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: ~[B1.4]
   6: std::_Ios_Openmode([B1.5]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Openmode)
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline const std::_Ios_Openmode &operator|=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator|
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode))
   3: __a
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   7: [B1.4] | [B1.6] (OperatorCall)
   8: __a
   9: [B1.8] = [B1.7]
  10: [B1.9] (ImplicitCastExpr, NoOp, const enum std::_Ios_Openmode)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline const std::_Ios_Openmode &operator&=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator&
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode))
   3: __a
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   7: [B1.4] & [B1.6] (OperatorCall)
   8: __a
   9: [B1.8] = [B1.7]
  10: [B1.9] (ImplicitCastExpr, NoOp, const enum std::_Ios_Openmode)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline const std::_Ios_Openmode &operator^=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator^
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode))
   3: __a
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   7: [B1.4] ^ [B1.6] (OperatorCall)
   8: __a
   9: [B1.8] = [B1.7]
  10: [B1.9] (ImplicitCastExpr, NoOp, const enum std::_Ios_Openmode)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Iostate operator&(std::_Ios_Iostate __a, std::_Ios_Iostate __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   7: [B1.6] (ImplicitCastExpr, IntegralCast, int)
   8: static_cast<int>([B1.7]) (CXXStaticCastExpr, NoOp, int)
   9: [B1.4] & [B1.8]
  10: std::_Ios_Iostate([B1.9]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Iostate)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Iostate operator|(std::_Ios_Iostate __a, std::_Ios_Iostate __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   7: [B1.6] (ImplicitCastExpr, IntegralCast, int)
   8: static_cast<int>([B1.7]) (CXXStaticCastExpr, NoOp, int)
   9: [B1.4] | [B1.8]
  10: std::_Ios_Iostate([B1.9]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Iostate)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Iostate operator^(std::_Ios_Iostate __a, std::_Ios_Iostate __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   7: [B1.6] (ImplicitCastExpr, IntegralCast, int)
   8: static_cast<int>([B1.7]) (CXXStaticCastExpr, NoOp, int)
   9: [B1.4] ^ [B1.8]
  10: std::_Ios_Iostate([B1.9]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Iostate)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Iostate operator~(std::_Ios_Iostate __a)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: ~[B1.4]
   6: std::_Ios_Iostate([B1.5]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Iostate)
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline const std::_Ios_Iostate &operator|=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator|
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate))
   3: __a
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   7: [B1.4] | [B1.6] (OperatorCall)
   8: __a
   9: [B1.8] = [B1.7]
  10: [B1.9] (ImplicitCastExpr, NoOp, const enum std::_Ios_Iostate)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline const std::_Ios_Iostate &operator&=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator&
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate))
   3: __a
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   7: [B1.4] & [B1.6] (OperatorCall)
   8: __a
   9: [B1.8] = [B1.7]
  10: [B1.9] (ImplicitCastExpr, NoOp, const enum std::_Ios_Iostate)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline const std::_Ios_Iostate &operator^=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator^
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate))
   3: __a
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   7: [B1.4] ^ [B1.6] (OperatorCall)
   8: __a
   9: [B1.8] = [B1.7]
  10: [B1.9] (ImplicitCastExpr, NoOp, const enum std::_Ios_Iostate)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

error_code()
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

_Callback_list(ios_base::event_callback __fn, int __index, std::ios_base::_Callback_list *__cb) : _M_next(__cb), _M_fn(__fn), _M_index(__index), _M_refcount(0)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __cb
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, struct std::ios_base::_Callback_list *)
   3: _M_next([B1.2]) (Member initializer)
   4: __fn
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, class ios_base::event_callback)
   6: _M_fn([B1.5]) (Member initializer)
   7: __index
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, int)
   9: _M_index([B1.8]) (Member initializer)
  10: 0
  11: _M_refcount([B1.10]) (Member initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_add_reference()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__atomic_add_dispatch
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(_Atomic_word *, int))
   3: this
   4: [B1.3]->_M_refcount
   5: &[B1.4]
   6: 1
   7: [B1.2]([B1.5], [B1.6])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

int _M_remove_reference()
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: __res
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, int)
   3: return [B1.2];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: __gnu_cxx::__exchange_and_add_dispatch
   2: [B3.1] (ImplicitCastExpr, FunctionToPointerDecay, _Atomic_word (*)(_Atomic_word *, int))
   3: this
   4: [B3.3]->_M_refcount
   5: &[B3.4]
   6: 1
   7: -[B3.6]
   8: [B3.2]([B3.5], [B3.7])
   9: int __res = __gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount, -1);
  10: __res
  11: [B3.10] (ImplicitCastExpr, LValueToRValue, int)
  12: 0
  13: [B3.11] == [B3.12]
   T: if [B3.13]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (1): B1

_Words() : _M_pword(0), _M_iword(0)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: 0
   2: [B1.1] (ImplicitCastExpr, NullToPointer, void *)
   3: _M_pword([B1.2]) (Member initializer)
   4: 0
   5: [B1.4] (ImplicitCastExpr, IntegralCast, long)
   6: _M_iword([B1.5]) (Member initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

fmtflags flags() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_flags
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, fmtflags)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

fmtflags flags(fmtflags __fmtfl)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_flags
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, fmtflags)
   4: fmtflags __old = this->_M_flags;
   5: __fmtfl
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, fmtflags)
   7: this
   8: [B1.7]->_M_flags
   9: [B1.8] = [B1.6]
  10: __old
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, fmtflags)
  12: return [B1.11];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

fmtflags setf(fmtflags __fmtfl)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_flags
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, fmtflags)
   4: fmtflags __old = this->_M_flags;
   5: operator|=
   6: [B1.5] (ImplicitCastExpr, FunctionToPointerDecay, const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags))
   7: this
   8: [B1.7]->_M_flags
   9: __fmtfl
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, fmtflags)
  11: [B1.8] |= [B1.10] (OperatorCall)
  12: __old
  13: [B1.12] (ImplicitCastExpr, LValueToRValue, fmtflags)
  14: return [B1.13];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

fmtflags setf(fmtflags __fmtfl, fmtflags __mask)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_flags
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, fmtflags)
   4: fmtflags __old = this->_M_flags;
   5: operator&=
   6: [B1.5] (ImplicitCastExpr, FunctionToPointerDecay, const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags))
   7: this
   8: [B1.7]->_M_flags
   9: operator~
  10: [B1.9] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags))
  11: __mask
  12: [B1.11] (ImplicitCastExpr, LValueToRValue, fmtflags)
  13: ~ [B1.12] (OperatorCall)
  14: [B1.8] &= [B1.13] (OperatorCall)
  15: operator|=
  16: [B1.15] (ImplicitCastExpr, FunctionToPointerDecay, const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags))
  17: this
  18: [B1.17]->_M_flags
  19: operator&
  20: [B1.19] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags))
  21: __fmtfl
  22: [B1.21] (ImplicitCastExpr, LValueToRValue, fmtflags)
  23: __mask
  24: [B1.23] (ImplicitCastExpr, LValueToRValue, fmtflags)
  25: [B1.22] & [B1.24] (OperatorCall)
  26: [B1.18] |= ([B1.25]) (OperatorCall)
  27: __old
  28: [B1.27] (ImplicitCastExpr, LValueToRValue, fmtflags)
  29: return [B1.28];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void unsetf(fmtflags __mask)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator&=
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags))
   3: this
   4: [B1.3]->_M_flags
   5: operator~
   6: [B1.5] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags))
   7: __mask
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, fmtflags)
   9: ~ [B1.8] (OperatorCall)
  10: [B1.4] &= [B1.9] (OperatorCall)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

streamsize precision() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_precision
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, streamsize)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

streamsize precision(streamsize __prec)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_precision
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, streamsize)
   4: streamsize __old = this->_M_precision;
   5: __prec
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, streamsize)
   7: this
   8: [B1.7]->_M_precision
   9: [B1.8] = [B1.6]
  10: __old
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, streamsize)
  12: return [B1.11];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

streamsize width() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_width
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, streamsize)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

streamsize width(streamsize __wide)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_width
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, streamsize)
   4: streamsize __old = this->_M_width;
   5: __wide
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, streamsize)
   7: this
   8: [B1.7]->_M_width
   9: [B1.8] = [B1.6]
  10: __old
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, streamsize)
  12: return [B1.11];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

std::locale getloc() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_ios_locale
   3: [B1.2] (CXXConstructExpr, class std::locale)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const std::locale &_M_getloc() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_ios_locale
   3: return [B1.2];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

long &iword(int __ix)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: ([B4.6]) ? [B2.6] : [B3.6]
   2: std::ios_base::_Words &__word = (__ix < this->_M_word_size) ? this->_M_word[__ix] : this->_M_grow_words(__ix, true);
   3: __word
   4: [B1.3]._M_iword
   5: return [B1.4];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: this
   2: [B2.1]->_M_word
   3: [B2.2] (ImplicitCastExpr, LValueToRValue, struct std::ios_base::_Words *)
   4: __ix
   5: [B2.4] (ImplicitCastExpr, LValueToRValue, int)
   6: [B2.3][[B2.5]]
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: this
   2: [B3.1]->_M_grow_words
   3: __ix
   4: [B3.3] (ImplicitCastExpr, LValueToRValue, int)
   5: true
   6: [B3.2]([B3.4], [B3.5])
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: __ix
   2: [B4.1] (ImplicitCastExpr, LValueToRValue, int)
   3: this
   4: [B4.3]->_M_word_size
   5: [B4.4] (ImplicitCastExpr, LValueToRValue, int)
   6: [B4.2] < [B4.5]
   T: ([B4.6]) ? ... : ...
   Preds (1): B5
   Succs (2): B2 B3

 [B0 (EXIT)]
   Preds (1): B1

void *&pword(int __ix)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: ([B4.6]) ? [B2.6] : [B3.6]
   2: std::ios_base::_Words &__word = (__ix < this->_M_word_size) ? this->_M_word[__ix] : this->_M_grow_words(__ix, false);
   3: __word
   4: [B1.3]._M_pword
   5: return [B1.4];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: this
   2: [B2.1]->_M_word
   3: [B2.2] (ImplicitCastExpr, LValueToRValue, struct std::ios_base::_Words *)
   4: __ix
   5: [B2.4] (ImplicitCastExpr, LValueToRValue, int)
   6: [B2.3][[B2.5]]
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: this
   2: [B3.1]->_M_grow_words
   3: __ix
   4: [B3.3] (ImplicitCastExpr, LValueToRValue, int)
   5: false
   6: [B3.2]([B3.4], [B3.5])
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: __ix
   2: [B4.1] (ImplicitCastExpr, LValueToRValue, int)
   3: this
   4: [B4.3]->_M_word_size
   5: [B4.4] (ImplicitCastExpr, LValueToRValue, int)
   6: [B4.2] < [B4.5]
   T: ([B4.6]) ? ... : ...
   Preds (1): B5
   Succs (2): B2 B3

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &boolalpha(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::boolalpha
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &noboolalpha(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].unsetf
   3: ios_base::boolalpha
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &showbase(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::showbase
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &noshowbase(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].unsetf
   3: ios_base::showbase
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &showpoint(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::showpoint
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &noshowpoint(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].unsetf
   3: ios_base::showpoint
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &showpos(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::showpos
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &noshowpos(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].unsetf
   3: ios_base::showpos
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &skipws(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::skipws
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &noskipws(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].unsetf
   3: ios_base::skipws
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &uppercase(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::uppercase
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &nouppercase(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].unsetf
   3: ios_base::uppercase
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &unitbuf(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::unitbuf
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &nounitbuf(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].unsetf
   3: ios_base::unitbuf
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &internal(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::internal
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: ios_base::adjustfield
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, fmtflags)
   7: [B1.2]([B1.4], [B1.6])
   8: __base
   9: return [B1.8];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &left(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::left
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: ios_base::adjustfield
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, fmtflags)
   7: [B1.2]([B1.4], [B1.6])
   8: __base
   9: return [B1.8];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &right(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::right
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: ios_base::adjustfield
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, fmtflags)
   7: [B1.2]([B1.4], [B1.6])
   8: __base
   9: return [B1.8];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &dec(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::dec
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: ios_base::basefield
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, fmtflags)
   7: [B1.2]([B1.4], [B1.6])
   8: __base
   9: return [B1.8];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &hex(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::hex
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: ios_base::basefield
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, fmtflags)
   7: [B1.2]([B1.4], [B1.6])
   8: __base
   9: return [B1.8];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &oct(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::oct
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: ios_base::basefield
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, fmtflags)
   7: [B1.2]([B1.4], [B1.6])
   8: __base
   9: return [B1.8];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &fixed(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::fixed
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: ios_base::floatfield
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, fmtflags)
   7: [B1.2]([B1.4], [B1.6])
   8: __base
   9: return [B1.8];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &scientific(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::scientific
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: ios_base::floatfield
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, fmtflags)
   7: [B1.2]([B1.4], [B1.6])
   8: __base
   9: return [B1.8];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

char_type toupper(char_type __c) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->do_toupper
   3: __c
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const char_type *toupper(char_type *__lo, const char_type *__hi) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->do_toupper
   3: __lo
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type *)
   5: __hi
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const char_type *)
   7: [B1.2]([B1.4], [B1.6])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

char_type tolower(char_type __c) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->do_tolower
   3: __c
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const char_type *tolower(char_type *__lo, const char_type *__hi) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->do_tolower
   3: __lo
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type *)
   5: __hi
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const char_type *)
   7: [B1.2]([B1.4], [B1.6])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

char_type widen(char __c) const
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: this
   2: [B1.1]->_M_widen_init
   3: [B1.2]()
   4: this
   5: [B1.4]->do_widen
   6: __c
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, char)
   8: [B1.5]([B1.7])
   9: return [B1.8];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: this
   2: [B2.1]->_M_widen
   3: [B2.2] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   4: __c
   5: [B2.4] (ImplicitCastExpr, LValueToRValue, char)
   6: [B2.5] (ImplicitCastExpr, IntegralCast, unsigned char)
   7: static_cast<unsigned char>([B2.6]) (CXXStaticCastExpr, NoOp, unsigned char)
   8: [B2.3][[B2.7]]
   9: [B2.8] (ImplicitCastExpr, LValueToRValue, char)
  10: return [B2.9];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: this
   2: [B3.1]->_M_widen_ok
   3: [B3.2] (ImplicitCastExpr, LValueToRValue, char)
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

const char *widen(const char *__lo, const char *__hi, char_type *__to) const
 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: this
   2: [B1.1]->do_widen
   3: __lo
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: __hi
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: __to
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, char_type *)
   9: [B1.2]([B1.4], [B1.6], [B1.8])
  10: return [B1.9];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: this
   2: [B2.1]->_M_widen_init
   3: [B2.2]()
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: this
   2: [B3.1]->_M_widen_ok
   3: [B3.2] (ImplicitCastExpr, LValueToRValue, char)
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   5: ![B3.4]
   T: if [B3.5]
   Preds (1): B5
   Succs (2): B2 B1

 [B4]
   1: __builtin_memcpy
   2: [B4.1] (ImplicitCastExpr, BuiltinFnToFnPtr, void *(*)(void *, const void *, unsigned long))
   3: __to
   4: [B4.3] (ImplicitCastExpr, LValueToRValue, char_type *)
   5: [B4.4] (ImplicitCastExpr, BitCast, void *)
   6: __lo
   7: [B4.6] (ImplicitCastExpr, LValueToRValue, const char *)
   8: [B4.7] (ImplicitCastExpr, BitCast, const void *)
   9: __hi
  10: [B4.9] (ImplicitCastExpr, LValueToRValue, const char *)
  11: __lo
  12: [B4.11] (ImplicitCastExpr, LValueToRValue, const char *)
  13: [B4.10] - [B4.12]
  14: [B4.13] (ImplicitCastExpr, IntegralCast, unsigned long)
  15: [B4.2]([B4.5], [B4.8], [B4.14])
  16: __hi
  17: [B4.16] (ImplicitCastExpr, LValueToRValue, const char *)
  18: return [B4.17];
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: this
   2: [B5.1]->_M_widen_ok
   3: [B5.2] (ImplicitCastExpr, LValueToRValue, char)
   4: [B5.3] (ImplicitCastExpr, IntegralCast, int)
   5: 1
   6: [B5.4] == [B5.5]
   T: if [B5.6]
   Preds (1): B6
   Succs (2): B4 B3

 [B0 (EXIT)]
   Preds (2): B1 B4

char narrow(char_type __c, char __dfault) const
 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: __t
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char)
   3: return [B1.2];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: __t
   2: [B2.1] (ImplicitCastExpr, LValueToRValue, char)
   3: this
   4: [B2.3]->_M_narrow
   5: [B2.4] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   6: __c
   7: [B2.6] (ImplicitCastExpr, LValueToRValue, char_type)
   8: [B2.7] (ImplicitCastExpr, IntegralCast, unsigned char)
   9: static_cast<unsigned char>([B2.8]) (CXXStaticCastExpr, NoOp, unsigned char)
  10: [B2.5][[B2.9]]
  11: [B2.10] = [B2.2]
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: this
   2: [B3.1]->do_narrow
   3: __c
   4: [B3.3] (ImplicitCastExpr, LValueToRValue, char_type)
   5: __dfault
   6: [B3.5] (ImplicitCastExpr, LValueToRValue, char)
   7: [B3.2]([B3.4], [B3.6])
   8: const char __t = this->do_narrow(__c, __dfault);
   9: __t
  10: [B3.9] (ImplicitCastExpr, LValueToRValue, char)
  11: [B3.10] (ImplicitCastExpr, IntegralCast, int)
  12: __dfault
  13: [B3.12] (ImplicitCastExpr, LValueToRValue, char)
  14: [B3.13] (ImplicitCastExpr, IntegralCast, int)
  15: [B3.11] != [B3.14]
   T: if [B3.15]
   Preds (1): B5
   Succs (2): B2 B1

 [B4]
   1: this
   2: [B4.1]->_M_narrow
   3: [B4.2] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   4: __c
   5: [B4.4] (ImplicitCastExpr, LValueToRValue, char_type)
   6: [B4.5] (ImplicitCastExpr, IntegralCast, unsigned char)
   7: static_cast<unsigned char>([B4.6]) (CXXStaticCastExpr, NoOp, unsigned char)
   8: [B4.3][[B4.7]]
   9: [B4.8] (ImplicitCastExpr, LValueToRValue, char)
  10: return [B4.9];
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: this
   2: [B5.1]->_M_narrow
   3: [B5.2] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   4: __c
   5: [B5.4] (ImplicitCastExpr, LValueToRValue, char_type)
   6: [B5.5] (ImplicitCastExpr, IntegralCast, unsigned char)
   7: static_cast<unsigned char>([B5.6]) (CXXStaticCastExpr, NoOp, unsigned char)
   8: [B5.3][[B5.7]]
   9: [B5.8] (ImplicitCastExpr, LValueToRValue, char)
  10: [B5.9] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B5.10]
   Preds (1): B6
   Succs (2): B4 B3

 [B0 (EXIT)]
   Preds (2): B1 B4

const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const
 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: this
   2: [B1.1]->do_narrow
   3: __lo
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, const char_type *)
   5: __hi
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const char_type *)
   7: __dfault
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, char)
   9: __to
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, char *)
  11: [B1.2]([B1.4], [B1.6], [B1.8], [B1.10])
  12: return [B1.11];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: this
   2: [B2.1]->_M_narrow_init
   3: [B2.2]()
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: this
   2: [B3.1]->_M_narrow_ok
   3: [B3.2] (ImplicitCastExpr, LValueToRValue, char)
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   5: ![B3.4]
   T: if [B3.5]
   Preds (1): B5
   Succs (2): B2 B1

 [B4]
   1: __builtin_memcpy
   2: [B4.1] (ImplicitCastExpr, BuiltinFnToFnPtr, void *(*)(void *, const void *, unsigned long))
   3: __to
   4: [B4.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: [B4.4] (ImplicitCastExpr, BitCast, void *)
   6: __lo
   7: [B4.6] (ImplicitCastExpr, LValueToRValue, const char_type *)
   8: [B4.7] (ImplicitCastExpr, BitCast, const void *)
   9: __hi
  10: [B4.9] (ImplicitCastExpr, LValueToRValue, const char_type *)
  11: __lo
  12: [B4.11] (ImplicitCastExpr, LValueToRValue, const char_type *)
  13: [B4.10] - [B4.12]
  14: [B4.13] (ImplicitCastExpr, IntegralCast, unsigned long)
  15: [B4.2]([B4.5], [B4.8], [B4.14])
  16: __hi
  17: [B4.16] (ImplicitCastExpr, LValueToRValue, const char_type *)
  18: return [B4.17];
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: __builtin_expect
   2: [B5.1] (ImplicitCastExpr, BuiltinFnToFnPtr, long (*)(long, long))
   3: this
   4: [B5.3]->_M_narrow_ok
   5: [B5.4] (ImplicitCastExpr, LValueToRValue, char)
   6: [B5.5] (ImplicitCastExpr, IntegralCast, int)
   7: 1
   8: [B5.6] == [B5.7]
   9: [B5.8] (ImplicitCastExpr, IntegralCast, long)
  10: true
  11: [B5.10] (ImplicitCastExpr, IntegralCast, long)
  12: [B5.2]([B5.9], [B5.11])
  13: [B5.12] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B5.13]
   Preds (1): B6
   Succs (2): B4 B3

 [B0 (EXIT)]
   Preds (2): B1 B4

const mask *table() const throw()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_table
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, const mask *)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

virtual char_type do_widen(char __c) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char)
   3: return [B1.2];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__to) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __builtin_memcpy
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, void *(*)(void *, const void *, unsigned long))
   3: __to
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type *)
   5: [B1.4] (ImplicitCastExpr, BitCast, void *)
   6: __lo
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, const char *)
   8: [B1.7] (ImplicitCastExpr, BitCast, const void *)
   9: __hi
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, const char *)
  11: __lo
  12: [B1.11] (ImplicitCastExpr, LValueToRValue, const char *)
  13: [B1.10] - [B1.12]
  14: [B1.13] (ImplicitCastExpr, IntegralCast, unsigned long)
  15: [B1.2]([B1.5], [B1.8], [B1.14])
  16: __hi
  17: [B1.16] (ImplicitCastExpr, LValueToRValue, const char *)
  18: return [B1.17];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

virtual char do_narrow(char_type __c, char __dfault) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char_type)
   3: return [B1.2];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __builtin_memcpy
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, void *(*)(void *, const void *, unsigned long))
   3: __to
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: [B1.4] (ImplicitCastExpr, BitCast, void *)
   6: __lo
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, const char_type *)
   8: [B1.7] (ImplicitCastExpr, BitCast, const void *)
   9: __hi
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, const char_type *)
  11: __lo
  12: [B1.11] (ImplicitCastExpr, LValueToRValue, const char_type *)
  13: [B1.10] - [B1.12]
  14: [B1.13] (ImplicitCastExpr, IntegralCast, unsigned long)
  15: [B1.2]([B1.5], [B1.8], [B1.14])
  16: __hi
  17: [B1.16] (ImplicitCastExpr, LValueToRValue, const char_type *)
  18: return [B1.17];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

bool is(mask __m, char __c) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_table
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, const mask *)
   4: __c
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, char)
   6: [B1.5] (ImplicitCastExpr, IntegralCast, unsigned char)
   7: static_cast<unsigned char>([B1.6]) (CXXStaticCastExpr, NoOp, unsigned char)
   8: [B1.3][[B1.7]]
   9: [B1.8] (ImplicitCastExpr, LValueToRValue, mask)
  10: [B1.9] (ImplicitCastExpr, IntegralCast, int)
  11: __m
  12: [B1.11] (ImplicitCastExpr, LValueToRValue, mask)
  13: [B1.12] (ImplicitCastExpr, IntegralCast, int)
  14: [B1.10] & [B1.13]
  15: [B1.14] (ImplicitCastExpr, IntegralToBoolean, _Bool)
  16: return [B1.15];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const char *is(const char *__low, const char *__high, mask *__vec) const
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: __high
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: return [B1.2];
   Preds (1): B4
   Succs (1): B0

 [B2]
   Preds (1): B3
   Succs (1): B4

 [B3]
   1: this
   2: [B3.1]->_M_table
   3: [B3.2] (ImplicitCastExpr, LValueToRValue, const mask *)
   4: __low
   5: [B3.4]++
   6: *[B3.5]
   7: [B3.6] (ImplicitCastExpr, LValueToRValue, char)
   8: [B3.7] (ImplicitCastExpr, IntegralCast, unsigned char)
   9: static_cast<unsigned char>([B3.8]) (CXXStaticCastExpr, NoOp, unsigned char)
  10: [B3.3][[B3.9]]
  11: [B3.10] (ImplicitCastExpr, LValueToRValue, mask)
  12: __vec
  13: [B3.12]++
  14: *[B3.13]
  15: [B3.14] = [B3.11]
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: __low
   2: [B4.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: __high
   4: [B4.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: [B4.2] < [B4.4]
   T: while [B4.5]
   Preds (2): B2 B5
   Succs (2): B3 B1

 [B0 (EXIT)]
   Preds (1): B1

const char *scan_is(mask __m, const char *__low, const char *__high) const
 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: __low
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: return [B1.2];
   Preds (2): B4 B5
   Succs (1): B0

 [B2]
   Preds (1): B3
   Succs (1): B5

 [B3]
   1: __low
   2: ++[B3.1]
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: this
   2: [B4.1]->_M_table
   3: [B4.2] (ImplicitCastExpr, LValueToRValue, const mask *)
   4: __low
   5: [B4.4] (ImplicitCastExpr, LValueToRValue, const char *)
   6: *[B4.5]
   7: [B4.6] (ImplicitCastExpr, LValueToRValue, char)
   8: [B4.7] (ImplicitCastExpr, IntegralCast, unsigned char)
   9: static_cast<unsigned char>([B4.8]) (CXXStaticCastExpr, NoOp, unsigned char)
  10: [B4.3][[B4.9]]
  11: [B4.10] (ImplicitCastExpr, LValueToRValue, mask)
  12: [B4.11] (ImplicitCastExpr, IntegralCast, int)
  13: __m
  14: [B4.13] (ImplicitCastExpr, LValueToRValue, mask)
  15: [B4.14] (ImplicitCastExpr, IntegralCast, int)
  16: [B4.12] & [B4.15]
  17: ([B4.16]) (ImplicitCastExpr, IntegralToBoolean, _Bool)
  18: ![B4.17]
   T: while [B5.5] && [B4.18]
   Preds (1): B5
   Succs (2): B3 B1

 [B5]
   1: __low
   2: [B5.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: __high
   4: [B5.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: [B5.2] < [B5.4]
   T: [B5.5] && ...
   Preds (2): B2 B6
   Succs (2): B4 B1

 [B0 (EXIT)]
   Preds (1): B1

const char *scan_not(mask __m, const char *__low, const char *__high) const
 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: __low
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: return [B1.2];
   Preds (2): B4 B5
   Succs (1): B0

 [B2]
   Preds (1): B3
   Succs (1): B5

 [B3]
   1: __low
   2: ++[B3.1]
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: this
   2: [B4.1]->_M_table
   3: [B4.2] (ImplicitCastExpr, LValueToRValue, const mask *)
   4: __low
   5: [B4.4] (ImplicitCastExpr, LValueToRValue, const char *)
   6: *[B4.5]
   7: [B4.6] (ImplicitCastExpr, LValueToRValue, char)
   8: [B4.7] (ImplicitCastExpr, IntegralCast, unsigned char)
   9: static_cast<unsigned char>([B4.8]) (CXXStaticCastExpr, NoOp, unsigned char)
  10: [B4.3][[B4.9]]
  11: [B4.10] (ImplicitCastExpr, LValueToRValue, mask)
  12: [B4.11] (ImplicitCastExpr, IntegralCast, int)
  13: __m
  14: [B4.13] (ImplicitCastExpr, LValueToRValue, mask)
  15: [B4.14] (ImplicitCastExpr, IntegralCast, int)
  16: [B4.12] & [B4.15]
  17: 0
  18: ([B4.16]) != [B4.17]
   T: while [B5.5] && [B4.18]
   Preds (1): B5
   Succs (2): B3 B1

 [B5]
   1: __low
   2: [B5.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: __high
   4: [B5.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: [B5.2] < [B5.4]
   T: [B5.5] && ...
   Preds (2): B2 B6
   Succs (2): B4 B1

 [B0 (EXIT)]
   Preds (1): B1

inline long abs(long __i)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __builtin_labs
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, long (*)(long))
   3: __i
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, long)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline ldiv_t div(long __i, long __j)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: ldiv
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, ldiv_t (*)(long, long) throw())
   3: __i
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, long)
   5: __j
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, long)
   7: [B1.2]([B1.4], [B1.6])
   8: [B1.7] (ImplicitCastExpr, NoOp, const ldiv_t)
   9: [B1.8]
  10: [B1.9] (CXXConstructExpr, ldiv_t)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline long long abs(long long __x)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __builtin_llabs
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, long long (*)(long long))
   3: __x
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, long long)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline lldiv_t div(long long __n, long long __d)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1:  (CXXConstructExpr, lldiv_t)
   2: lldiv_t __q;
   3: __n
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, long long)
   5: __d
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, long long)
   7: [B1.4] / [B1.6]
   8: __q
   9: [B1.8].quot
  10: [B1.9] = [B1.7]
  11: __n
  12: [B1.11] (ImplicitCastExpr, LValueToRValue, long long)
  13: __d
  14: [B1.13] (ImplicitCastExpr, LValueToRValue, long long)
  15: [B1.12] % [B1.14]
  16: __q
  17: [B1.16].rem
  18: [B1.17] = [B1.15]
  19: __q
  20: [B1.19] (ImplicitCastExpr, NoOp, const lldiv_t)
  21: [B1.20] (CXXConstructExpr, lldiv_t)
  22: return [B1.21];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

_Bit_reference(_Bit_type *__x, _Bit_type __y) : _M_p(__x), _M_mask(__y)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __x
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   3: _M_p([B1.2]) (Member initializer)
   4: __y
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, _Bit_type)
   6: _M_mask([B1.5]) (Member initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

_Bit_reference() : _M_p(0), _M_mask(0)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: 0
   2: [B1.1] (ImplicitCastExpr, NullToPointer, _Bit_type *)
   3: _M_p([B1.2]) (Member initializer)
   4: 0
   5: [B1.4] (ImplicitCastExpr, IntegralCast, _Bit_type)
   6: _M_mask([B1.5]) (Member initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

operator bool() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_p
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   4: *[B1.3]
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, _Bit_type)
   6: this
   7: [B1.6]->_M_mask
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, _Bit_type)
   9: [B1.5] & [B1.8]
  10: ([B1.9]) (ImplicitCastExpr, IntegralToBoolean, _Bool)
  11: ![B1.10]
  12: ![B1.11]
  13: return [B1.12];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

std::_Bit_reference &operator=(bool __x)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: this
   2: *[B1.1]
   3: return [B1.2];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: this
   2: [B2.1]->_M_p
   3: [B2.2] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   4: *[B2.3]
   5: this
   6: [B2.5]->_M_mask
   7: [B2.6] (ImplicitCastExpr, LValueToRValue, _Bit_type)
   8: ~[B2.7]
   9: [B2.4] &= [B2.8]
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: this
   2: [B3.1]->_M_p
   3: [B3.2] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   4: *[B3.3]
   5: this
   6: [B3.5]->_M_mask
   7: [B3.6] (ImplicitCastExpr, LValueToRValue, _Bit_type)
   8: [B3.4] |= [B3.7]
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: __x
   2: [B4.1] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: if [B4.2]
   Preds (1): B5
   Succs (2): B3 B2

 [B0 (EXIT)]
   Preds (1): B1

std::_Bit_reference &operator=(const std::_Bit_reference &__x)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator=
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, struct std::_Bit_reference &(*)(_Bool))
   3: this
   4: *[B1.3]
   5: __x
   6: [B1.5].operator bool
   7: [B1.5]
   8: [B1.7] (ImplicitCastExpr, UserDefinedConversion, _Bool)
   9: bool([B1.8]) (CXXFunctionalCastExpr, NoOp, _Bool)
  10: [B1.4] = [B1.9] (OperatorCall)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

bool operator==(const std::_Bit_reference &__x) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: *[B1.1]
   3: [B1.2].operator bool
   4: [B1.2]
   5: [B1.4] (ImplicitCastExpr, UserDefinedConversion, _Bool)
   6: bool([B1.5]) (CXXFunctionalCastExpr, NoOp, _Bool)
   7: [B1.6] (ImplicitCastExpr, IntegralCast, int)
   8: __x
   9: [B1.8].operator bool
  10: [B1.8]
  11: [B1.10] (ImplicitCastExpr, UserDefinedConversion, _Bool)
  12: bool([B1.11]) (CXXFunctionalCastExpr, NoOp, _Bool)
  13: [B1.12] (ImplicitCastExpr, IntegralCast, int)
  14: [B1.7] == [B1.13]
  15: return [B1.14];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

bool operator<(const std::_Bit_reference &__x) const
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: [B3.7] && [B2.5]
   2: return [B1.1];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: __x
   2: [B2.1].operator bool
   3: [B2.1]
   4: [B2.3] (ImplicitCastExpr, UserDefinedConversion, _Bool)
   5: bool([B2.4]) (CXXFunctionalCastExpr, NoOp, _Bool)
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: this
   2: *[B3.1]
   3: [B3.2].operator bool
   4: [B3.2]
   5: [B3.4] (ImplicitCastExpr, UserDefinedConversion, _Bool)
   6: bool([B3.5]) (CXXFunctionalCastExpr, NoOp, _Bool)
   7: ![B3.6]
   T: [B3.7] && ...
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (1): B1

void flip()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_p
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   4: *[B1.3]
   5: this
   6: [B1.5]->_M_mask
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, _Bit_type)
   8: [B1.4] ^= [B1.7]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

_Bit_iterator_base(_Bit_type *__x, unsigned int __y) : std::iterator<std::random_access_iterator_tag, bool>(), _M_p(__x), _M_offset(__y)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1:  (CXXConstructExpr, std::iterator<std::random_access_iterator_tag, _Bool>)
   2: iterator([B1.1]) (Base initializer)
   3: __x
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   5: _M_p([B1.4]) (Member initializer)
   6: __y
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, unsigned int)
   8: _M_offset([B1.7]) (Member initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_bump_up()
 [B3 (ENTRY)]
   Succs (1): B2

 [B1]
   1: 0
   2: [B1.1] (ImplicitCastExpr, IntegralCast, unsigned int)
   3: this
   4: [B1.3]->_M_offset
   5: [B1.4] = [B1.2]
   6: this
   7: [B1.6]->_M_p
   8: ++[B1.7]
   Preds (1): B2
   Succs (1): B0

 [B2]
   1: this
   2: [B2.1]->_M_offset
   3: [B2.2]++
   4: _S_word_bit
   5: [B2.4] (ImplicitCastExpr, IntegralCast, int)
   6: int([B2.5]) (CXXFunctionalCastExpr, NoOp, int)
   7: 1
   8: [B2.6] - [B2.7]
   9: [B2.8] (ImplicitCastExpr, IntegralCast, unsigned int)
  10: [B2.3] == [B2.9]
   T: if [B2.10]
   Preds (1): B3
   Succs (2): B1 B0

 [B0 (EXIT)]
   Preds (2): B1 B2

void _M_bump_down()
 [B3 (ENTRY)]
   Succs (1): B2

 [B1]
   1: _S_word_bit
   2: [B1.1] (ImplicitCastExpr, IntegralCast, int)
   3: int([B1.2]) (CXXFunctionalCastExpr, NoOp, int)
   4: 1
   5: [B1.3] - [B1.4]
   6: [B1.5] (ImplicitCastExpr, IntegralCast, unsigned int)
   7: this
   8: [B1.7]->_M_offset
   9: [B1.8] = [B1.6]
  10: this
  11: [B1.10]->_M_p
  12: --[B1.11]
   Preds (1): B2
   Succs (1): B0

 [B2]
   1: this
   2: [B2.1]->_M_offset
   3: [B2.2]--
   4: 0
   5: [B2.4] (ImplicitCastExpr, IntegralCast, unsigned int)
   6: [B2.3] == [B2.5]
   T: if [B2.6]
   Preds (1): B3
   Succs (2): B1 B0

 [B0 (EXIT)]
   Preds (2): B1 B2

void _M_incr(ptrdiff_t __i)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: __n
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, difference_type)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, unsigned int)
   4: static_cast<unsigned int>([B1.3]) (CXXStaticCastExpr, NoOp, unsigned int)
   5: this
   6: [B1.5]->_M_offset
   7: [B1.6] = [B1.4]
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: __n
   2: _S_word_bit
   3: [B2.2] (ImplicitCastExpr, IntegralCast, int)
   4: int([B2.3]) (CXXFunctionalCastExpr, NoOp, int)
   5: [B2.4] (ImplicitCastExpr, IntegralCast, long)
   6: [B2.1] += [B2.5]
   7: this
   8: [B2.7]->_M_p
   9: --[B2.8]
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: __i
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, ptrdiff_t)
   3: this
   4: [B3.3]->_M_offset
   5: [B3.4] (ImplicitCastExpr, LValueToRValue, unsigned int)
   6: [B3.5] (ImplicitCastExpr, IntegralCast, long)
   7: [B3.2] + [B3.6]
   8: difference_type __n = __i + this->_M_offset;
   9: this
  10: [B3.9]->_M_p
  11: __n
  12: [B3.11] (ImplicitCastExpr, LValueToRValue, difference_type)
  13: _S_word_bit
  14: [B3.13] (ImplicitCastExpr, IntegralCast, int)
  15: int([B3.14]) (CXXFunctionalCastExpr, NoOp, int)
  16: [B3.15] (ImplicitCastExpr, IntegralCast, long)
  17: [B3.12] / [B3.16]
  18: [B3.10] += [B3.17]
  19: __n
  20: [B3.19] (ImplicitCastExpr, LValueToRValue, difference_type)
  21: _S_word_bit
  22: [B3.21] (ImplicitCastExpr, IntegralCast, int)
  23: int([B3.22]) (CXXFunctionalCastExpr, NoOp, int)
  24: [B3.23] (ImplicitCastExpr, IntegralCast, long)
  25: [B3.20] % [B3.24]
  26: __n
  27: [B3.26] = [B3.25]
  28: __n
  29: [B3.28] (ImplicitCastExpr, LValueToRValue, difference_type)
  30: 0
  31: [B3.30] (ImplicitCastExpr, IntegralCast, long)
  32: [B3.29] < [B3.31]
   T: if [B3.32]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (1): B1

bool operator==(const std::_Bit_iterator_base &__i) const
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: [B3.7] && [B2.7]
   2: return [B1.1];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: this
   2: [B2.1]->_M_offset
   3: [B2.2] (ImplicitCastExpr, LValueToRValue, unsigned int)
   4: __i
   5: [B2.4]._M_offset
   6: [B2.5] (ImplicitCastExpr, LValueToRValue, unsigned int)
   7: [B2.3] == [B2.6]
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: this
   2: [B3.1]->_M_p
   3: [B3.2] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   4: __i
   5: [B3.4]._M_p
   6: [B3.5] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   7: [B3.3] == [B3.6]
   T: [B3.7] && ...
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (1): B1

bool operator<(const std::_Bit_iterator_base &__i) const
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: [B4.7] || ([B3.7] && [B2.7])
   2: return [B1.1];
   Preds (3): B2 B3 B4
   Succs (1): B0

 [B2]
   1: this
   2: [B2.1]->_M_offset
   3: [B2.2] (ImplicitCastExpr, LValueToRValue, unsigned int)
   4: __i
   5: [B2.4]._M_offset
   6: [B2.5] (ImplicitCastExpr, LValueToRValue, unsigned int)
   7: [B2.3] < [B2.6]
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: this
   2: [B3.1]->_M_p
   3: [B3.2] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   4: __i
   5: [B3.4]._M_p
   6: [B3.5] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   7: [B3.3] == [B3.6]
   T: [B3.7] && ...
   Preds (1): B4
   Succs (2): B2 B1

 [B4]
   1: this
   2: [B4.1]->_M_p
   3: [B4.2] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   4: __i
   5: [B4.4]._M_p
   6: [B4.5] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   7: [B4.3] < [B4.6]
   T: [B4.7] || ...
   Preds (1): B5
   Succs (2): B1 B3

 [B0 (EXIT)]
   Preds (1): B1

bool operator!=(const std::_Bit_iterator_base &__i) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator==
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, _Bool (*)(const struct std::_Bit_iterator_base &) const)
   3: this
   4: *[B1.3]
   5: __i
   6: [B1.4] == [B1.5] (OperatorCall)
   7: !([B1.6])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

bool operator>(const std::_Bit_iterator_base &__i) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator<
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, _Bool (*)(const struct std::_Bit_iterator_base &) const)
   3: __i
   4: this
   5: *[B1.4]
   6: [B1.3] < [B1.5] (OperatorCall)
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

bool operator<=(const std::_Bit_iterator_base &__i) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator<
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, _Bool (*)(const struct std::_Bit_iterator_base &) const)
   3: __i
   4: this
   5: *[B1.4]
   6: [B1.3] < [B1.5] (OperatorCall)
   7: !([B1.6])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

bool operator>=(const std::_Bit_iterator_base &__i) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator<
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, _Bool (*)(const struct std::_Bit_iterator_base &) const)
   3: this
   4: *[B1.3]
   5: __i
   6: [B1.4] < [B1.5] (OperatorCall)
   7: !([B1.6])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline ptrdiff_t operator-(const std::_Bit_iterator_base &__x, const std::_Bit_iterator_base &__y)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: _S_word_bit
   2: [B1.1] (ImplicitCastExpr, IntegralCast, int)
   3: int([B1.2]) (CXXFunctionalCastExpr, NoOp, int)
   4: [B1.3] (ImplicitCastExpr, IntegralCast, long)
   5: __x
   6: [B1.5]._M_p
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   8: __y
   9: [B1.8]._M_p
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
  11: [B1.7] - [B1.10]
  12: [B1.4] * ([B1.11])
  13: __x
  14: [B1.13]._M_offset
  15: [B1.14] (ImplicitCastExpr, LValueToRValue, unsigned int)
  16: [B1.15] (ImplicitCastExpr, IntegralCast, long)
  17: [B1.12] + [B1.16]
  18: __y
  19: [B1.18]._M_offset
  20: [B1.19] (ImplicitCastExpr, LValueToRValue, unsigned int)
  21: [B1.20] (ImplicitCastExpr, IntegralCast, long)
  22: [B1.17] - [B1.21]
  23: return ([B1.22]);
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

_Bit_iterator() : std::_Bit_iterator_base(0, 0)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: 0
   2: [B1.1] (ImplicitCastExpr, NullToPointer, _Bit_type *)
   3: 0
   4: [B1.3] (ImplicitCastExpr, IntegralCast, unsigned int)
   5: [B1.2], [B1.4] (CXXConstructExpr, struct std::_Bit_iterator_base)
   6: _Bit_iterator_base([B1.5]) (Base initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

_Bit_iterator(_Bit_type *__x, unsigned int __y) : std::_Bit_iterator_base(__x, __y)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __x
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   3: __y
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, unsigned int)
   5: [B1.2], [B1.4] (CXXConstructExpr, struct std::_Bit_iterator_base)
   6: _Bit_iterator_base([B1.5]) (Base initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

iterator _M_const_cast() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: *[B1.1]
   3: [B1.2] (CXXConstructExpr, iterator)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

reference operator*() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base *)
   3: [B1.2]->_M_p
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   5: 1UL
   6: this
   7: [B1.6] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base *)
   8: [B1.7]->_M_offset
   9: [B1.8] (ImplicitCastExpr, LValueToRValue, unsigned int)
  10: [B1.5] << [B1.9]
  11: reference([B1.4], [B1.10]) (CXXConstructExpr, reference)
  12: [B1.11] (ImplicitCastExpr, NoOp, const struct std::_Bit_reference)
  13: [B1.12]
  14: [B1.13] (CXXConstructExpr, reference)
  15: return [B1.14];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

iterator &operator++()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base *)
   3: [B1.2]->_M_bump_up
   4: [B1.3]()
   5: this
   6: *[B1.5]
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

iterator operator++(int)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: *[B1.1]
   3: [B1.2] (ImplicitCastExpr, NoOp, const struct std::_Bit_iterator)
   4: [B1.3] (CXXConstructExpr, iterator)
   5: iterator __tmp = *this;
   6: this
   7: [B1.6] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base *)
   8: [B1.7]->_M_bump_up
   9: [B1.8]()
  10: __tmp
  11: [B1.10] (ImplicitCastExpr, NoOp, const struct std::_Bit_iterator)
  12: [B1.11] (CXXConstructExpr, iterator)
  13: return [B1.12];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

iterator &operator--()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base *)
   3: [B1.2]->_M_bump_down
   4: [B1.3]()
   5: this
   6: *[B1.5]
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

iterator operator--(int)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: *[B1.1]
   3: [B1.2] (ImplicitCastExpr, NoOp, const struct std::_Bit_iterator)
   4: [B1.3] (CXXConstructExpr, iterator)
   5: iterator __tmp = *this;
   6: this
   7: [B1.6] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base *)
   8: [B1.7]->_M_bump_down
   9: [B1.8]()
  10: __tmp
  11: [B1.10] (ImplicitCastExpr, NoOp, const struct std::_Bit_iterator)
  12: [B1.11] (CXXConstructExpr, iterator)
  13: return [B1.12];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

iterator &operator+=(difference_type __i)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base *)
   3: [B1.2]->_M_incr
   4: __i
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, difference_type)
   6: [B1.3]([B1.5])
   7: this
   8: *[B1.7]
   9: return [B1.8];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

iterator &operator-=(difference_type __i)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator+=
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, iterator &(*)(difference_type))
   3: this
   4: *[B1.3]
   5: __i
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, difference_type)
   7: -[B1.6]
   8: [B1.4] += [B1.7] (OperatorCall)
   9: this
  10: *[B1.9]
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

iterator operator+(difference_type __i) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: *[B1.1]
   3: [B1.2] (CXXConstructExpr, iterator)
   4: iterator __tmp = *this;
   5: operator+=
   6: [B1.5] (ImplicitCastExpr, FunctionToPointerDecay, iterator &(*)(difference_type))
   7: __tmp
   8: __i
   9: [B1.8] (ImplicitCastExpr, LValueToRValue, difference_type)
  10: [B1.7] += [B1.9] (OperatorCall)
  11: [B1.10] (ImplicitCastExpr, NoOp, const struct std::_Bit_iterator)
  12: [B1.11] (CXXConstructExpr, iterator)
  13: return [B1.12];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

iterator operator-(difference_type __i) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: *[B1.1]
   3: [B1.2] (CXXConstructExpr, iterator)
   4: iterator __tmp = *this;
   5: operator-=
   6: [B1.5] (ImplicitCastExpr, FunctionToPointerDecay, iterator &(*)(difference_type))
   7: __tmp
   8: __i
   9: [B1.8] (ImplicitCastExpr, LValueToRValue, difference_type)
  10: [B1.7] -= [B1.9] (OperatorCall)
  11: [B1.10] (ImplicitCastExpr, NoOp, const struct std::_Bit_iterator)
  12: [B1.11] (CXXConstructExpr, iterator)
  13: return [B1.12];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

reference operator[](difference_type __i) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator*
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, reference (*)(void) const)
   3: operator+
   4: [B1.3] (ImplicitCastExpr, FunctionToPointerDecay, iterator (*)(difference_type) const)
   5: this
   6: *[B1.5]
   7: __i
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, difference_type)
   9: [B1.6] + [B1.8] (OperatorCall)
  10: ([B1.9]) (ImplicitCastExpr, NoOp, const struct std::_Bit_iterator)
  11: * [B1.10] (OperatorCall)
  12: [B1.11] (ImplicitCastExpr, NoOp, const struct std::_Bit_reference)
  13: [B1.12]
  14: [B1.13] (CXXConstructExpr, reference)
  15: return [B1.14];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Bit_iterator operator+(ptrdiff_t __n, const std::_Bit_iterator &__x)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator+
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, iterator (*)(difference_type) const)
   3: __x
   4: __n
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, ptrdiff_t)
   6: [B1.3] + [B1.5] (OperatorCall)
   7: [B1.6] (ImplicitCastExpr, NoOp, const struct std::_Bit_iterator)
   8: [B1.7]
   9: [B1.8] (CXXConstructExpr, struct std::_Bit_iterator)
  10: return [B1.9];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

_Bit_const_iterator() : std::_Bit_iterator_base(0, 0)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: 0
   2: [B1.1] (ImplicitCastExpr, NullToPointer, _Bit_type *)
   3: 0
   4: [B1.3] (ImplicitCastExpr, IntegralCast, unsigned int)
   5: [B1.2], [B1.4] (CXXConstructExpr, struct std::_Bit_iterator_base)
   6: _Bit_iterator_base([B1.5]) (Base initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

_Bit_const_iterator(_Bit_type *__x, unsigned int __y) : std::_Bit_iterator_base(__x, __y)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __x
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   3: __y
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, unsigned int)
   5: [B1.2], [B1.4] (CXXConstructExpr, struct std::_Bit_iterator_base)
   6: _Bit_iterator_base([B1.5]) (Base initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

_Bit_const_iterator(const std::_Bit_iterator &__x) : std::_Bit_iterator_base(__x._M_p, __x._M_offset)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __x
   2: [B1.1] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base)
   3: [B1.2]._M_p
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   5: __x
   6: [B1.5] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base)
   7: [B1.6]._M_offset
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, unsigned int)
   9: [B1.4], [B1.8] (CXXConstructExpr, struct std::_Bit_iterator_base)
  10: _Bit_iterator_base([B1.9]) (Base initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

std::_Bit_iterator _M_const_cast() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base *)
   3: [B1.2]->_M_p
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   5: this
   6: [B1.5] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base *)
   7: [B1.6]->_M_offset
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, unsigned int)
   9: std::_Bit_iterator([B1.4], [B1.8]) (CXXConstructExpr, struct std::_Bit_iterator)
  10: [B1.9] (ImplicitCastExpr, NoOp, const struct std::_Bit_iterator)
  11: [B1.10]
  12: [B1.11] (CXXConstructExpr, struct std::_Bit_iterator)
  13: return [B1.12];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const_reference operator*() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base *)
   3: [B1.2]->_M_p
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   5: 1UL
   6: this
   7: [B1.6] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base *)
   8: [B1.7]->_M_offset
   9: [B1.8] (ImplicitCastExpr, LValueToRValue, unsigned int)
  10: [B1.5] << [B1.9]
  11: std::_Bit_reference([B1.4], [B1.10]) (CXXConstructExpr, struct std::_Bit_reference)
  12: [B1.11] (ImplicitCastExpr, NoOp, const struct std::_Bit_reference)
  13: [B1.12].operator bool
  14: [B1.12]
  15: [B1.14] (ImplicitCastExpr, UserDefinedConversion, _Bool)
  16: return [B1.15];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const_iterator &operator++()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base *)
   3: [B1.2]->_M_bump_up
   4: [B1.3]()
   5: this
   6: *[B1.5]
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const_iterator operator++(int)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: *[B1.1]
   3: [B1.2] (ImplicitCastExpr, NoOp, const struct std::_Bit_const_iterator)
   4: [B1.3] (CXXConstructExpr, const_iterator)
   5: const_iterator __tmp = *this;
   6: this
   7: [B1.6] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base *)
   8: [B1.7]->_M_bump_up
   9: [B1.8]()
  10: __tmp
  11: [B1.10] (ImplicitCastExpr, NoOp, const struct std::_Bit_const_iterator)
  12: [B1.11] (CXXConstructExpr, const_iterator)
  13: return [B1.12];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const_iterator &operator--()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base *)
   3: [B1.2]->_M_bump_down
   4: [B1.3]()
   5: this
   6: *[B1.5]
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const_iterator operator--(int)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: *[B1.1]
   3: [B1.2] (ImplicitCastExpr, NoOp, const struct std::_Bit_const_iterator)
   4: [B1.3] (CXXConstructExpr, const_iterator)
   5: const_iterator __tmp = *this;
   6: this
   7: [B1.6] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base *)
   8: [B1.7]->_M_bump_down
   9: [B1.8]()
  10: __tmp
  11: [B1.10] (ImplicitCastExpr, NoOp, const struct std::_Bit_const_iterator)
  12: [B1.11] (CXXConstructExpr, const_iterator)
  13: return [B1.12];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const_iterator &operator+=(difference_type __i)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base *)
   3: [B1.2]->_M_incr
   4: __i
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, difference_type)
   6: [B1.3]([B1.5])
   7: this
   8: *[B1.7]
   9: return [B1.8];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const_iterator &operator-=(difference_type __i)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator+=
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, const_iterator &(*)(difference_type))
   3: this
   4: *[B1.3]
   5: __i
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, difference_type)
   7: -[B1.6]
   8: [B1.4] += [B1.7] (OperatorCall)
   9: this
  10: *[B1.9]
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const_iterator operator+(difference_type __i) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: *[B1.1]
   3: [B1.2] (CXXConstructExpr, const_iterator)
   4: const_iterator __tmp = *this;
   5: operator+=
   6: [B1.5] (ImplicitCastExpr, FunctionToPointerDecay, const_iterator &(*)(difference_type))
   7: __tmp
   8: __i
   9: [B1.8] (ImplicitCastExpr, LValueToRValue, difference_type)
  10: [B1.7] += [B1.9] (OperatorCall)
  11: [B1.10] (ImplicitCastExpr, NoOp, const struct std::_Bit_const_iterator)
  12: [B1.11] (CXXConstructExpr, const_iterator)
  13: return [B1.12];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const_iterator operator-(difference_type __i) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: *[B1.1]
   3: [B1.2] (CXXConstructExpr, const_iterator)
   4: const_iterator __tmp = *this;
   5: operator-=
   6: [B1.5] (ImplicitCastExpr, FunctionToPointerDecay, const_iterator &(*)(difference_type))
   7: __tmp
   8: __i
   9: [B1.8] (ImplicitCastExpr, LValueToRValue, difference_type)
  10: [B1.7] -= [B1.9] (OperatorCall)
  11: [B1.10] (ImplicitCastExpr, NoOp, const struct std::_Bit_const_iterator)
  12: [B1.11] (CXXConstructExpr, const_iterator)
  13: return [B1.12];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const_reference operator[](difference_type __i) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator*
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, const_reference (*)(void) const)
   3: operator+
   4: [B1.3] (ImplicitCastExpr, FunctionToPointerDecay, const_iterator (*)(difference_type) const)
   5: this
   6: *[B1.5]
   7: __i
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, difference_type)
   9: [B1.6] + [B1.8] (OperatorCall)
  10: ([B1.9]) (ImplicitCastExpr, NoOp, const struct std::_Bit_const_iterator)
  11: * [B1.10] (OperatorCall)
  12: return [B1.11];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Bit_const_iterator operator+(ptrdiff_t __n, const std::_Bit_const_iterator &__x)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator+
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, const_iterator (*)(difference_type) const)
   3: __x
   4: __n
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, ptrdiff_t)
   6: [B1.3] + [B1.5] (OperatorCall)
   7: [B1.6] (ImplicitCastExpr, NoOp, const struct std::_Bit_const_iterator)
   8: [B1.7]
   9: [B1.8] (CXXConstructExpr, struct std::_Bit_const_iterator)
  10: return [B1.9];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline void __fill_bvector(std::_Bit_iterator __first, std::_Bit_iterator __last, bool __x)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: operator++
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, iterator &(*)(void))
   3: __first
   4: ++ [B1.3] (OperatorCall)
   Preds (1): B2
   Succs (1): B3

 [B2]
   1: operator=
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, struct std::_Bit_reference &(*)(_Bool))
   3: operator*
   4: [B2.3] (ImplicitCastExpr, FunctionToPointerDecay, reference (*)(void) const)
   5: __first
   6: [B2.5] (ImplicitCastExpr, NoOp, const struct std::_Bit_iterator)
   7: * [B2.6] (OperatorCall)
   8: __x
   9: [B2.8] (ImplicitCastExpr, LValueToRValue, _Bool)
  10: [B2.7] = [B2.9] (OperatorCall)
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: operator!=
   2: [B3.1] (ImplicitCastExpr, FunctionToPointerDecay, _Bool (*)(const struct std::_Bit_iterator_base &) const)
   3: __first
   4: [B3.3] (ImplicitCastExpr, UncheckedDerivedToBase, const struct std::_Bit_iterator_base)
   5: __last
   6: [B3.5] (ImplicitCastExpr, DerivedToBase, struct std::_Bit_iterator_base)
   7: [B3.6] (ImplicitCastExpr, NoOp, const struct std::_Bit_iterator_base)
   8: [B3.4] != [B3.7] (OperatorCall)
   T: for (; [B3.8]; ...)
   Preds (2): B1 B4
   Succs (2): B2 B0

 [B0 (EXIT)]
   Preds (1): B3

inline void fill(std::_Bit_iterator __first, std::_Bit_iterator __last, const bool &__x)
 [B7 (ENTRY)]
   Succs (1): B6

 [B1]
   1: __fill_bvector
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool))
   3: __first
   4: [B1.3] (ImplicitCastExpr, NoOp, const struct std::_Bit_iterator)
   5: [B1.4] (CXXConstructExpr, struct std::_Bit_iterator)
   6: __last
   7: [B1.6] (ImplicitCastExpr, NoOp, const struct std::_Bit_iterator)
   8: [B1.7] (CXXConstructExpr, struct std::_Bit_iterator)
   9: __x
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, _Bool)
  11: [B1.2]([B1.5], [B1.8], [B1.10])
   Preds (1): B6
   Succs (1): B0

 [B2]
   1: [B5.14] ? [B3.2] : [B4.1]
   2: [B2.1]
   3: [B5.2]([B5.8], [B5.12], [B2.2])
   4: __fill_bvector
   5: [B2.4] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool))
   6: __first
   7: [B2.6] (ImplicitCastExpr, NoOp, const struct std::_Bit_iterator)
   8: [B2.7] (CXXConstructExpr, struct std::_Bit_iterator)
   9: __first
  10: [B2.9] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base)
  11: [B2.10]._M_p
  12: [B2.11] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
  13: 1
  14: [B2.12] + [B2.13]
  15: 0
  16: [B2.15] (ImplicitCastExpr, IntegralCast, unsigned int)
  17: std::_Bit_iterator([B2.14], [B2.16]) (CXXConstructExpr, struct std::_Bit_iterator)
  18: [B2.17] (ImplicitCastExpr, NoOp, const struct std::_Bit_iterator)
  19: [B2.18]
  20: [B2.19] (CXXConstructExpr, struct std::_Bit_iterator)
  21: __x
  22: [B2.21] (ImplicitCastExpr, LValueToRValue, _Bool)
  23: [B2.5]([B2.8], [B2.20], [B2.22])
  24: __fill_bvector
  25: [B2.24] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool))
  26: __last
  27: [B2.26] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base)
  28: [B2.27]._M_p
  29: [B2.28] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
  30: 0
  31: [B2.30] (ImplicitCastExpr, IntegralCast, unsigned int)
  32: std::_Bit_iterator([B2.29], [B2.31]) (CXXConstructExpr, struct std::_Bit_iterator)
  33: [B2.32] (ImplicitCastExpr, NoOp, const struct std::_Bit_iterator)
  34: [B2.33]
  35: [B2.34] (CXXConstructExpr, struct std::_Bit_iterator)
  36: __last
  37: [B2.36] (ImplicitCastExpr, NoOp, const struct std::_Bit_iterator)
  38: [B2.37] (CXXConstructExpr, struct std::_Bit_iterator)
  39: __x
  40: [B2.39] (ImplicitCastExpr, LValueToRValue, _Bool)
  41: [B2.25]([B2.35], [B2.38], [B2.40])
   Preds (2): B3 B4
   Succs (1): B0

 [B3]
   1: 0
   2: ~[B3.1]
   Preds (1): B5
   Succs (1): B2

 [B4]
   1: 0
   Preds (1): B5
   Succs (1): B2

 [B5]
   1: std::fill
   2: [B5.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(unsigned long *, unsigned long *, const int &))
   3: __first
   4: [B5.3] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base)
   5: [B5.4]._M_p
   6: [B5.5] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   7: 1
   8: [B5.6] + [B5.7]
   9: __last
  10: [B5.9] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base)
  11: [B5.10]._M_p
  12: [B5.11] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
  13: __x
  14: [B5.13] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: [B5.14] ? ... : ...
   Preds (1): B6
   Succs (2): B3 B4

 [B6]
   1: __first
   2: [B6.1] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base)
   3: [B6.2]._M_p
   4: [B6.3] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   5: __last
   6: [B6.5] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Bit_iterator_base)
   7: [B6.6]._M_p
   8: [B6.7] (ImplicitCastExpr, LValueToRValue, _Bit_type *)
   9: [B6.4] != [B6.8]
   T: if [B6.9]
   Preds (1): B7
   Succs (2): B5 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

void outCustomersList()
 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: operator<<
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
   3: cout
   4: endl
   5: [B1.4] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
   6: [B1.3] << [B1.5] (OperatorCall)
   Preds (1): B4
   Succs (1): B0

 [B2]
   1: operator++
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, _Self &(*)(void))
   3: it
   4: ++ [B2.3] (OperatorCall)
   Preds (1): B3
   Succs (1): B4

 [B3]
   1: operator<<
   2: [B3.1] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
   3: operator<<
   4: [B3.3] (ImplicitCastExpr, FunctionToPointerDecay, ostream &(*)(ostream &, const class Customer &))
   5: cout
   6: operator*
   7: [B3.6] (ImplicitCastExpr, FunctionToPointerDecay, reference (*)(void) const)
   8: it
   9: [B3.8] (ImplicitCastExpr, NoOp, const struct std::_List_iterator<class Customer>)
  10: * [B3.9] (OperatorCall)
  11: ([B3.10]) (ImplicitCastExpr, NoOp, const class Customer)
  12: [B3.5] << [B3.11] (OperatorCall)
  13: endl
  14: [B3.13] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  15: [B3.12] << [B3.14] (OperatorCall)
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: operator!=
   2: [B4.1] (ImplicitCastExpr, FunctionToPointerDecay, _Bool (*)(const _Self &) const)
   3: it
   4: [B4.3] (ImplicitCastExpr, NoOp, const struct std::_List_iterator<class Customer>)
   5: customers
   6: [B4.5].end
   7: [B4.6]()
   8: [B4.7] (ImplicitCastExpr, NoOp, const _Self)
   9: [B4.8]
  10: [B4.4] != [B4.9] (OperatorCall)
   T: for (...; [B4.10]; ...)
   Preds (2): B2 B5
   Succs (2): B3 B1

 [B5]
   1: operator<<
   2: [B5.1] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
   3: operator<<
   4: [B5.3] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
   5: operator<<
   6: [B5.5] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(unsigned long))
   7: operator<<
   8: [B5.7] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
   9: cout
  10: "Customer list ("
  11: [B5.10] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  12: [B5.9] << [B5.11] (OperatorCall)
  13: customers
  14: [B5.13] (ImplicitCastExpr, NoOp, const class std::__cxx11::list<class Customer, class std::allocator<class Customer> >)
  15: [B5.14].size
  16: [B5.15]()
  17: [B5.12] << [B5.16] (OperatorCall)
  18: " customer(s)):"
  19: [B5.18] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  20: [B5.17] << [B5.19] (OperatorCall)
  21: endl
  22: [B5.21] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  23: [B5.20] << [B5.22] (OperatorCall)
  24: operator<<
  25: [B5.24] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
  26: operator<<
  27: [B5.26] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  28: cout
  29: "--------------------------------------"
  30: [B5.29] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  31: [B5.28] << [B5.30] (OperatorCall)
  32: endl
  33: [B5.32] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  34: [B5.31] << [B5.33] (OperatorCall)
  35: customers
  36: [B5.35].begin
  37: [B5.36]()
  38: [B5.37] (ImplicitCastExpr, NoOp, const struct std::_List_iterator<class Customer>)
  39: [B5.38]
  40: [B5.39] (CXXConstructExpr, list<class Customer>::iterator)
  41: list<Customer>::iterator it = customers.begin();
   Preds (1): B6
   Succs (1): B4

 [B0 (EXIT)]
   Preds (1): B1

void fetchCustomersList()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: customers
   2: [B1.1].push_back
   3: "John"
   4: [B1.3] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   5: 
   6: [B1.4] (CXXConstructExpr, string)
   7: [B1.6] (ImplicitCastExpr, ConstructorConversion, string)
   8: [B1.7] (BindTemporary)
   9: [B1.8] (ImplicitCastExpr, NoOp, const class std::__cxx11::basic_string<char>)
  10: [B1.9]
  11: [B1.10] (CXXConstructExpr, string)
  12: [B1.11] (BindTemporary)
  13: 10
  14: Customer([B1.12], [B1.13]) (CXXConstructExpr, class Customer)
  15: [B1.14] (BindTemporary)
  16: [B1.15] (ImplicitCastExpr, NoOp, const value_type)
  17: [B1.16]
  18: [B1.2]([B1.17])
  19: customers
  20: [B1.19].push_back
  21: "Mike"
  22: [B1.21] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  23: 
  24: [B1.22] (CXXConstructExpr, string)
  25: [B1.24] (ImplicitCastExpr, ConstructorConversion, string)
  26: [B1.25] (BindTemporary)
  27: [B1.26] (ImplicitCastExpr, NoOp, const class std::__cxx11::basic_string<char>)
  28: [B1.27]
  29: [B1.28] (CXXConstructExpr, string)
  30: [B1.29] (BindTemporary)
  31: 0
  32: Customer([B1.30], [B1.31]) (CXXConstructExpr, class Customer)
  33: [B1.32] (BindTemporary)
  34: [B1.33] (ImplicitCastExpr, NoOp, const value_type)
  35: [B1.34]
  36: [B1.20]([B1.35])
  37: customers
  38: [B1.37].push_back
  39: "Peter"
  40: [B1.39] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  41: 
  42: [B1.40] (CXXConstructExpr, string)
  43: [B1.42] (ImplicitCastExpr, ConstructorConversion, string)
  44: [B1.43] (BindTemporary)
  45: [B1.44] (ImplicitCastExpr, NoOp, const class std::__cxx11::basic_string<char>)
  46: [B1.45]
  47: [B1.46] (CXXConstructExpr, string)
  48: [B1.47] (BindTemporary)
  49: 13
  50: Customer([B1.48], [B1.49]) (CXXConstructExpr, class Customer)
  51: [B1.50] (BindTemporary)
  52: [B1.51] (ImplicitCastExpr, NoOp, const value_type)
  53: [B1.52]
  54: [B1.38]([B1.53])
  55: customers
  56: [B1.55].push_back
  57: "Ann"
  58: [B1.57] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  59: 
  60: [B1.58] (CXXConstructExpr, string)
  61: [B1.60] (ImplicitCastExpr, ConstructorConversion, string)
  62: [B1.61] (BindTemporary)
  63: [B1.62] (ImplicitCastExpr, NoOp, const class std::__cxx11::basic_string<char>)
  64: [B1.63]
  65: [B1.64] (CXXConstructExpr, string)
  66: [B1.65] (BindTemporary)
  67: 11
  68: Customer([B1.66], [B1.67]) (CXXConstructExpr, class Customer)
  69: [B1.68] (BindTemporary)
  70: [B1.69] (ImplicitCastExpr, NoOp, const value_type)
  71: [B1.70]
  72: [B1.56]([B1.71])
  73: customers
  74: [B1.73].push_back
  75: "Tom"
  76: [B1.75] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  77: 
  78: [B1.76] (CXXConstructExpr, string)
  79: [B1.78] (ImplicitCastExpr, ConstructorConversion, string)
  80: [B1.79] (BindTemporary)
  81: [B1.80] (ImplicitCastExpr, NoOp, const class std::__cxx11::basic_string<char>)
  82: [B1.81]
  83: [B1.82] (CXXConstructExpr, string)
  84: [B1.83] (BindTemporary)
  85: 9
  86: Customer([B1.84], [B1.85]) (CXXConstructExpr, class Customer)
  87: [B1.86] (BindTemporary)
  88: [B1.87] (ImplicitCastExpr, NoOp, const value_type)
  89: [B1.88]
  90: [B1.74]([B1.89])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

int getDiscountFor(string name)
 [B7 (ENTRY)]
   Succs (1): B6

 [B1]
   1: 1
   2: -[B1.1]
   3: return [B1.2];
   Preds (1): B5
   Succs (1): B0

 [B2]
   1: operator++
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, _Self &(*)(void))
   3: it
   4: ++ [B2.3] (OperatorCall)
   Preds (1): B4
   Succs (1): B5

 [B3]
   1: operator*
   2: [B3.1] (ImplicitCastExpr, FunctionToPointerDecay, reference (*)(void) const)
   3: it
   4: [B3.3] (ImplicitCastExpr, NoOp, const struct std::_List_iterator<class Customer>)
   5: * [B3.4] (OperatorCall)
   6: ([B3.5]) (ImplicitCastExpr, NoOp, const class Customer)
   7: [B3.6].GetDiscount
   8: [B3.7]()
   9: return [B3.8];
   Preds (1): B4
   Succs (1): B0

 [B4]
   1: operator==
   2: [B4.1] (ImplicitCastExpr, FunctionToPointerDecay, typename __gnu_cxx::__enable_if<__is_char<char>::__value, _Bool>::__type (*)(const basic_string<char> &, const basic_string<char> &))
   3: operator*
   4: [B4.3] (ImplicitCastExpr, FunctionToPointerDecay, reference (*)(void) const)
   5: it
   6: [B4.5] (ImplicitCastExpr, NoOp, const struct std::_List_iterator<class Customer>)
   7: * [B4.6] (OperatorCall)
   8: ([B4.7]) (ImplicitCastExpr, NoOp, const class Customer)
   9: [B4.8].GetName
  10: [B4.9]()
  11: [B4.10] (BindTemporary)
  12: [B4.11] (ImplicitCastExpr, NoOp, const basic_string<char>)
  13: [B4.12]
  14: name
  15: [B4.14] (ImplicitCastExpr, NoOp, const basic_string<char>)
  16: [B4.13] == [B4.15] (OperatorCall)
   T: if [B4.16]
   Preds (1): B5
   Succs (2): B3 B2

 [B5]
   1: operator!=
   2: [B5.1] (ImplicitCastExpr, FunctionToPointerDecay, _Bool (*)(const _Self &) const)
   3: it
   4: [B5.3] (ImplicitCastExpr, NoOp, const struct std::_List_iterator<class Customer>)
   5: customers
   6: [B5.5].end
   7: [B5.6]()
   8: [B5.7] (ImplicitCastExpr, NoOp, const _Self)
   9: [B5.8]
  10: [B5.4] != [B5.9] (OperatorCall)
   T: for (...; [B5.10]; ...)
   Preds (2): B2 B6
   Succs (2): B4 B1

 [B6]
   1: customers
   2: [B6.1].begin
   3: [B6.2]()
   4: [B6.3] (ImplicitCastExpr, NoOp, const struct std::_List_iterator<class Customer>)
   5: [B6.4]
   6: [B6.5] (CXXConstructExpr, list<class Customer>::iterator)
   7: list<Customer>::iterator it = customers.begin();
   Preds (1): B7
   Succs (1): B5

 [B0 (EXIT)]
   Preds (2): B1 B3

int readNumberOf(const char *item, int min, int max)
 [B9 (ENTRY)]
   Succs (1): B8

 [B1]
   1: amount
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, int)
   3: return [B1.2];
   4: [B8.38].~basic_string() (Implicit destructor)
   Preds (3): B2 B3 B4
   Succs (1): B0

 [B2]
   1: operator<<
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
   3: operator<<
   4: [B2.3] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, char))
   5: operator<<
   6: [B2.5] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(int))
   7: operator<<
   8: [B2.7] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
   9: operator<<
  10: [B2.9] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  11: operator<<
  12: [B2.11] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  13: cout
  14: "number of "
  15: [B2.14] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  16: [B2.13] << [B2.15] (OperatorCall)
  17: item
  18: [B2.17] (ImplicitCastExpr, LValueToRValue, const char *)
  19: [B2.16] << [B2.18] (OperatorCall)
  20: " cannot be more than "
  21: [B2.20] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  22: [B2.19] << [B2.21] (OperatorCall)
  23: max
  24: [B2.23] (ImplicitCastExpr, LValueToRValue, int)
  25: [B2.22] << [B2.24] (OperatorCall)
  26: '.'
  27: [B2.25] << [B2.26] (OperatorCall)
  28: endl
  29: [B2.28] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  30: [B2.27] << [B2.29] (OperatorCall)
  31: operator<<
  32: [B2.31] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
  33: operator<<
  34: [B2.33] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
  35: operator<<
  36: [B2.35] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  37: operator<<
  38: [B2.37] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(int))
  39: cout
  40: max
  41: [B2.40] (ImplicitCastExpr, LValueToRValue, int)
  42: [B2.39] << [B2.41] (OperatorCall)
  43: " items is taken"
  44: [B2.43] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  45: [B2.42] << [B2.44] (OperatorCall)
  46: endl
  47: [B2.46] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  48: [B2.45] << [B2.47] (OperatorCall)
  49: endl
  50: [B2.49] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  51: [B2.48] << [B2.50] (OperatorCall)
  52: max
  53: [B2.52] (ImplicitCastExpr, LValueToRValue, int)
  54: amount
  55: [B2.54] = [B2.53]
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: amount
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, int)
   3: max
   4: [B3.3] (ImplicitCastExpr, LValueToRValue, int)
   5: [B3.2] > [B3.4]
   T: if [B3.5]
   Preds (1): B5
   Succs (2): B2 B1

 [B4]
   1: operator<<
   2: [B4.1] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
   3: operator<<
   4: [B4.3] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, char))
   5: operator<<
   6: [B4.5] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(int))
   7: operator<<
   8: [B4.7] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
   9: operator<<
  10: [B4.9] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  11: operator<<
  12: [B4.11] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  13: cout
  14: "number of "
  15: [B4.14] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  16: [B4.13] << [B4.15] (OperatorCall)
  17: item
  18: [B4.17] (ImplicitCastExpr, LValueToRValue, const char *)
  19: [B4.16] << [B4.18] (OperatorCall)
  20: " cannot be less than "
  21: [B4.20] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  22: [B4.19] << [B4.21] (OperatorCall)
  23: min
  24: [B4.23] (ImplicitCastExpr, LValueToRValue, int)
  25: [B4.22] << [B4.24] (OperatorCall)
  26: '.'
  27: [B4.25] << [B4.26] (OperatorCall)
  28: endl
  29: [B4.28] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  30: [B4.27] << [B4.29] (OperatorCall)
  31: operator<<
  32: [B4.31] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
  33: operator<<
  34: [B4.33] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
  35: operator<<
  36: [B4.35] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  37: operator<<
  38: [B4.37] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(int))
  39: cout
  40: min
  41: [B4.40] (ImplicitCastExpr, LValueToRValue, int)
  42: [B4.39] << [B4.41] (OperatorCall)
  43: " item is taken"
  44: [B4.43] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  45: [B4.42] << [B4.44] (OperatorCall)
  46: endl
  47: [B4.46] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  48: [B4.45] << [B4.47] (OperatorCall)
  49: endl
  50: [B4.49] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  51: [B4.48] << [B4.50] (OperatorCall)
  52: min
  53: [B4.52] (ImplicitCastExpr, LValueToRValue, int)
  54: amount
  55: [B4.54] = [B4.53]
   Preds (1): B5
   Succs (1): B1

 [B5]
   1: strtol
   2: [B5.1] (ImplicitCastExpr, FunctionToPointerDecay, long (*)(const char *__restrict, char **__restrict, int) throw())
   3: s
   4: [B5.3] (ImplicitCastExpr, NoOp, const class std::__cxx11::basic_string<char>)
   5: [B5.4].c_str
   6: [B5.5]()
   7: 0
   8: [B5.7] (ImplicitCastExpr, NullToPointer, char **)
   9: 10
  10: [B5.2]([B5.6], [B5.8], [B5.9])
  11: [B5.10] (ImplicitCastExpr, IntegralCast, int)
  12: int amount = strtol(s.c_str(), 0, 10);
  13: operator<<
  14: [B5.13] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
  15: cout
  16: endl
  17: [B5.16] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  18: [B5.15] << [B5.17] (OperatorCall)
  19: amount
  20: [B5.19] (ImplicitCastExpr, LValueToRValue, int)
  21: min
  22: [B5.21] (ImplicitCastExpr, LValueToRValue, int)
  23: [B5.20] < [B5.22]
   T: if [B5.23]
   Preds (2): B6(Unreachable) B7
   Succs (2): B4 B3

 [B6 (NORETURN)]
   1: exit
   2: [B6.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(int) __attribute__((noreturn)) throw())
   3: 1
   4: [B6.2]([B6.3])
   Preds (2): B7 B8
   Succs (1): B0

 [B7]
   1: cin
   2: [B7.1] (ImplicitCastExpr, UncheckedDerivedToBase, const class std::basic_ios<char>)
   3: [B7.2].fail
   4: [B7.3]()
   T: if [B8.47] || [B7.4]
   Preds (1): B8
   Succs (2): B6 B5

 [B8]
   1: operator<<
   2: [B8.1] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
   3: operator<<
   4: [B8.3] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(int))
   5: operator<<
   6: [B8.5] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
   7: operator<<
   8: [B8.7] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(int))
   9: operator<<
  10: [B8.9] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  11: operator<<
  12: [B8.11] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  13: operator<<
  14: [B8.13] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  15: cout
  16: "Enter number of "
  17: [B8.16] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  18: [B8.15] << [B8.17] (OperatorCall)
  19: item
  20: [B8.19] (ImplicitCastExpr, LValueToRValue, const char *)
  21: [B8.18] << [B8.20] (OperatorCall)
  22: " ("
  23: [B8.22] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  24: [B8.21] << [B8.23] (OperatorCall)
  25: min
  26: [B8.25] (ImplicitCastExpr, LValueToRValue, int)
  27: [B8.24] << [B8.26] (OperatorCall)
  28: " <= N <= "
  29: [B8.28] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  30: [B8.27] << [B8.29] (OperatorCall)
  31: max
  32: [B8.31] (ImplicitCastExpr, LValueToRValue, int)
  33: [B8.30] << [B8.32] (OperatorCall)
  34: "): "
  35: [B8.34] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  36: [B8.33] << [B8.35] (OperatorCall)
  37:  (CXXConstructExpr, string)
  38: string s;
  39: getline
  40: [B8.39] (ImplicitCastExpr, FunctionToPointerDecay, basic_istream<char, struct std::char_traits<char> > &(*)(basic_istream<char, struct std::char_traits<char> > &, basic_string<char, struct std::char_traits<char>, class std::allocator<char> > &))
  41: cin
  42: s
  43: [B8.40]([B8.41], [B8.42])
  44: cin
  45: [B8.44] (ImplicitCastExpr, UncheckedDerivedToBase, const class std::basic_ios<char>)
  46: [B8.45].eof
  47: [B8.46]()
   T: [B8.47] || ...
   Preds (1): B9
   Succs (2): B6 B7

 [B0 (EXIT)]
   Preds (2): B1 B6

char readChar(const char *prompt, char defaultAnswer)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: operator<<
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
   3: cout
   4: endl
   5: [B1.4] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
   6: [B1.3] << [B1.5] (OperatorCall)
   7: toupper
   8: [B1.7] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(int) throw())
   9: operator[]
  10: [B1.9] (ImplicitCastExpr, FunctionToPointerDecay, reference (*)(size_type))
  11: s
  12: 0
  13: [B1.12] (ImplicitCastExpr, IntegralCast, size_type)
  14: [B1.11][[B1.13]] (OperatorCall)
  15: [B1.14] (ImplicitCastExpr, LValueToRValue, char)
  16: [B1.15] (ImplicitCastExpr, IntegralCast, int)
  17: [B1.8]([B1.16])
  18: [B1.17] (ImplicitCastExpr, IntegralCast, char)
  19: return [B1.18];
  20: [B4.29].~basic_string() (Implicit destructor)
   Preds (2): B2(Unreachable) B3
   Succs (1): B0

 [B2 (NORETURN)]
   1: exit
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(int) __attribute__((noreturn)) throw())
   3: 1
   4: [B2.2]([B2.3])
   Preds (2): B3 B4
   Succs (1): B0

 [B3]
   1: cin
   2: [B3.1] (ImplicitCastExpr, UncheckedDerivedToBase, const class std::basic_ios<char>)
   3: [B3.2].fail
   4: [B3.3]()
   T: if [B4.38] || [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B4]
   1: operator<<
   2: [B4.1] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
   3: operator<<
   4: [B4.3] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, char))
   5: operator<<
   6: [B4.5] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
   7: operator<<
   8: [B4.7] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
   9: cout
  10: prompt
  11: [B4.10] (ImplicitCastExpr, LValueToRValue, const char *)
  12: [B4.9] << [B4.11] (OperatorCall)
  13: ": ["
  14: [B4.13] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  15: [B4.12] << [B4.14] (OperatorCall)
  16: toupper
  17: [B4.16] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(int) throw())
  18: defaultAnswer
  19: [B4.18] (ImplicitCastExpr, LValueToRValue, char)
  20: [B4.19] (ImplicitCastExpr, IntegralCast, int)
  21: [B4.17]([B4.20])
  22: [B4.21] (ImplicitCastExpr, IntegralCast, char)
  23: (char)[B4.22] (CStyleCastExpr, NoOp, char)
  24: [B4.15] << [B4.23] (OperatorCall)
  25: "] "
  26: [B4.25] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  27: [B4.24] << [B4.26] (OperatorCall)
  28:  (CXXConstructExpr, string)
  29: string s;
  30: getline
  31: [B4.30] (ImplicitCastExpr, FunctionToPointerDecay, basic_istream<char, struct std::char_traits<char> > &(*)(basic_istream<char, struct std::char_traits<char> > &, basic_string<char, struct std::char_traits<char>, class std::allocator<char> > &))
  32: cin
  33: s
  34: [B4.31]([B4.32], [B4.33])
  35: cin
  36: [B4.35] (ImplicitCastExpr, UncheckedDerivedToBase, const class std::basic_ios<char>)
  37: [B4.36].eof
  38: [B4.37]()
   T: [B4.38] || ...
   Preds (1): B5
   Succs (2): B2 B3

 [B0 (EXIT)]
   Preds (2): B1 B2

int main(int argc, char **argv)
 [B26 (ENTRY)]
   Succs (1): B25

 [B1]
   1: readNumberOf
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *, int, int))
   3: "sub-modules"
   4: [B1.3] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   5: 1
   6: 10
   7: [B1.2]([B1.4], [B1.5], [B1.6])
   8: amount
   9: [B1.8] = [B1.7]
  10: type
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, int)
  12: 0
  13: amount
  14: [B1.13] (ImplicitCastExpr, LValueToRValue, int)
  15: [B1.11], [B1.12], [B1.14] (CXXConstructExpr, class Memory)
  16: Memory MyMemory(type, 0, amount);
  17: MySystem
  18: [B1.17].AddModule
  19: MyMemory
  20: &[B1.19]
  21: [B1.20] (ImplicitCastExpr, DerivedToBase, class Module *)
  22: [B1.18]([B1.21])
  23: MySystem
  24: [B1.23] (ImplicitCastExpr, NoOp, const class System)
  25: [B1.24].GetSupportMetric
  26: [B1.25]()
  27: int metric = MySystem.GetSupportMetric();
  28: operator<<
  29: [B1.28] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
  30: operator<<
  31: [B1.30] (ImplicitCastExpr, FunctionToPointerDecay, ostream &(*)(ostream &, const class System &))
  32: cout
  33: MySystem
  34: [B1.33] (ImplicitCastExpr, NoOp, const class System)
  35: [B1.32] << [B1.34] (OperatorCall)
  36: endl
  37: [B1.36] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  38: [B1.35] << [B1.37] (OperatorCall)
  39: operator<<
  40: [B1.39] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
  41: operator<<
  42: [B1.41] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, char))
  43: operator<<
  44: [B1.43] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const basic_string<char, struct std::char_traits<char>, class std::allocator<char> > &))
  45: operator<<
  46: [B1.45] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  47: cout
  48: "Overall Quote Support Metric for configured system for customer "
  49: [B1.48] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  50: [B1.47] << [B1.49] (OperatorCall)
  51: customerName
  52: [B1.51] (ImplicitCastExpr, NoOp, const basic_string<char, struct std::char_traits<char>, class std::allocator<char> >)
  53: [B1.50] << [B1.52] (OperatorCall)
  54: ':'
  55: [B1.53] << [B1.54] (OperatorCall)
  56: endl
  57: [B1.56] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  58: [B1.55] << [B1.57] (OperatorCall)
  59: operator<<
  60: [B1.59] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
  61: operator<<
  62: [B1.61] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
  63: operator<<
  64: [B1.63] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  65: cout
  66: "-----------------------------------------------------------------------"
  67: [B1.66] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  68: [B1.65] << [B1.67] (OperatorCall)
  69: endl
  70: [B1.69] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  71: [B1.68] << [B1.70] (OperatorCall)
  72: endl
  73: [B1.72] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  74: [B1.71] << [B1.73] (OperatorCall)
  75: operator<<
  76: [B1.75] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
  77: operator<<
  78: [B1.77] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, char))
  79: operator<<
  80: [B1.79] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(int))
  81: operator<<
  82: [B1.81] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  83: cout
  84: "Quote Discount: "
  85: [B1.84] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  86: [B1.83] << [B1.85] (OperatorCall)
  87: discount
  88: [B1.87] (ImplicitCastExpr, LValueToRValue, int)
  89: [B1.86] << [B1.88] (OperatorCall)
  90: '%'
  91: [B1.89] << [B1.90] (OperatorCall)
  92: endl
  93: [B1.92] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  94: [B1.91] << [B1.93] (OperatorCall)
  95: operator<<
  96: [B1.95] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
  97: operator<<
  98: [B1.97] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
  99: operator<<
 100: [B1.99] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(int))
 101: operator<<
 102: [B1.101] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
 103: cout
 104: "Quote Support Metric: "
 105: [B1.104] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
 106: [B1.103] << [B1.105] (OperatorCall)
 107: metric
 108: [B1.107] (ImplicitCastExpr, LValueToRValue, int)
 109: [B1.106] << [B1.108] (OperatorCall)
 110: endl
 111: [B1.110] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
 112: [B1.109] << [B1.111] (OperatorCall)
 113: endl
 114: [B1.113] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
 115: [B1.112] << [B1.114] (OperatorCall)
 116: 0
 117: return ([B1.116]);
 118: [B1.16].~Memory() (Implicit destructor)
 119: [B2.16].~Disk() (Implicit destructor)
 120: [B8.15].~Cpu() (Implicit destructor)
 121: [B13.2].~System() (Implicit destructor)
 122: [B25.24].~basic_string() (Implicit destructor)
   Preds (3): B3 B5 B6
   Succs (1): B0

 [B2]
   1: readNumberOf
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *, int, int))
   3: "disks"
   4: [B2.3] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   5: 1
   6: 10
   7: [B2.2]([B2.4], [B2.5], [B2.6])
   8: amount
   9: [B2.8] = [B2.7]
  10: type
  11: [B2.10] (ImplicitCastExpr, LValueToRValue, int)
  12: 0
  13: amount
  14: [B2.13] (ImplicitCastExpr, LValueToRValue, int)
  15: [B2.11], [B2.12], [B2.14] (CXXConstructExpr, class Disk)
  16: Disk MyDisk(type, 0, amount);
  17: MySystem
  18: [B2.17].AddModule
  19: MyDisk
  20: &[B2.19]
  21: [B2.20] (ImplicitCastExpr, DerivedToBase, class Module *)
  22: [B2.18]([B2.21])
  23: readChar
  24: [B2.23] (ImplicitCastExpr, FunctionToPointerDecay, char (*)(const char *, char))
  25: "Enter memory module type: (S for standard, F for fast, U for ultra; Q - exit)"
  26: [B2.25] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  27: 'S'
  28: [B2.24]([B2.26], [B2.27])
  29: response
  30: [B2.29] = [B2.28]
  31: response
  32: [B2.31] (ImplicitCastExpr, LValueToRValue, char)
  33: [B2.32] (ImplicitCastExpr, IntegralCast, int)
   T: switch [B2.33]
   Preds (2): B9 B11
   Succs (5): B4 B5 B6 B7 B3

 [B3]
  default:
   1: Memory::STANDARD
   2: [B3.1] (ImplicitCastExpr, IntegralCast, int)
   3: type
   4: [B3.3] = [B3.2]
   T: break;
   Preds (2): B4 B2
   Succs (1): B1

 [B4]
  case 'S':
   Preds (1): B2
   Succs (1): B3

 [B5]
  case 'U':
   1: Memory::ULTRA
   2: [B5.1] (ImplicitCastExpr, IntegralCast, int)
   3: type
   4: [B5.3] = [B5.2]
   T: break;
   Preds (1): B2
   Succs (1): B1

 [B6]
  case 'F':
   1: Memory::FAST
   2: [B6.1] (ImplicitCastExpr, IntegralCast, int)
   3: type
   4: [B6.3] = [B6.2]
   T: break;
   Preds (1): B2
   Succs (1): B1

 [B7]
  case 'Q':
   1: 2
   2: return [B7.1];
   3: [B2.16].~Disk() (Implicit destructor)
   4: [B8.15].~Cpu() (Implicit destructor)
   5: [B13.2].~System() (Implicit destructor)
   6: [B25.24].~basic_string() (Implicit destructor)
   Preds (1): B2
   Succs (1): B0

 [B8]
   1: readNumberOf
   2: [B8.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char *, int, int))
   3: "CPUs"
   4: [B8.3] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   5: 1
   6: 10
   7: [B8.2]([B8.4], [B8.5], [B8.6])
   8: int amount = readNumberOf("CPUs", 1, 10);
   9: type
  10: [B8.9] (ImplicitCastExpr, LValueToRValue, int)
  11: 0
  12: amount
  13: [B8.12] (ImplicitCastExpr, LValueToRValue, int)
  14: [B8.10], [B8.11], [B8.13] (CXXConstructExpr, class Cpu)
  15: Cpu MyCpu(type, 0, amount);
  16: MySystem
  17: [B8.16].AddModule
  18: MyCpu
  19: &[B8.18]
  20: [B8.19] (ImplicitCastExpr, DerivedToBase, class Module *)
  21: [B8.17]([B8.20])
  22: readChar
  23: [B8.22] (ImplicitCastExpr, FunctionToPointerDecay, char (*)(const char *, char))
  24: "Enter disk module type: (S for single disks, R for RAID; Q - exit)"
  25: [B8.24] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  26: 'S'
  27: [B8.23]([B8.25], [B8.26])
  28: response
  29: [B8.28] = [B8.27]
  30: response
  31: [B8.30] (ImplicitCastExpr, LValueToRValue, char)
  32: [B8.31] (ImplicitCastExpr, IntegralCast, int)
   T: switch [B8.32]
   Preds (2): B14 B16
   Succs (4): B10 B11 B12 B9

 [B9]
  default:
   1: Disk::SINGLE
   2: [B9.1] (ImplicitCastExpr, IntegralCast, int)
   3: type
   4: [B9.3] = [B9.2]
   T: break;
   Preds (2): B10 B8
   Succs (1): B2

 [B10]
  case 'S':
   Preds (1): B8
   Succs (1): B9

 [B11]
  case 'R':
   1: Disk::RAID
   2: [B11.1] (ImplicitCastExpr, IntegralCast, int)
   3: type
   4: [B11.3] = [B11.2]
   T: break;
   Preds (1): B8
   Succs (1): B2

 [B12]
  case 'Q':
   1: 2
   2: return [B12.1];
   3: [B8.15].~Cpu() (Implicit destructor)
   4: [B13.2].~System() (Implicit destructor)
   5: [B25.24].~basic_string() (Implicit destructor)
   Preds (1): B8
   Succs (1): B0

 [B13]
   1:  (CXXConstructExpr, class System)
   2: System MySystem;
   3: operator<<
   4: [B13.3] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
   5: operator<<
   6: [B13.5] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, char))
   7: operator<<
   8: [B13.7] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(int))
   9: operator<<
  10: [B13.9] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  11: operator<<
  12: [B13.11] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const basic_string<char, struct std::char_traits<char>, class std::allocator<char> > &))
  13: operator<<
  14: [B13.13] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  15: cout
  16: "Customer "
  17: [B13.16] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  18: [B13.15] << [B13.17] (OperatorCall)
  19: customerName
  20: [B13.19] (ImplicitCastExpr, NoOp, const basic_string<char, struct std::char_traits<char>, class std::allocator<char> >)
  21: [B13.18] << [B13.20] (OperatorCall)
  22: " has discount "
  23: [B13.22] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  24: [B13.21] << [B13.23] (OperatorCall)
  25: discount
  26: [B13.25] (ImplicitCastExpr, LValueToRValue, int)
  27: [B13.24] << [B13.26] (OperatorCall)
  28: '%'
  29: [B13.27] << [B13.28] (OperatorCall)
  30: endl
  31: [B13.30] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  32: [B13.29] << [B13.31] (OperatorCall)
  33: operator<<
  34: [B13.33] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
  35: operator<<
  36: [B13.35] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const basic_string<char, struct std::char_traits<char>, class std::allocator<char> > &))
  37: operator<<
  38: [B13.37] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  39: cout
  40: "Now, let's configure system for "
  41: [B13.40] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  42: [B13.39] << [B13.41] (OperatorCall)
  43: customerName
  44: [B13.43] (ImplicitCastExpr, NoOp, const basic_string<char, struct std::char_traits<char>, class std::allocator<char> >)
  45: [B13.42] << [B13.44] (OperatorCall)
  46: endl
  47: [B13.46] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  48: [B13.45] << [B13.47] (OperatorCall)
  49: readChar
  50: [B13.49] (ImplicitCastExpr, FunctionToPointerDecay, char (*)(const char *, char))
  51: "Enter CPU module type (M for middle, E for high; Q - exit)"
  52: [B13.51] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  53: 'M'
  54: [B13.50]([B13.52], [B13.53])
  55: char response = readChar("Enter CPU module type (M for middle, E for high; Q - exit)", 'M');
  56: 0
  57: int type = 0;
  58: response
  59: [B13.58] (ImplicitCastExpr, LValueToRValue, char)
  60: [B13.59] (ImplicitCastExpr, IntegralCast, int)
   T: switch [B13.60]
   Preds (1): B18
   Succs (4): B15 B16 B17 B14

 [B14]
  default:
   1: Cpu::MEDIUM
   2: [B14.1] (ImplicitCastExpr, IntegralCast, int)
   3: type
   4: [B14.3] = [B14.2]
   T: break;
   Preds (2): B15 B13
   Succs (1): B8

 [B15]
  case 'M':
   Preds (1): B13
   Succs (1): B14

 [B16]
  case 'E':
   1: Cpu::HIGH
   2: [B16.1] (ImplicitCastExpr, IntegralCast, int)
   3: type
   4: [B16.3] = [B16.2]
   T: break;
   Preds (1): B13
   Succs (1): B8

 [B17]
  case 'Q':
   1: 2
   2: return [B17.1];
   3: [B13.2].~System() (Implicit destructor)
   4: [B25.24].~basic_string() (Implicit destructor)
   Preds (1): B13
   Succs (1): B0

 [B18]
   1: discount
   2: [B18.1] (ImplicitCastExpr, LValueToRValue, int)
   3: 1
   4: -[B18.3]
   5: [B18.2] == [B18.4]
   T: do ... while [B18.5]
   Preds (2): B19 B20
   Succs (2): B24 B13

 [B19]
   1: operator<<
   2: [B19.1] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
   3: operator<<
   4: [B19.3] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, char))
   5: operator<<
   6: [B19.5] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const basic_string<char, struct std::char_traits<char>, class std::allocator<char> > &))
   7: operator<<
   8: [B19.7] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
   9: cout
  10: "Cannot get discount value for customer "
  11: [B19.10] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  12: [B19.9] << [B19.11] (OperatorCall)
  13: customerName
  14: [B19.13] (ImplicitCastExpr, NoOp, const basic_string<char, struct std::char_traits<char>, class std::allocator<char> >)
  15: [B19.12] << [B19.14] (OperatorCall)
  16: '.'
  17: [B19.15] << [B19.16] (OperatorCall)
  18: endl
  19: [B19.18] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  20: [B19.17] << [B19.19] (OperatorCall)
  21: operator<<
  22: [B19.21] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
  23: operator<<
  24: [B19.23] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  25: cout
  26: "Please choose customer from list."
  27: [B19.26] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  28: [B19.25] << [B19.27] (OperatorCall)
  29: endl
  30: [B19.29] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  31: [B19.28] << [B19.30] (OperatorCall)
   Preds (1): B20
   Succs (1): B18

 [B20]
   1: getDiscountFor
   2: [B20.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(string))
   3: customerName
   4: [B20.3] (ImplicitCastExpr, NoOp, const class std::__cxx11::basic_string<char>)
   5: [B20.4] (CXXConstructExpr, string)
   6: [B20.5] (BindTemporary)
   7: [B20.2]([B20.6])
   8: discount
   9: [B20.8] = [B20.7]
  10: discount
  11: [B20.10] (ImplicitCastExpr, LValueToRValue, int)
  12: 1
  13: -[B20.12]
  14: [B20.11] == [B20.13]
   T: if [B20.14]
   Preds (2): B21(Unreachable) B22
   Succs (2): B19 B18

 [B21 (NORETURN)]
   1: exit
   2: [B21.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(int) __attribute__((noreturn)) throw())
   3: 1
   4: [B21.2]([B21.3])
   Preds (2): B22 B23
   Succs (1): B0

 [B22]
   1: cin
   2: [B22.1] (ImplicitCastExpr, UncheckedDerivedToBase, const class std::basic_ios<char>)
   3: [B22.2].fail
   4: [B22.3]()
   T: if [B23.18] || [B22.4]
   Preds (1): B23
   Succs (2): B21 B20

 [B23]
   1: outCustomersList
   2: [B23.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(void))
   3: [B23.2]()
   4: operator<<
   5: [B23.4] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
   6: cout
   7: "Enter customer name: "
   8: [B23.7] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   9: [B23.6] << [B23.8] (OperatorCall)
  10: getline
  11: [B23.10] (ImplicitCastExpr, FunctionToPointerDecay, basic_istream<char, struct std::char_traits<char> > &(*)(basic_istream<char, struct std::char_traits<char> > &, basic_string<char, struct std::char_traits<char>, class std::allocator<char> > &))
  12: cin
  13: customerName
  14: [B23.11]([B23.12], [B23.13])
  15: cin
  16: [B23.15] (ImplicitCastExpr, UncheckedDerivedToBase, const class std::basic_ios<char>)
  17: [B23.16].eof
  18: [B23.17]()
   T: [B23.18] || ...
   Preds (2): B24 B25
   Succs (2): B21 B22

 [B24]
   Preds (1): B18
   Succs (1): B23

 [B25]
   1: operator<<
   2: [B25.1] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
   3: operator<<
   4: [B25.3] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
   5: operator<<
   6: [B25.5] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
   7: cout
   8: "Support metric quote program"
   9: [B25.8] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  10: [B25.7] << [B25.9] (OperatorCall)
  11: endl
  12: [B25.11] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  13: [B25.10] << [B25.12] (OperatorCall)
  14: endl
  15: [B25.14] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  16: [B25.13] << [B25.15] (OperatorCall)
  17: fetchCustomersList
  18: [B25.17] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(void))
  19: [B25.18]()
  20: 1
  21: -[B25.20]
  22: int discount = -1;
  23:  (CXXConstructExpr, string)
  24: string customerName;
   Preds (1): B26
   Succs (1): B23

 [B0 (EXIT)]
   Preds (5): B1 B7 B12 B17 B21

inline void fill(unsigned long *__first, unsigned long *__last, const int &__value)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: std::__fill_a
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (*)(unsigned long *, unsigned long *, const int &))
   3: std::__niter_base
   4: [B1.3] (ImplicitCastExpr, FunctionToPointerDecay, unsigned long *(*)(unsigned long *))
   5: __first
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, unsigned long *)
   7: [B1.4]([B1.6])
   8: std::__niter_base
   9: [B1.8] (ImplicitCastExpr, FunctionToPointerDecay, unsigned long *(*)(unsigned long *))
  10: __last
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, unsigned long *)
  12: [B1.9]([B1.11])
  13: __value
  14: [B1.2]([B1.7], [B1.12], [B1.13])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline unsigned long *__niter_base(unsigned long *__it)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __it
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, unsigned long *)
   3: return [B1.2];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type __fill_a(unsigned long *__first, unsigned long *__last, const int &__value)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: __first
   2: ++[B1.1]
   Preds (1): B2
   Succs (1): B3

 [B2]
   1: __tmp
   2: [B2.1] (ImplicitCastExpr, LValueToRValue, int)
   3: [B2.2] (ImplicitCastExpr, IntegralCast, unsigned long)
   4: __first
   5: [B2.4] (ImplicitCastExpr, LValueToRValue, unsigned long *)
   6: *[B2.5]
   7: [B2.6] = [B2.3]
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: __first
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, unsigned long *)
   3: __last
   4: [B3.3] (ImplicitCastExpr, LValueToRValue, unsigned long *)
   5: [B3.2] != [B3.4]
   T: for (; [B3.5]; ...)
   Preds (2): B1 B4
   Succs (2): B2 B0

 [B4]
   1: __value
   2: [B4.1] (ImplicitCastExpr, LValueToRValue, int)
   3: const int __tmp = __value;
   Preds (1): B5
   Succs (1): B3

 [B0 (EXIT)]
   Preds (1): B3

list() : _Base()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1:  (CXXConstructExpr, _List_base<class Customer, class std::allocator<class Customer> >)
   2: _List_base([B1.1]) (Base initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

_List_base() : _M_impl()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1:  (CXXConstructExpr, struct std::__cxx11::_List_base<class Customer, class std::allocator<class Customer> >::_List_impl)
   2: _M_impl([B1.1]) (Member initializer)
   3: this
   4: [B1.3]->_M_init
   5: [B1.4]()
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

_List_impl() : _Node_alloc_type(), _M_node()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1:  (CXXConstructExpr, _Node_alloc_type)
   2: allocator([B1.1]) (Base initializer)
   3:  (CXXConstructExpr, _List_node<size_t>)
   4: _M_node([B1.3]) (Member initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

allocator() throw() : __gnu_cxx::new_allocator<_List_node<Customer> >()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1:  (CXXConstructExpr, __gnu_cxx::new_allocator<_List_node<Customer> >)
   2: new_allocator([B1.1]) (Base initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

new_allocator() throw()
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

~__gnu_cxx::new_allocator<std::_List_node<Customer> >() throw()
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

~std::allocator<std::_List_node<Customer> >() throw()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: ~new_allocator() (Base object destructor)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_init()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_impl
   3: [B1.2]._M_node
   4: &[B1.3]
   5: [B1.4] (ImplicitCastExpr, DerivedToBase, struct std::__detail::_List_node_base *)
   6: this
   7: [B1.6]->_M_impl
   8: [B1.7]._M_node
   9: [B1.8] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::__detail::_List_node_base)
  10: [B1.9]._M_next
  11: [B1.10] = [B1.5]
  12: this
  13: [B1.12]->_M_impl
  14: [B1.13]._M_node
  15: &[B1.14]
  16: [B1.15] (ImplicitCastExpr, DerivedToBase, struct std::__detail::_List_node_base *)
  17: this
  18: [B1.17]->_M_impl
  19: [B1.18]._M_node
  20: [B1.19] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::__detail::_List_node_base)
  21: [B1.20]._M_prev
  22: [B1.21] = [B1.16]
  23: this
  24: [B1.23]->_M_set_size
  25: 0
  26: [B1.25] (ImplicitCastExpr, IntegralCast, size_t)
  27: [B1.24]([B1.26])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_set_size(size_t __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __n
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: this
   4: [B1.3]->_M_impl
   5: [B1.4]._M_node
   6: [B1.5]._M_valptr
   7: [B1.6]()
   8: *[B1.7]
   9: [B1.8] = [B1.2]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

unsigned long *_M_valptr()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: std::__addressof
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, unsigned long *(*)(unsigned long &))
   3: this
   4: [B1.3]->_M_data
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline unsigned long *__addressof(unsigned long &__r)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __r
   2: reinterpret_cast<const volatile char &>([B1.1]) (CXXReinterpretCastExpr, LValueBitCast, const volatile char)
   3: const_cast<char &>([B1.2]) (CXXConstCastExpr, NoOp, char)
   4: &[B1.3]
   5: reinterpret_cast<unsigned long *>([B1.4]) (CXXReinterpretCastExpr, BitCast, unsigned long *)
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

~std::__cxx11::_List_base<Customer, std::allocator<Customer> >()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_clear
   3: [B1.2]()
   4: this->_M_impl.~_List_impl() (Member object destructor)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_clear()
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   Preds (1): B2
   Succs (1): B3

 [B2]
   1: __cur
   2: [B2.1] (ImplicitCastExpr, LValueToRValue, __detail::_List_node_base *)
   3: static_cast<_Node *>([B2.2]) (CXXStaticCastExpr, BaseToDerived, _Node *)
   4: _Node *__tmp = static_cast<_Node *>(__cur);
   5: __tmp
   6: [B2.5] (ImplicitCastExpr, LValueToRValue, _Node *)
   7: [B2.6] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::__detail::_List_node_base *)
   8: [B2.7]->_M_next
   9: [B2.8] (ImplicitCastExpr, LValueToRValue, struct std::__detail::_List_node_base *)
  10: __cur
  11: [B2.10] = [B2.9]
  12: __tmp
  13: [B2.12] (ImplicitCastExpr, LValueToRValue, _Node *)
  14: [B2.13]->_M_valptr
  15: [B2.14]()
  16: Customer *__val = __tmp->_M_valptr();
  17: this
  18: [B2.17]->_M_get_Node_allocator
  19: [B2.18]()
  20: [B2.19] (ImplicitCastExpr, NoOp, const allocator<struct std::_List_node<class Customer> >)
  21: [B2.20] (CXXConstructExpr, _Tp_alloc_type)
  22: [B2.21] (BindTemporary)
  23: _Tp_alloc_type([B2.22]) (CXXFunctionalCastExpr, ConstructorConversion, _Tp_alloc_type)
  24: [B2.23] (ImplicitCastExpr, UncheckedDerivedToBase, class __gnu_cxx::new_allocator<class Customer>)
  25: [B2.24].destroy
  26: __val
  27: [B2.26] (ImplicitCastExpr, LValueToRValue, class Customer *)
  28: [B2.25]([B2.27])
  29: this
  30: [B2.29]->_M_put_node
  31: __tmp
  32: [B2.31] (ImplicitCastExpr, LValueToRValue, _Node *)
  33: [B2.30]([B2.32])
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: __cur
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, __detail::_List_node_base *)
   3: this
   4: [B3.3]->_M_impl
   5: [B3.4]._M_node
   6: &[B3.5]
   7: [B3.6] (ImplicitCastExpr, DerivedToBase, struct std::__detail::_List_node_base *)
   8: [B3.2] != [B3.7]
   T: while [B3.8]
   Preds (2): B1 B4
   Succs (2): B2 B0

 [B4]
   1: this
   2: [B4.1]->_M_impl
   3: [B4.2]._M_node
   4: [B4.3] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::__detail::_List_node_base)
   5: [B4.4]._M_next
   6: [B4.5] (ImplicitCastExpr, LValueToRValue, struct std::__detail::_List_node_base *)
   7: __detail::_List_node_base *__cur = this->_M_impl._M_node._M_next;
   Preds (1): B5
   Succs (1): B3

 [B0 (EXIT)]
   Preds (1): B3

Customer *_M_valptr()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: std::__addressof
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, class Customer *(*)(class Customer &))
   3: this
   4: [B1.3]->_M_data
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline Customer *__addressof(Customer &__r)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __r
   2: reinterpret_cast<const volatile char &>([B1.1]) (CXXReinterpretCastExpr, LValueBitCast, const volatile char)
   3: const_cast<char &>([B1.2]) (CXXConstCastExpr, NoOp, char)
   4: &[B1.3]
   5: reinterpret_cast<Customer *>([B1.4]) (CXXReinterpretCastExpr, BitCast, class Customer *)
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

_Node_alloc_type &_M_get_Node_allocator()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_impl
   3: [B1.2] (ImplicitCastExpr, DerivedToBase, _Node_alloc_type)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

allocator(const allocator<std::_List_node<Customer> > &) throw() : __gnu_cxx::new_allocator<Customer>()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1:  (CXXConstructExpr, __gnu_cxx::new_allocator<Customer>)
   2: new_allocator([B1.1]) (Base initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

new_allocator() throw()
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

~__gnu_cxx::new_allocator<Customer>() throw()
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

~std::allocator<Customer>() throw()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: ~new_allocator() (Base object destructor)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void destroy(pointer __p)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __p
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, pointer)
   3: [B1.2]->~Customer
   4: [B1.3]()
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_put_node(typename _Node_alloc_traits::pointer __p)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: _Node_alloc_traits::deallocate
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(class std::allocator<struct std::_List_node<class Customer> > &, pointer, size_type))
   3: this
   4: [B1.3]->_M_impl
   5: [B1.4] (ImplicitCastExpr, DerivedToBase, class std::allocator<struct std::_List_node<class Customer> >)
   6: __p
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, typename _Node_alloc_traits::pointer)
   8: 1
   9: [B1.8] (ImplicitCastExpr, IntegralCast, size_type)
  10: [B1.2]([B1.5], [B1.7], [B1.9])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static void deallocate(std::allocator<std::_List_node<Customer> > &__a, pointer __p, size_type __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, UncheckedDerivedToBase, class __gnu_cxx::new_allocator<struct std::_List_node<class Customer> >)
   3: [B1.2].deallocate
   4: __p
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, pointer)
   6: __n
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, size_type)
   8: [B1.3]([B1.5], [B1.7])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void deallocate(pointer __p, size_type)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: ::operator delete
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(void *) throw())
   3: __p
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, pointer)
   5: [B1.4] (ImplicitCastExpr, BitCast, void *)
   6: [B1.2]([B1.5])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: __out
   2: return [B1.1];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: __ostream_insert
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *, streamsize))
   3: __out
   4: __s
   5: [B2.4] (ImplicitCastExpr, LValueToRValue, const char *)
   6: char_traits<char>::length
   7: [B2.6] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(const char_type *))
   8: __s
   9: [B2.8] (ImplicitCastExpr, LValueToRValue, const char *)
  10: [B2.7]([B2.9])
  11: [B2.10] (ImplicitCastExpr, IntegralCast, streamsize)
  12: static_cast<streamsize>([B2.11]) (CXXStaticCastExpr, NoOp, streamsize)
  13: [B2.2]([B2.3], [B2.5], [B2.12])
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: __out
   2: [B3.1] (ImplicitCastExpr, UncheckedDerivedToBase, class std::basic_ios<char>)
   3: [B3.2].setstate
   4: ios_base::badbit
   5: [B3.4] (ImplicitCastExpr, LValueToRValue, iostate)
   6: [B3.3]([B3.5])
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: __s
   2: [B4.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: [B4.2] (ImplicitCastExpr, PointerToBoolean, _Bool)
   4: ![B4.3]
   T: if [B4.4]
   Preds (1): B5
   Succs (2): B3 B2

 [B0 (EXIT)]
   Preds (1): B1

void setstate(iostate __state)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->clear
   3: operator|
   4: [B1.3] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate))
   5: this
   6: [B1.5] (ImplicitCastExpr, NoOp, const class std::basic_ios<char> *)
   7: [B1.6]->rdstate
   8: [B1.7]()
   9: __state
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, iostate)
  11: [B1.8] | [B1.10] (OperatorCall)
  12: [B1.2]([B1.11])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

iostate rdstate() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1] (ImplicitCastExpr, UncheckedDerivedToBase, class std::ios_base *)
   3: [B1.2]->_M_streambuf_state
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, iostate)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

size_type size() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1] (ImplicitCastExpr, UncheckedDerivedToBase, const class std::__cxx11::_List_base<class Customer, class std::allocator<class Customer> > *)
   3: [B1.2]->_M_node_count
   4: [B1.3]()
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

size_t _M_node_count() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_impl
   3: [B1.2]._M_node
   4: [B1.3]._M_valptr
   5: [B1.4]()
   6: *[B1.5]
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, unsigned long)
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const unsigned long *_M_valptr() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: std::__addressof
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, const unsigned long *(*)(const unsigned long &))
   3: this
   4: [B1.3]->_M_data
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline const unsigned long *__addressof(const unsigned long &__r)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __r
   2: reinterpret_cast<const volatile char &>([B1.1]) (CXXReinterpretCastExpr, LValueBitCast, const volatile char)
   3: const_cast<char &>([B1.2]) (CXXConstCastExpr, NoOp, char)
   4: &[B1.3]
   5: reinterpret_cast<const unsigned long *>([B1.4]) (CXXReinterpretCastExpr, BitCast, const unsigned long *)
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

__ostream_type &operator<<(unsigned long __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_insert
   3: __n
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, unsigned long)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline basic_ostream<char, std::char_traits<char> > &endl(basic_ostream<char, std::char_traits<char> > &__os)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: flush
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
   3: __os
   4: [B1.3].put
   5: __os
   6: [B1.5] (ImplicitCastExpr, UncheckedDerivedToBase, const class std::basic_ios<char>)
   7: [B1.6].widen
   8: '\n'
   9: [B1.7]([B1.8])
  10: [B1.4]([B1.9])
  11: [B1.2]([B1.10])
  12: return [B1.11];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

char_type widen(char __c) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __check_facet
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, const class std::ctype<char> &(*)(const class std::ctype<char> *))
   3: this
   4: [B1.3]->_M_ctype
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, const __ctype_type *)
   6: [B1.2]([B1.5])
   7: [B1.6].widen
   8: __c
   9: [B1.8] (ImplicitCastExpr, LValueToRValue, char)
  10: [B1.7]([B1.9])
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline const std::ctype<char> &__check_facet(const std::ctype<char> *__f)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: __f
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, const class std::ctype<char> *)
   3: *[B1.2]
   4: return [B1.3];
   Preds (2): B2(Unreachable) B3
   Succs (1): B0

 [B2 (NORETURN)]
   1: __throw_bad_cast
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(void) __attribute__((noreturn)))
   3: [B2.2]()
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __f
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, const class std::ctype<char> *)
   3: [B3.2] (ImplicitCastExpr, PointerToBoolean, _Bool)
   4: ![B3.3]
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

inline basic_ostream<char, std::char_traits<char> > &flush(basic_ostream<char, std::char_traits<char> > &__os)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __os
   2: [B1.1].flush
   3: [B1.2]()
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

__ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &))
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __pf
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, __ostream_type &(*)(__ostream_type &))
   3: this
   4: *[B1.3]
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

iterator begin()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1] (ImplicitCastExpr, UncheckedDerivedToBase, class std::__cxx11::_List_base<class Customer, class std::allocator<class Customer> > *)
   3: [B1.2]->_M_impl
   4: [B1.3]._M_node
   5: [B1.4] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::__detail::_List_node_base)
   6: [B1.5]._M_next
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, struct std::__detail::_List_node_base *)
   8: [B1.7] (CXXConstructExpr, iterator)
   9: iterator([B1.8]) (CXXFunctionalCastExpr, ConstructorConversion, iterator)
  10: [B1.9] (ImplicitCastExpr, NoOp, const struct std::_List_iterator<class Customer>)
  11: [B1.10]
  12: [B1.11] (CXXConstructExpr, iterator)
  13: return [B1.12];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

explicit _List_iterator(__detail::_List_node_base *__x) : _M_node(__x)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __x
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, __detail::_List_node_base *)
   3: _M_node([B1.2]) (Member initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

iterator end()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1] (ImplicitCastExpr, UncheckedDerivedToBase, class std::__cxx11::_List_base<class Customer, class std::allocator<class Customer> > *)
   3: [B1.2]->_M_impl
   4: [B1.3]._M_node
   5: &[B1.4]
   6: [B1.5] (ImplicitCastExpr, DerivedToBase, __detail::_List_node_base *)
   7: [B1.6] (CXXConstructExpr, iterator)
   8: iterator([B1.7]) (CXXFunctionalCastExpr, ConstructorConversion, iterator)
   9: [B1.8] (ImplicitCastExpr, NoOp, const struct std::_List_iterator<class Customer>)
  10: [B1.9]
  11: [B1.10] (CXXConstructExpr, iterator)
  12: return [B1.11];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

bool operator!=(const _Self &__x) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_node
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, __detail::_List_node_base *)
   4: __x
   5: [B1.4]._M_node
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, __detail::_List_node_base *)
   7: [B1.3] != [B1.6]
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

_Self &operator++()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_node
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, __detail::_List_node_base *)
   4: [B1.3]->_M_next
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, struct std::__detail::_List_node_base *)
   6: this
   7: [B1.6]->_M_node
   8: [B1.7] = [B1.5]
   9: this
  10: *[B1.9]
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

reference operator*() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_node
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, __detail::_List_node_base *)
   4: static_cast<_Node *>([B1.3]) (CXXStaticCastExpr, BaseToDerived, _Node *)
   5: [B1.4]->_M_valptr
   6: [B1.5]()
   7: *[B1.6]
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void push_back(const value_type &__x)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_insert
   3: this
   4: [B1.3]->end
   5: [B1.4]()
   6: [B1.5] (ImplicitCastExpr, NoOp, const struct std::_List_iterator<class Customer>)
   7: [B1.6]
   8: [B1.7] (CXXConstructExpr, iterator)
   9: __x
  10: [B1.2]([B1.8], [B1.9])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_insert(iterator __position, const value_type &__x)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_create_node
   3: __x
   4: [B1.2]([B1.3])
   5: _Node *__tmp = this->_M_create_node(__x);
   6: __tmp
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, _Node *)
   8: [B1.7] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::__detail::_List_node_base *)
   9: [B1.8]->_M_hook
  10: __position
  11: [B1.10]._M_node
  12: [B1.11] (ImplicitCastExpr, LValueToRValue, __detail::_List_node_base *)
  13: [B1.9]([B1.12])
  14: this
  15: [B1.14] (ImplicitCastExpr, UncheckedDerivedToBase, class std::__cxx11::_List_base<class Customer, class std::allocator<class Customer> > *)
  16: [B1.15]->_M_inc_size
  17: 1
  18: [B1.17] (ImplicitCastExpr, IntegralCast, size_t)
  19: [B1.16]([B1.18])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

_Node *_M_create_node(const value_type &__x)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: __p
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, _Node *)
   3: return [B1.2];
   Preds (1): B4
   Succs (1): B0

 [B2]
   T: try ...
   Succs (1): B3

 [B3]
  catch (...):
   1: catch (...) {
    [B3.7];
    [B3.8];
}
   2: this
   3: [B3.2] (ImplicitCastExpr, UncheckedDerivedToBase, class std::__cxx11::_List_base<class Customer, class std::allocator<class Customer> > *)
   4: [B3.3]->_M_put_node
   5: __p
   6: [B3.5] (ImplicitCastExpr, LValueToRValue, _Node *)
   7: [B3.4]([B3.6])
   8: throw
   Preds (1): B2
   Succs (1): B0

 [B4]
   1: this
   2: [B4.1] (ImplicitCastExpr, UncheckedDerivedToBase, class std::__cxx11::_List_base<class Customer, class std::allocator<class Customer> > *)
   3: [B4.2]->_M_get_node
   4: [B4.3]()
   5: _Node *__p = this->_M_get_node();
   6: this
   7: [B4.6] (ImplicitCastExpr, UncheckedDerivedToBase, class std::__cxx11::_List_base<class Customer, class std::allocator<class Customer> > *)
   8: [B4.7]->_M_get_Node_allocator
   9: [B4.8]()
  10: [B4.9] (ImplicitCastExpr, NoOp, const allocator<struct std::_List_node<class Customer> >)
  11: [B4.10] (CXXConstructExpr, _Tp_alloc_type)
  12: _Tp_alloc_type __alloc(this->_M_get_Node_allocator());
  13: __alloc
  14: [B4.13] (ImplicitCastExpr, UncheckedDerivedToBase, class __gnu_cxx::new_allocator<class Customer>)
  15: [B4.14].construct
  16: __p
  17: [B4.16] (ImplicitCastExpr, LValueToRValue, _Node *)
  18: [B4.17]->_M_valptr
  19: [B4.18]()
  20: __x
  21: [B4.15]([B4.19], [B4.20])
  22: [B4.12].~allocator() (Implicit destructor)
   Preds (1): B5
   Succs (1): B1

 [B0 (EXIT)]
   Preds (2): B1 B3

typename _Node_alloc_traits::pointer _M_get_node()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: _Node_alloc_traits::allocate
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, pointer (*)(class std::allocator<struct std::_List_node<class Customer> > &, size_type))
   3: this
   4: [B1.3]->_M_impl
   5: [B1.4] (ImplicitCastExpr, DerivedToBase, class std::allocator<struct std::_List_node<class Customer> >)
   6: 1
   7: [B1.6] (ImplicitCastExpr, IntegralCast, size_type)
   8: [B1.2]([B1.5], [B1.7])
   9: return [B1.8];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static pointer allocate(std::allocator<std::_List_node<Customer> > &__a, size_type __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, UncheckedDerivedToBase, class __gnu_cxx::new_allocator<struct std::_List_node<class Customer> >)
   3: [B1.2].allocate
   4: __n
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, size_type)
   6: 
   7: [B1.3]([B1.5])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

pointer allocate(size_type __n, const void * = 0)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: ::operator new
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void *(*)(std::size_t) throw(std::bad_alloc))
   3: __n
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, size_type)
   5: sizeof(std::_List_node<Customer>)
   6: [B1.4] * [B1.5]
   7: [B1.2]([B1.6])
   8: static_cast<std::_List_node<Customer> *>([B1.7]) (CXXStaticCastExpr, BitCast, struct std::_List_node<class Customer> *)
   9: return [B1.8];
   Preds (2): B2(Unreachable) B3
   Succs (1): B0

 [B2 (NORETURN)]
   1: std::__throw_bad_alloc
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(void) __attribute__((noreturn)))
   3: [B2.2]()
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_type)
   3: this
   4: [B3.3] (ImplicitCastExpr, NoOp, const class __gnu_cxx::new_allocator<struct std::_List_node<class Customer> > *)
   5: [B3.4]->max_size
   6: [B3.5]()
   7: [B3.2] > [B3.6]
   T: if [B3.7]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

size_type max_size() const throw()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: 1
   2: -[B1.1]
   3: [B1.2] (ImplicitCastExpr, IntegralCast, size_t)
   4: size_t([B1.3]) (CXXFunctionalCastExpr, NoOp, size_t)
   5: sizeof(std::_List_node<Customer>)
   6: [B1.4] / [B1.5]
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void construct(pointer __p, const Customer &__val)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __p
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, pointer)
   3: [B1.2] (ImplicitCastExpr, BitCast, void *)
   4: (void *)[B1.3] (CStyleCastExpr, NoOp, void *)
   5: CFGNewAllocator(Customer *)
   6: __val
   7: [B1.6] (CXXConstructExpr, class Customer)
   8: ::new ([B1.4]) Customer([B1.7])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

basic_string(const std::__cxx11::basic_string<char> &__str) : _M_dataplus(this->_M_local_data(), _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_local_data
   3: [B1.2]()
   4: _Alloc_traits::_S_select_on_copy
   5: [B1.4] (ImplicitCastExpr, FunctionToPointerDecay, const class std::allocator<char> &(*)(const class std::allocator<char> &))
   6: __str
   7: [B1.6]._M_get_allocator
   8: [B1.7]()
   9: [B1.5]([B1.8])
  10: [B1.3], [B1.9] (CXXConstructExpr, struct std::__cxx11::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider)
  11: _M_dataplus([B1.10]) (Member initializer)
  12: this
  13: [B1.12]->_M_construct
  14: __str
  15: [B1.14]._M_data
  16: [B1.15]()
  17: __str
  18: [B1.17]._M_data
  19: [B1.18]()
  20: __str
  21: [B1.20].length
  22: [B1.21]()
  23: [B1.19] + [B1.22]
  24: [B1.13]([B1.16], [B1.23])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

pointer _M_local_data()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->
   3: [B1.2]_M_local_buf
   4: [B1.3] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   5: pointer([B1.4]) (CXXFunctionalCastExpr, NoOp, pointer)
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static const std::allocator<char> &_S_select_on_copy(const std::allocator<char> &__a)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: return [B1.1];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const allocator_type &_M_get_allocator() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_dataplus
   3: [B1.2] (ImplicitCastExpr, DerivedToBase, const allocator_type)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

_Alloc_hider(pointer __dat, const std::allocator<char> &__a = std::allocator<char>()) : allocator_type(__a), _M_p(__dat)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (CXXConstructExpr, allocator_type)
   3: allocator([B1.2]) (Base initializer)
   4: __dat
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, pointer)
   6: _M_p([B1.5]) (Member initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

allocator(const std::allocator<char> &__a) throw() : __gnu_cxx::new_allocator<char>(__a)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, DerivedToBase, const class __gnu_cxx::new_allocator<char>)
   3: [B1.2] (CXXConstructExpr, __gnu_cxx::new_allocator<char>)
   4: new_allocator([B1.3]) (Base initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

new_allocator(const __gnu_cxx::new_allocator<char> &) throw()
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

~__gnu_cxx::new_allocator<char>() throw()
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

~std::allocator<char>() throw()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: ~new_allocator() (Base object destructor)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

pointer _M_data() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_dataplus
   3: [B1.2]._M_p
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, pointer)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

size_type length() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_string_length
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, size_type)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_construct(char *__beg, char *__end)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_construct_aux
   3: __beg
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: __end
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, char *)
   7: _Integral() (CXXConstructExpr, _Integral)
   8: [B1.7] (ImplicitCastExpr, NoOp, const struct std::__false_type)
   9: [B1.8]
  10: [B1.9] (CXXConstructExpr, std::__false_type)
  11: [B1.2]([B1.4], [B1.6], [B1.10])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_construct_aux(char *__beg, char *__end, std::__false_type)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_construct
   3: __beg
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: __end
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, char *)
   7: _Tag() (CXXConstructExpr, _Tag)
   8: [B1.7] (ImplicitCastExpr, DerivedToBase, struct std::forward_iterator_tag)
   9: [B1.8] (ImplicitCastExpr, NoOp, const struct std::forward_iterator_tag)
  10: [B1.9]
  11: [B1.10] (CXXConstructExpr, std::forward_iterator_tag)
  12: [B1.2]([B1.4], [B1.6], [B1.11])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_construct(char *__beg, char *__end, std::forward_iterator_tag)
 [B10 (ENTRY)]
   Succs (1): B9

 [B1]
   1: this
   2: [B1.1]->_M_set_length
   3: __dnew
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, size_type)
   5: [B1.2]([B1.4])
   Preds (1): B4
   Succs (1): B0

 [B2]
   T: try ...
   Succs (1): B3

 [B3]
  catch (...):
   1: catch (...) {
    [B3.4];
    [B3.5];
}
   2: this
   3: [B3.2]->_M_dispose
   4: [B3.3]()
   5: throw
   Preds (1): B2
   Succs (1): B0

 [B4]
   1: this
   2: [B4.1]->_S_copy_chars
   3: [B4.2] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(char *, char *, char *))
   4: this
   5: [B4.4] (ImplicitCastExpr, NoOp, const class std::__cxx11::basic_string<char> *)
   6: [B4.5]->_M_data
   7: [B4.6]()
   8: __beg
   9: [B4.8] (ImplicitCastExpr, LValueToRValue, char *)
  10: __end
  11: [B4.10] (ImplicitCastExpr, LValueToRValue, char *)
  12: [B4.3]([B4.7], [B4.9], [B4.11])
   Preds (2): B5 B6
   Succs (1): B1

 [B5]
   1: this
   2: [B5.1]->_M_data
   3: this
   4: [B5.3]->_M_create
   5: __dnew
   6: 0
   7: [B5.6] (ImplicitCastExpr, IntegralCast, size_type)
   8: size_type([B5.7]) (CXXFunctionalCastExpr, NoOp, size_type)
   9: [B5.4]([B5.5], [B5.8])
  10: [B5.2]([B5.9])
  11: this
  12: [B5.11]->_M_capacity
  13: __dnew
  14: [B5.13] (ImplicitCastExpr, LValueToRValue, size_type)
  15: [B5.12]([B5.14])
   Preds (1): B6
   Succs (1): B4

 [B6]
   1: std::distance
   2: [B6.1] (ImplicitCastExpr, FunctionToPointerDecay, typename iterator_traits<char *>::difference_type (*)(char *, char *))
   3: __beg
   4: [B6.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: __end
   6: [B6.5] (ImplicitCastExpr, LValueToRValue, char *)
   7: [B6.2]([B6.4], [B6.6])
   8: [B6.7] (ImplicitCastExpr, IntegralCast, size_type)
   9: static_cast<size_type>([B6.8]) (CXXStaticCastExpr, NoOp, size_type)
  10: size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
  11: __dnew
  12: [B6.11] (ImplicitCastExpr, LValueToRValue, size_type)
  13: _S_local_capacity
  14: [B6.13] (ImplicitCastExpr, IntegralCast, size_type)
  15: size_type([B6.14]) (CXXFunctionalCastExpr, NoOp, size_type)
  16: [B6.12] > [B6.15]
   T: if [B6.16]
   Preds (3): B7(Unreachable) B8 B9
   Succs (2): B5 B4

 [B7 (NORETURN)]
   1: std::__throw_logic_error
   2: [B7.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const char *) __attribute__((noreturn)))
   3: "basic_string::_M_construct null not valid"
   4: ([B7.3]) (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   5: [B7.2]([B7.4])
   Preds (1): B8
   Succs (1): B0

 [B8]
   1: __beg
   2: [B8.1] (ImplicitCastExpr, LValueToRValue, char *)
   3: __end
   4: [B8.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: [B8.2] != [B8.4]
   T: if [B9.5] && [B8.5]
   Preds (1): B9
   Succs (2): B7 B6

 [B9]
   1: __gnu_cxx::__is_null_pointer
   2: [B9.1] (ImplicitCastExpr, FunctionToPointerDecay, _Bool (*)(char *))
   3: __beg
   4: [B9.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: [B9.2]([B9.4])
   T: [B9.5] && ...
   Preds (1): B10
   Succs (2): B8 B6

 [B0 (EXIT)]
   Preds (3): B1 B3 B7

inline bool __is_null_pointer(char *__ptr)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __ptr
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char *)
   3: 0
   4: [B1.3] (ImplicitCastExpr, NullToPointer, char *)
   5: [B1.2] == [B1.4]
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline typename iterator_traits<char *>::difference_type distance(char *__first, char *__last)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: std::__distance
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typename iterator_traits<char *>::difference_type (*)(char *, char *, struct std::random_access_iterator_tag))
   3: __first
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: __last
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, char *)
   7: std::__iterator_category
   8: [B1.7] (ImplicitCastExpr, FunctionToPointerDecay, typename iterator_traits<char *>::iterator_category (*)(char *const &))
   9: __first
  10: [B1.9] (ImplicitCastExpr, NoOp, char *const)
  11: [B1.8]([B1.10])
  12: [B1.11] (ImplicitCastExpr, NoOp, const struct std::random_access_iterator_tag)
  13: [B1.12]
  14: [B1.13] (CXXConstructExpr, struct std::random_access_iterator_tag)
  15: [B1.2]([B1.4], [B1.6], [B1.14])
  16: return [B1.15];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline typename iterator_traits<char *>::iterator_category __iterator_category(char *const &)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: typename iterator_traits<char *>::iterator_category() (CXXConstructExpr, typename iterator_traits<char *>::iterator_category)
   2: [B1.1] (ImplicitCastExpr, NoOp, const struct std::random_access_iterator_tag)
   3: [B1.2]
   4: [B1.3] (CXXConstructExpr, typename iterator_traits<char *>::iterator_category)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline typename iterator_traits<char *>::difference_type __distance(char *__first, char *__last, std::random_access_iterator_tag)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __last
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char *)
   3: __first
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: [B1.2] - [B1.4]
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_data(pointer __p)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __p
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, pointer)
   3: this
   4: [B1.3]->_M_dataplus
   5: [B1.4]._M_p
   6: [B1.5] = [B1.2]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_capacity(size_type __capacity)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __capacity
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, size_type)
   3: this
   4: [B1.3]->
   5: [B1.4]_M_allocated_capacity
   6: [B1.5] = [B1.2]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static void _S_copy_chars(char *__p, char *__k1, char *__k2)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: _S_copy
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(char *, const char *, size_type))
   3: __p
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: __k1
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, char *)
   7: [B1.6] (ImplicitCastExpr, NoOp, const char *)
   8: __k2
   9: [B1.8] (ImplicitCastExpr, LValueToRValue, char *)
  10: __k1
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, char *)
  12: [B1.9] - [B1.11]
  13: [B1.12] (ImplicitCastExpr, IntegralCast, size_type)
  14: [B1.2]([B1.4], [B1.7], [B1.13])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static void _S_copy(char *__d, const char *__s, size_type __n)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: traits_type::copy
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, char_type *(*)(char_type *, const char_type *, size_t))
   3: __d
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: __s
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: __n
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, size_type)
   9: [B1.2]([B1.4], [B1.6], [B1.8])
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: traits_type::assign
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(char_type &, const char_type &))
   3: __d
   4: [B2.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: *[B2.4]
   6: __s
   7: [B2.6] (ImplicitCastExpr, LValueToRValue, const char *)
   8: *[B2.7]
   9: [B2.2]([B2.5], [B2.8])
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_type)
   3: 1
   4: [B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: [B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

void _M_dispose()
 [B3 (ENTRY)]
   Succs (1): B2

 [B1]
   1: this
   2: [B1.1]->_M_destroy
   3: this
   4: [B1.3]->
   5: [B1.4]_M_allocated_capacity
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, size_type)
   7: [B1.2]([B1.6])
   Preds (1): B2
   Succs (1): B0

 [B2]
   1: this
   2: [B2.1] (ImplicitCastExpr, NoOp, const class std::__cxx11::basic_string<char> *)
   3: [B2.2]->_M_is_local
   4: [B2.3]()
   5: ![B2.4]
   T: if [B2.5]
   Preds (1): B3
   Succs (2): B1 B0

 [B0 (EXIT)]
   Preds (2): B1 B2

bool _M_is_local() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_data
   3: [B1.2]()
   4: [B1.3] (ImplicitCastExpr, NoOp, const char *)
   5: this
   6: [B1.5]->_M_local_data
   7: [B1.6]()
   8: [B1.4] == [B1.7]
   9: return [B1.8];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const_pointer _M_local_data() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->
   3: [B1.2]_M_local_buf
   4: [B1.3] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   5: const_pointer([B1.4]) (CXXFunctionalCastExpr, NoOp, const_pointer)
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_destroy(size_type __size) throw()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: _Alloc_traits::deallocate
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(class std::allocator<char> &, pointer, size_type))
   3: this
   4: [B1.3]->_M_get_allocator
   5: [B1.4]()
   6: this
   7: [B1.6] (ImplicitCastExpr, NoOp, const class std::__cxx11::basic_string<char> *)
   8: [B1.7]->_M_data
   9: [B1.8]()
  10: __size
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, size_type)
  12: 1
  13: [B1.12] (ImplicitCastExpr, IntegralCast, unsigned long)
  14: [B1.11] + [B1.13]
  15: [B1.2]([B1.5], [B1.9], [B1.14])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static void deallocate(std::allocator<char> &__a, pointer __p, size_type __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, UncheckedDerivedToBase, class __gnu_cxx::new_allocator<char>)
   3: [B1.2].deallocate
   4: __p
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, pointer)
   6: __n
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, size_type)
   8: [B1.3]([B1.5], [B1.7])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void deallocate(pointer __p, size_type)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: ::operator delete
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(void *) throw())
   3: __p
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, pointer)
   5: [B1.4] (ImplicitCastExpr, BitCast, void *)
   6: [B1.2]([B1.5])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

allocator_type &_M_get_allocator()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_dataplus
   3: [B1.2] (ImplicitCastExpr, DerivedToBase, allocator_type)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_set_length(size_type __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_length
   3: __n
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, size_type)
   5: [B1.2]([B1.4])
   6: traits_type::assign
   7: [B1.6] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(char_type &, const char_type &))
   8: this
   9: [B1.8] (ImplicitCastExpr, NoOp, const class std::__cxx11::basic_string<char> *)
  10: [B1.9]->_M_data
  11: [B1.10]()
  12: __n
  13: [B1.12] (ImplicitCastExpr, LValueToRValue, size_type)
  14: [B1.11][[B1.13]]
  15: char()
  16: [B1.15]
  17: [B1.7]([B1.14], [B1.16])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_length(size_type __length)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __length
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, size_type)
   3: this
   4: [B1.3]->_M_string_length
   5: [B1.4] = [B1.2]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

~std::__cxx11::basic_string<char>()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_dispose
   3: [B1.2]()
   4: this->_M_dataplus.~_Alloc_hider() (Member object destructor)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_inc_size(size_t __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_impl
   3: [B1.2]._M_node
   4: [B1.3]._M_valptr
   5: [B1.4]()
   6: *[B1.5]
   7: __n
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, size_t)
   9: [B1.6] += [B1.8]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

allocator() throw() : __gnu_cxx::new_allocator<char>()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1:  (CXXConstructExpr, __gnu_cxx::new_allocator<char>)
   2: new_allocator([B1.1]) (Base initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

new_allocator() throw()
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

basic_string(const char *__s, const std::allocator<char> &__a = std::allocator<char>()) : _M_dataplus(this->_M_local_data(), __a)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: [B4.13] ? [B2.8] : [B3.5]
   2: [B4.8]([B4.10], [B1.1])
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: __s
   2: [B2.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: traits_type::length
   4: [B2.3] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(const char_type *))
   5: __s
   6: [B2.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: [B2.4]([B2.6])
   8: [B2.2] + [B2.7]
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: __s
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: npos
   4: [B3.3] (ImplicitCastExpr, LValueToRValue, size_type)
   5: [B3.2] + [B3.4]
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: this
   2: [B4.1]->_M_local_data
   3: [B4.2]()
   4: __a
   5: [B4.3], [B4.4] (CXXConstructExpr, struct std::__cxx11::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider)
   6: _M_dataplus([B4.5]) (Member initializer)
   7: this
   8: [B4.7]->_M_construct
   9: __s
  10: [B4.9] (ImplicitCastExpr, LValueToRValue, const char *)
  11: __s
  12: [B4.11] (ImplicitCastExpr, LValueToRValue, const char *)
  13: [B4.12] (ImplicitCastExpr, PointerToBoolean, _Bool)
   T: [B4.13] ? ... : ...
   Preds (1): B5
   Succs (2): B2 B3

 [B0 (EXIT)]
   Preds (1): B1

void _M_construct(const char *__beg, const char *__end)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_construct_aux
   3: __beg
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: __end
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: _Integral() (CXXConstructExpr, _Integral)
   8: [B1.7] (ImplicitCastExpr, NoOp, const struct std::__false_type)
   9: [B1.8]
  10: [B1.9] (CXXConstructExpr, std::__false_type)
  11: [B1.2]([B1.4], [B1.6], [B1.10])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_construct_aux(const char *__beg, const char *__end, std::__false_type)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_construct
   3: __beg
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: __end
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: _Tag() (CXXConstructExpr, _Tag)
   8: [B1.7] (ImplicitCastExpr, DerivedToBase, struct std::forward_iterator_tag)
   9: [B1.8] (ImplicitCastExpr, NoOp, const struct std::forward_iterator_tag)
  10: [B1.9]
  11: [B1.10] (CXXConstructExpr, std::forward_iterator_tag)
  12: [B1.2]([B1.4], [B1.6], [B1.11])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_construct(const char *__beg, const char *__end, std::forward_iterator_tag)
 [B10 (ENTRY)]
   Succs (1): B9

 [B1]
   1: this
   2: [B1.1]->_M_set_length
   3: __dnew
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, size_type)
   5: [B1.2]([B1.4])
   Preds (1): B4
   Succs (1): B0

 [B2]
   T: try ...
   Succs (1): B3

 [B3]
  catch (...):
   1: catch (...) {
    [B3.4];
    [B3.5];
}
   2: this
   3: [B3.2]->_M_dispose
   4: [B3.3]()
   5: throw
   Preds (1): B2
   Succs (1): B0

 [B4]
   1: this
   2: [B4.1]->_S_copy_chars
   3: [B4.2] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(char *, const char *, const char *))
   4: this
   5: [B4.4] (ImplicitCastExpr, NoOp, const class std::__cxx11::basic_string<char> *)
   6: [B4.5]->_M_data
   7: [B4.6]()
   8: __beg
   9: [B4.8] (ImplicitCastExpr, LValueToRValue, const char *)
  10: __end
  11: [B4.10] (ImplicitCastExpr, LValueToRValue, const char *)
  12: [B4.3]([B4.7], [B4.9], [B4.11])
   Preds (2): B5 B6
   Succs (1): B1

 [B5]
   1: this
   2: [B5.1]->_M_data
   3: this
   4: [B5.3]->_M_create
   5: __dnew
   6: 0
   7: [B5.6] (ImplicitCastExpr, IntegralCast, size_type)
   8: size_type([B5.7]) (CXXFunctionalCastExpr, NoOp, size_type)
   9: [B5.4]([B5.5], [B5.8])
  10: [B5.2]([B5.9])
  11: this
  12: [B5.11]->_M_capacity
  13: __dnew
  14: [B5.13] (ImplicitCastExpr, LValueToRValue, size_type)
  15: [B5.12]([B5.14])
   Preds (1): B6
   Succs (1): B4

 [B6]
   1: std::distance
   2: [B6.1] (ImplicitCastExpr, FunctionToPointerDecay, typename iterator_traits<const char *>::difference_type (*)(const char *, const char *))
   3: __beg
   4: [B6.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: __end
   6: [B6.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: [B6.2]([B6.4], [B6.6])
   8: [B6.7] (ImplicitCastExpr, IntegralCast, size_type)
   9: static_cast<size_type>([B6.8]) (CXXStaticCastExpr, NoOp, size_type)
  10: size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
  11: __dnew
  12: [B6.11] (ImplicitCastExpr, LValueToRValue, size_type)
  13: _S_local_capacity
  14: [B6.13] (ImplicitCastExpr, IntegralCast, size_type)
  15: size_type([B6.14]) (CXXFunctionalCastExpr, NoOp, size_type)
  16: [B6.12] > [B6.15]
   T: if [B6.16]
   Preds (3): B7(Unreachable) B8 B9
   Succs (2): B5 B4

 [B7 (NORETURN)]
   1: std::__throw_logic_error
   2: [B7.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(const char *) __attribute__((noreturn)))
   3: "basic_string::_M_construct null not valid"
   4: ([B7.3]) (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   5: [B7.2]([B7.4])
   Preds (1): B8
   Succs (1): B0

 [B8]
   1: __beg
   2: [B8.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: __end
   4: [B8.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: [B8.2] != [B8.4]
   T: if [B9.5] && [B8.5]
   Preds (1): B9
   Succs (2): B7 B6

 [B9]
   1: __gnu_cxx::__is_null_pointer
   2: [B9.1] (ImplicitCastExpr, FunctionToPointerDecay, _Bool (*)(const char *))
   3: __beg
   4: [B9.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: [B9.2]([B9.4])
   T: [B9.5] && ...
   Preds (1): B10
   Succs (2): B8 B6

 [B0 (EXIT)]
   Preds (3): B1 B3 B7

inline bool __is_null_pointer(const char *__ptr)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __ptr
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: 0
   4: [B1.3] (ImplicitCastExpr, NullToPointer, const char *)
   5: [B1.2] == [B1.4]
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline typename iterator_traits<const char *>::difference_type distance(const char *__first, const char *__last)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: std::__distance
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typename iterator_traits<const char *>::difference_type (*)(const char *, const char *, struct std::random_access_iterator_tag))
   3: __first
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: __last
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: std::__iterator_category
   8: [B1.7] (ImplicitCastExpr, FunctionToPointerDecay, typename iterator_traits<const char *>::iterator_category (*)(const char *const &))
   9: __first
  10: [B1.9] (ImplicitCastExpr, NoOp, const char *const)
  11: [B1.8]([B1.10])
  12: [B1.11] (ImplicitCastExpr, NoOp, const struct std::random_access_iterator_tag)
  13: [B1.12]
  14: [B1.13] (CXXConstructExpr, struct std::random_access_iterator_tag)
  15: [B1.2]([B1.4], [B1.6], [B1.14])
  16: return [B1.15];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline typename iterator_traits<const char *>::iterator_category __iterator_category(const char *const &)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: typename iterator_traits<const char *>::iterator_category() (CXXConstructExpr, typename iterator_traits<const char *>::iterator_category)
   2: [B1.1] (ImplicitCastExpr, NoOp, const struct std::random_access_iterator_tag)
   3: [B1.2]
   4: [B1.3] (CXXConstructExpr, typename iterator_traits<const char *>::iterator_category)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline typename iterator_traits<const char *>::difference_type __distance(const char *__first, const char *__last, std::random_access_iterator_tag)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __last
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: __first
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: [B1.2] - [B1.4]
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static void _S_copy_chars(char *__p, const char *__k1, const char *__k2)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: _S_copy
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(char *, const char *, size_type))
   3: __p
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: __k1
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: __k2
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, const char *)
   9: __k1
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, const char *)
  11: [B1.8] - [B1.10]
  12: [B1.11] (ImplicitCastExpr, IntegralCast, size_type)
  13: [B1.2]([B1.4], [B1.6], [B1.12])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline typename __gnu_cxx::__enable_if<__is_char<char>::__value, bool>::__type operator==(const basic_string<char> &__lhs, const basic_string<char> &__rhs)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: [B3.7] && [B2.14]
   2: return ([B1.1]);
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: std::char_traits<char>::compare
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const char_type *, const char_type *, size_t))
   3: __lhs
   4: [B2.3].data
   5: [B2.4]()
   6: __rhs
   7: [B2.6].data
   8: [B2.7]()
   9: __lhs
  10: [B2.9].size
  11: [B2.10]()
  12: [B2.2]([B2.5], [B2.8], [B2.11])
  13: [B2.12] (ImplicitCastExpr, IntegralToBoolean, _Bool)
  14: ![B2.13]
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: __lhs
   2: [B3.1].size
   3: [B3.2]()
   4: __rhs
   5: [B3.4].size
   6: [B3.5]()
   7: [B3.3] == [B3.6]
   T: [B3.7] && ...
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (1): B1

size_type size() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_string_length
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, size_type)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const char *data() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_data
   3: [B1.2]()
   4: [B1.3] (ImplicitCastExpr, NoOp, const char *)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

basic_string() : _M_dataplus(this->_M_local_data())
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_local_data
   3: [B1.2]()
   4: 
   5: [B1.3] (CXXConstructExpr, struct std::__cxx11::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider)
   6: _M_dataplus([B1.5]) (Member initializer)
   7: this
   8: [B1.7]->_M_set_length
   9: 0
  10: [B1.9] (ImplicitCastExpr, IntegralCast, size_type)
  11: [B1.8]([B1.10])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline basic_istream<char, std::char_traits<char> > &getline(basic_istream<char, std::char_traits<char> > &__is, basic_string<char, std::char_traits<char>, std::allocator<char> > &__str)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: std::getline
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, basic_istream<char> &(*)(basic_istream<char> &, basic_string<char> &, char))
   3: __is
   4: __str
   5: __is
   6: [B1.5] (ImplicitCastExpr, UncheckedDerivedToBase, const class std::basic_ios<char>)
   7: [B1.6].widen
   8: '\n'
   9: [B1.7]([B1.8])
  10: [B1.2]([B1.3], [B1.4], [B1.9])
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

bool eof() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator&
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate))
   3: this
   4: [B1.3]->rdstate
   5: [B1.4]()
   6: eofbit
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, iostate)
   8: [B1.5] & [B1.7] (OperatorCall)
   9: ([B1.8]) (ImplicitCastExpr, IntegralCast, int)
  10: 0
  11: [B1.9] != [B1.10]
  12: return [B1.11];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

bool fail() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator&
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate))
   3: this
   4: [B1.3]->rdstate
   5: [B1.4]()
   6: operator|
   7: [B1.6] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate))
   8: badbit
   9: [B1.8] (ImplicitCastExpr, LValueToRValue, iostate)
  10: failbit
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, iostate)
  12: [B1.9] | [B1.11] (OperatorCall)
  13: [B1.5] & ([B1.12]) (OperatorCall)
  14: ([B1.13]) (ImplicitCastExpr, IntegralCast, int)
  15: 0
  16: [B1.14] != [B1.15]
  17: return [B1.16];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const char *c_str() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_data
   3: [B1.2]()
   4: [B1.3] (ImplicitCastExpr, NoOp, const char *)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __ostream_insert
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *, streamsize))
   3: __out
   4: __c
   5: &[B1.4]
   6: [B1.5] (ImplicitCastExpr, NoOp, const char *)
   7: 1
   8: [B1.7] (ImplicitCastExpr, IntegralCast, streamsize)
   9: [B1.2]([B1.3], [B1.6], [B1.8])
  10: return [B1.9];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

reference operator[](size_type __pos)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1] (ImplicitCastExpr, NoOp, const class std::__cxx11::basic_string<char> *)
   3: [B1.2]->_M_data
   4: [B1.3]()
   5: __pos
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, size_type)
   7: [B1.4][[B1.6]]
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__os, const basic_string<char, std::char_traits<char>, std::allocator<char> > &__str)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __ostream_insert
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *, streamsize))
   3: __os
   4: __str
   5: [B1.4].data
   6: [B1.5]()
   7: __str
   8: [B1.7].size
   9: [B1.8]()
  10: [B1.9] (ImplicitCastExpr, IntegralCast, streamsize)
  11: [B1.2]([B1.3], [B1.6], [B1.10])
  12: return [B1.11];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

~std::vector<Module *, std::allocator<Module *> >()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: std::_Destroy
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(class Module **, class Module **, allocator<class Module *> &))
   3: this
   4: [B1.3] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Vector_base<class Module *, class std::allocator<class Module *> > *)
   5: [B1.4]->_M_impl
   6: [B1.5]._M_start
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, pointer)
   8: this
   9: [B1.8] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Vector_base<class Module *, class std::allocator<class Module *> > *)
  10: [B1.9]->_M_impl
  11: [B1.10]._M_finish
  12: [B1.11] (ImplicitCastExpr, LValueToRValue, pointer)
  13: this
  14: [B1.13] (ImplicitCastExpr, UncheckedDerivedToBase, struct std::_Vector_base<class Module *, class std::allocator<class Module *> > *)
  15: [B1.14]->_M_get_Tp_allocator
  16: [B1.15]()
  17: [B1.2]([B1.7], [B1.12], [B1.16])
  18: ~_Vector_base() (Base object destructor)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

_Tp_alloc_type &_M_get_Tp_allocator()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_impl
   3: &[B1.2]
   4: [B1.3] (ImplicitCastExpr, DerivedToBase, _Tp_alloc_type *)
   5: static_cast<_Tp_alloc_type *>([B1.4]) (CXXStaticCastExpr, NoOp, _Tp_alloc_type *)
   6: *[B1.5]
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline void _Destroy(Module **__first, Module **__last, allocator<Module *> &)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: _Destroy
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(class Module **, class Module **))
   3: __first
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, class Module **)
   5: __last
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, class Module **)
   7: [B1.2]([B1.4], [B1.6])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline void _Destroy(Module **__first, Module **__last)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::__destroy
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(class Module **, class Module **))
   3: __first
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, class Module **)
   5: __last
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, class Module **)
   7: [B1.2]([B1.4], [B1.6])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static void __destroy(Module **, Module **)
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

~std::_Vector_base<Module *, std::allocator<Module *> >()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_deallocate
   3: this
   4: [B1.3]->_M_impl
   5: [B1.4]._M_start
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, pointer)
   7: this
   8: [B1.7]->_M_impl
   9: [B1.8]._M_end_of_storage
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, pointer)
  11: this
  12: [B1.11]->_M_impl
  13: [B1.12]._M_start
  14: [B1.13] (ImplicitCastExpr, LValueToRValue, pointer)
  15: [B1.10] - [B1.14]
  16: [B1.15] (ImplicitCastExpr, IntegralCast, size_t)
  17: [B1.2]([B1.6], [B1.16])
  18: this->_M_impl.~_Vector_impl() (Member object destructor)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_deallocate(pointer __p, size_t __n)
 [B3 (ENTRY)]
   Succs (1): B2

 [B1]
   1: _Tr::deallocate
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(class std::allocator<class Module *> &, pointer, size_type))
   3: this
   4: [B1.3]->_M_impl
   5: [B1.4] (ImplicitCastExpr, DerivedToBase, class std::allocator<class Module *>)
   6: __p
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, pointer)
   8: __n
   9: [B1.8] (ImplicitCastExpr, LValueToRValue, size_t)
  10: [B1.2]([B1.5], [B1.7], [B1.9])
   Preds (1): B2
   Succs (1): B0

 [B2]
   1: __p
   2: [B2.1] (ImplicitCastExpr, LValueToRValue, pointer)
   3: [B2.2] (ImplicitCastExpr, PointerToBoolean, _Bool)
   T: if [B2.3]
   Preds (1): B3
   Succs (2): B1 B0

 [B0 (EXIT)]
   Preds (2): B1 B2

static void deallocate(std::allocator<Module *> &__a, pointer __p, size_type __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, UncheckedDerivedToBase, class __gnu_cxx::new_allocator<class Module *>)
   3: [B1.2].deallocate
   4: __p
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, pointer)
   6: __n
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, size_type)
   8: [B1.3]([B1.5], [B1.7])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void deallocate(pointer __p, size_type)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: ::operator delete
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(void *) throw())
   3: __p
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, pointer)
   5: [B1.4] (ImplicitCastExpr, BitCast, void *)
   6: [B1.2]([B1.5])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

~std::allocator<Module *>() throw()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: ~new_allocator() (Base object destructor)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

~__gnu_cxx::new_allocator<Module *>() throw()
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

