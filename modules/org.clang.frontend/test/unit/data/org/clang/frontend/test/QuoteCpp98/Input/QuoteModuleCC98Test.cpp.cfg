exception() throw()
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

bad_exception() throw() : std::exception()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1:  (CXXConstructExpr, class std::exception)
   2: exception([B1.1]) (Base initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline __gnu_cxx::__ops::_Iter_less_iter __iter_less_iter()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__ops::_Iter_less_iter() (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_less_iter)
   2: [B1.1] (ImplicitCastExpr, NoOp, const struct __gnu_cxx::__ops::_Iter_less_iter)
   3: [B1.2]
   4: [B1.3] (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_less_iter)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline __gnu_cxx::__ops::_Iter_less_val __iter_less_val()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__ops::_Iter_less_val() (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_less_val)
   2: [B1.1] (ImplicitCastExpr, NoOp, const struct __gnu_cxx::__ops::_Iter_less_val)
   3: [B1.2]
   4: [B1.3] (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_less_val)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline __gnu_cxx::__ops::_Iter_less_val __iter_comp_val(__gnu_cxx::__ops::_Iter_less_iter)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__ops::_Iter_less_val() (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_less_val)
   2: [B1.1] (ImplicitCastExpr, NoOp, const struct __gnu_cxx::__ops::_Iter_less_val)
   3: [B1.2]
   4: [B1.3] (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_less_val)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline __gnu_cxx::__ops::_Val_less_iter __val_less_iter()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__ops::_Val_less_iter() (CXXConstructExpr, struct __gnu_cxx::__ops::_Val_less_iter)
   2: [B1.1] (ImplicitCastExpr, NoOp, const struct __gnu_cxx::__ops::_Val_less_iter)
   3: [B1.2]
   4: [B1.3] (CXXConstructExpr, struct __gnu_cxx::__ops::_Val_less_iter)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline __gnu_cxx::__ops::_Val_less_iter __val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__ops::_Val_less_iter() (CXXConstructExpr, struct __gnu_cxx::__ops::_Val_less_iter)
   2: [B1.1] (ImplicitCastExpr, NoOp, const struct __gnu_cxx::__ops::_Val_less_iter)
   3: [B1.2]
   4: [B1.3] (CXXConstructExpr, struct __gnu_cxx::__ops::_Val_less_iter)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline __gnu_cxx::__ops::_Iter_equal_to_iter __iter_equal_to_iter()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__ops::_Iter_equal_to_iter() (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_equal_to_iter)
   2: [B1.1] (ImplicitCastExpr, NoOp, const struct __gnu_cxx::__ops::_Iter_equal_to_iter)
   3: [B1.2]
   4: [B1.3] (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_equal_to_iter)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline __gnu_cxx::__ops::_Iter_equal_to_val __iter_equal_to_val()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__ops::_Iter_equal_to_val() (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_equal_to_val)
   2: [B1.1] (ImplicitCastExpr, NoOp, const struct __gnu_cxx::__ops::_Iter_equal_to_val)
   3: [B1.2]
   4: [B1.3] (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_equal_to_val)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline __gnu_cxx::__ops::_Iter_equal_to_val __iter_comp_val(__gnu_cxx::__ops::_Iter_equal_to_iter)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__ops::_Iter_equal_to_val() (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_equal_to_val)
   2: [B1.1] (ImplicitCastExpr, NoOp, const struct __gnu_cxx::__ops::_Iter_equal_to_val)
   3: [B1.2]
   4: [B1.3] (CXXConstructExpr, struct __gnu_cxx::__ops::_Iter_equal_to_val)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline int __lg(int __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: sizeof(int)
   2: 8
   3: [B1.2] (ImplicitCastExpr, IntegralCast, unsigned long)
   4: [B1.1] * [B1.3]
   5: 1
   6: [B1.5] (ImplicitCastExpr, IntegralCast, unsigned long)
   7: [B1.4] - [B1.6]
   8: __builtin_clz
   9: [B1.8] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)(unsigned int))
  10: __n
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, int)
  12: [B1.11] (ImplicitCastExpr, IntegralCast, unsigned int)
  13: [B1.9]([B1.12])
  14: [B1.13] (ImplicitCastExpr, IntegralCast, unsigned long)
  15: [B1.7] - [B1.14]
  16: [B1.15] (ImplicitCastExpr, IntegralCast, int)
  17: return [B1.16];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline unsigned int __lg(unsigned int __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: sizeof(int)
   2: 8
   3: [B1.2] (ImplicitCastExpr, IntegralCast, unsigned long)
   4: [B1.1] * [B1.3]
   5: 1
   6: [B1.5] (ImplicitCastExpr, IntegralCast, unsigned long)
   7: [B1.4] - [B1.6]
   8: __builtin_clz
   9: [B1.8] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)(unsigned int))
  10: __n
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, unsigned int)
  12: [B1.9]([B1.11])
  13: [B1.12] (ImplicitCastExpr, IntegralCast, unsigned long)
  14: [B1.7] - [B1.13]
  15: [B1.14] (ImplicitCastExpr, IntegralCast, unsigned int)
  16: return [B1.15];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline long __lg(long __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: sizeof(long)
   2: 8
   3: [B1.2] (ImplicitCastExpr, IntegralCast, unsigned long)
   4: [B1.1] * [B1.3]
   5: 1
   6: [B1.5] (ImplicitCastExpr, IntegralCast, unsigned long)
   7: [B1.4] - [B1.6]
   8: __builtin_clzl
   9: [B1.8] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)(unsigned long))
  10: __n
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, long)
  12: [B1.11] (ImplicitCastExpr, IntegralCast, unsigned long)
  13: [B1.9]([B1.12])
  14: [B1.13] (ImplicitCastExpr, IntegralCast, unsigned long)
  15: [B1.7] - [B1.14]
  16: [B1.15] (ImplicitCastExpr, IntegralCast, long)
  17: return [B1.16];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline unsigned long __lg(unsigned long __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: sizeof(long)
   2: 8
   3: [B1.2] (ImplicitCastExpr, IntegralCast, unsigned long)
   4: [B1.1] * [B1.3]
   5: 1
   6: [B1.5] (ImplicitCastExpr, IntegralCast, unsigned long)
   7: [B1.4] - [B1.6]
   8: __builtin_clzl
   9: [B1.8] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)(unsigned long))
  10: __n
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, unsigned long)
  12: [B1.9]([B1.11])
  13: [B1.12] (ImplicitCastExpr, IntegralCast, unsigned long)
  14: [B1.7] - [B1.13]
  15: return [B1.14];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline long long __lg(long long __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: sizeof(long long)
   2: 8
   3: [B1.2] (ImplicitCastExpr, IntegralCast, unsigned long)
   4: [B1.1] * [B1.3]
   5: 1
   6: [B1.5] (ImplicitCastExpr, IntegralCast, unsigned long)
   7: [B1.4] - [B1.6]
   8: __builtin_clzll
   9: [B1.8] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)(unsigned long long))
  10: __n
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, long long)
  12: [B1.11] (ImplicitCastExpr, IntegralCast, unsigned long long)
  13: [B1.9]([B1.12])
  14: [B1.13] (ImplicitCastExpr, IntegralCast, unsigned long)
  15: [B1.7] - [B1.14]
  16: [B1.15] (ImplicitCastExpr, IntegralCast, long long)
  17: return [B1.16];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline unsigned long long __lg(unsigned long long __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: sizeof(long long)
   2: 8
   3: [B1.2] (ImplicitCastExpr, IntegralCast, unsigned long)
   4: [B1.1] * [B1.3]
   5: 1
   6: [B1.5] (ImplicitCastExpr, IntegralCast, unsigned long)
   7: [B1.4] - [B1.6]
   8: __builtin_clzll
   9: [B1.8] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)(unsigned long long))
  10: __n
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, unsigned long long)
  12: [B1.9]([B1.11])
  13: [B1.12] (ImplicitCastExpr, IntegralCast, unsigned long)
  14: [B1.7] - [B1.13]
  15: [B1.14] (ImplicitCastExpr, IntegralCast, unsigned long long)
  16: return [B1.15];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static void assign(char_type &__c1, const char_type &__c2)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c2
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char_type)
   3: __c1
   4: [B1.3] = [B1.2]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static bool eq(const char_type &__c1, const char_type &__c2)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c1
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char_type)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: __c2
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, char_type)
   6: [B1.5] (ImplicitCastExpr, IntegralCast, int)
   7: [B1.3] == [B1.6]
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static bool lt(const char_type &__c1, const char_type &__c2)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c1
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char_type)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, unsigned char)
   4: static_cast<unsigned char>([B1.3]) (CXXStaticCastExpr, NoOp, unsigned char)
   5: [B1.4] (ImplicitCastExpr, IntegralCast, int)
   6: __c2
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, char_type)
   8: [B1.7] (ImplicitCastExpr, IntegralCast, unsigned char)
   9: static_cast<unsigned char>([B1.8]) (CXXStaticCastExpr, NoOp, unsigned char)
  10: [B1.9] (ImplicitCastExpr, IntegralCast, int)
  11: [B1.5] < [B1.10]
  12: return ([B1.11]);
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: __builtin_memcmp
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)(const void *, const void *, unsigned long))
   3: __s1
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, const char_type *)
   5: [B1.4] (ImplicitCastExpr, BitCast, const void *)
   6: __s2
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, const char_type *)
   8: [B1.7] (ImplicitCastExpr, BitCast, const void *)
   9: __n
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, size_t)
  11: [B1.2]([B1.5], [B1.8], [B1.10])
  12: return [B1.11];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: 0
   2: return [B2.1];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: 0
   4: [B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: [B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static size_t length(const char_type *__s)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __builtin_strlen
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, unsigned long (*)(const char *))
   3: __s
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, const char_type *)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: __builtin_memchr
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, void *(*)(const void *, int, unsigned long))
   3: __s
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, const char_type *)
   5: [B1.4] (ImplicitCastExpr, BitCast, const void *)
   6: __a
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, char_type)
   8: [B1.7] (ImplicitCastExpr, IntegralCast, int)
   9: __n
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, size_t)
  11: [B1.2]([B1.5], [B1.8], [B1.10])
  12: static_cast<const char_type *>([B1.11]) (CXXStaticCastExpr, BitCast, const char_type *)
  13: return [B1.12];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: 0
   2: [B2.1] (ImplicitCastExpr, NullToPointer, const char_type *)
   3: return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: 0
   4: [B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: [B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: __builtin_memmove
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, void *(*)(void *, const void *, unsigned long))
   3: __s1
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type *)
   5: [B1.4] (ImplicitCastExpr, BitCast, void *)
   6: __s2
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, const char_type *)
   8: [B1.7] (ImplicitCastExpr, BitCast, const void *)
   9: __n
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, size_t)
  11: [B1.2]([B1.5], [B1.8], [B1.10])
  12: static_cast<char_type *>([B1.11]) (CXXStaticCastExpr, BitCast, char_type *)
  13: return [B1.12];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __s1
   2: [B2.1] (ImplicitCastExpr, LValueToRValue, char_type *)
   3: return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: 0
   4: [B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: [B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: __builtin_memcpy
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, void *(*)(void *, const void *, unsigned long))
   3: __s1
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type *)
   5: [B1.4] (ImplicitCastExpr, BitCast, void *)
   6: __s2
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, const char_type *)
   8: [B1.7] (ImplicitCastExpr, BitCast, const void *)
   9: __n
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, size_t)
  11: [B1.2]([B1.5], [B1.8], [B1.10])
  12: static_cast<char_type *>([B1.11]) (CXXStaticCastExpr, BitCast, char_type *)
  13: return [B1.12];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __s1
   2: [B2.1] (ImplicitCastExpr, LValueToRValue, char_type *)
   3: return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: 0
   4: [B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: [B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static char_type *assign(char_type *__s, size_t __n, char_type __a)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: __builtin_memset
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, void *(*)(void *, int, unsigned long))
   3: __s
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type *)
   5: [B1.4] (ImplicitCastExpr, BitCast, void *)
   6: __a
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, char_type)
   8: [B1.7] (ImplicitCastExpr, IntegralCast, int)
   9: __n
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, size_t)
  11: [B1.2]([B1.5], [B1.8], [B1.10])
  12: static_cast<char_type *>([B1.11]) (CXXStaticCastExpr, BitCast, char_type *)
  13: return [B1.12];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __s
   2: [B2.1] (ImplicitCastExpr, LValueToRValue, char_type *)
   3: return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: 0
   4: [B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: [B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static char_type to_char_type(const int_type &__c)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, int_type)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, char_type)
   4: static_cast<char_type>([B1.3]) (CXXStaticCastExpr, NoOp, char_type)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static int_type to_int_type(const char_type &__c)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char_type)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, unsigned char)
   4: static_cast<unsigned char>([B1.3]) (CXXStaticCastExpr, NoOp, unsigned char)
   5: [B1.4] (ImplicitCastExpr, IntegralCast, int_type)
   6: static_cast<int_type>([B1.5]) (CXXStaticCastExpr, NoOp, int_type)
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static bool eq_int_type(const int_type &__c1, const int_type &__c2)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c1
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, int_type)
   3: __c2
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, int_type)
   5: [B1.2] == [B1.4]
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static int_type eof()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: 1
   2: -[B1.1]
   3: static_cast<int_type>([B1.2]) (CXXStaticCastExpr, NoOp, int_type)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static int_type not_eof(const int_type &__c)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: ([B4.6]) ? [B2.1] : [B3.2]
   2: return [B1.1];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: 0
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: __c
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, int_type)
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: __c
   2: [B4.1] (ImplicitCastExpr, LValueToRValue, int_type)
   3: eof
   4: [B4.3] (ImplicitCastExpr, FunctionToPointerDecay, int_type (*)(void))
   5: [B4.4]()
   6: [B4.2] == [B4.5]
   T: ([B4.6]) ? ... : ...
   Preds (1): B5
   Succs (2): B2 B3

 [B0 (EXIT)]
   Preds (1): B1

static void assign(char_type &__c1, const char_type &__c2)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c2
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char_type)
   3: __c1
   4: [B1.3] = [B1.2]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static bool eq(const char_type &__c1, const char_type &__c2)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c1
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char_type)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: __c2
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, char_type)
   6: [B1.5] (ImplicitCastExpr, IntegralCast, int)
   7: [B1.3] == [B1.6]
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static bool lt(const char_type &__c1, const char_type &__c2)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c1
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char_type)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: __c2
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, char_type)
   6: [B1.5] (ImplicitCastExpr, IntegralCast, int)
   7: [B1.3] < [B1.6]
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: wmemcmp
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(const wchar_t *, const wchar_t *, size_t) throw())
   3: __s1
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, const char_type *)
   5: __s2
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const char_type *)
   7: __n
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, size_t)
   9: [B1.2]([B1.4], [B1.6], [B1.8])
  10: return [B1.9];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: 0
   2: return [B2.1];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: 0
   4: [B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: [B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static size_t length(const char_type *__s)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: wcslen
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(const wchar_t *) throw())
   3: __s
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, const char_type *)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: wmemchr
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, const wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw())
   3: __s
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, const char_type *)
   5: __a
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, char_type)
   7: __n
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, size_t)
   9: [B1.2]([B1.4], [B1.6], [B1.8])
  10: return [B1.9];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: 0
   2: [B2.1] (ImplicitCastExpr, NullToPointer, const char_type *)
   3: return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: 0
   4: [B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: [B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: wmemmove
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw())
   3: __s1
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type *)
   5: __s2
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const char_type *)
   7: __n
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, size_t)
   9: [B1.2]([B1.4], [B1.6], [B1.8])
  10: return [B1.9];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __s1
   2: [B2.1] (ImplicitCastExpr, LValueToRValue, char_type *)
   3: return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: 0
   4: [B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: [B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: wmemcpy
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, wchar_t *(*)(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw())
   3: __s1
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type *)
   5: __s2
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const char_type *)
   7: __n
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, size_t)
   9: [B1.2]([B1.4], [B1.6], [B1.8])
  10: return [B1.9];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __s1
   2: [B2.1] (ImplicitCastExpr, LValueToRValue, char_type *)
   3: return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: 0
   4: [B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: [B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static char_type *assign(char_type *__s, size_t __n, char_type __a)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: wmemset
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, wchar_t *(*)(wchar_t *, wchar_t, size_t) throw())
   3: __s
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type *)
   5: __a
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, char_type)
   7: __n
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, size_t)
   9: [B1.2]([B1.4], [B1.6], [B1.8])
  10: return [B1.9];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __s
   2: [B2.1] (ImplicitCastExpr, LValueToRValue, char_type *)
   3: return [B2.2];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __n
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: 0
   4: [B3.3] (ImplicitCastExpr, IntegralCast, unsigned long)
   5: [B3.2] == [B3.4]
   T: if [B3.5]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static char_type to_char_type(const int_type &__c)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, int_type)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, char_type)
   4: char_type([B1.3]) (CXXFunctionalCastExpr, NoOp, char_type)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static int_type to_int_type(const char_type &__c)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char_type)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int_type)
   4: int_type([B1.3]) (CXXFunctionalCastExpr, NoOp, int_type)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static bool eq_int_type(const int_type &__c1, const int_type &__c2)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c1
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, int_type)
   3: __c2
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, int_type)
   5: [B1.2] == [B1.4]
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static int_type eof()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: 4294967295U
   2: static_cast<int_type>(([B1.1])) (CXXStaticCastExpr, NoOp, int_type)
   3: return [B1.2];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static int_type not_eof(const int_type &__c)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: [B4.8] ? [B2.2] : [B3.2]
   2: return [B1.1];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: 0
   2: [B2.1] (ImplicitCastExpr, IntegralCast, unsigned int)
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: __c
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, int_type)
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: eq_int_type
   2: [B4.1] (ImplicitCastExpr, FunctionToPointerDecay, _Bool (*)(const int_type &, const int_type &))
   3: __c
   4: eof
   5: [B4.4] (ImplicitCastExpr, FunctionToPointerDecay, int_type (*)(void))
   6: [B4.5]()
   7: [B4.6]
   8: [B4.2]([B4.3], [B4.7])
   T: [B4.8] ? ... : ...
   Preds (1): B5
   Succs (2): B2 B3

 [B0 (EXIT)]
   Preds (1): B1

inline int __convert_from_v(const __c_locale &__cloc, char *__out, const int __size, const char *__fmt, ...)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__uselocale
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (uselocale) *)
   3: __cloc
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __c_locale)
   5: [B1.2]([B1.4])
   6: __c_locale __old = __gnu_cxx::__uselocale(__cloc);
   7:  (CXXConstructExpr, __builtin_va_list)
   8: __builtin_va_list __args;
   9: __builtin_va_start
  10: [B1.9] (ImplicitCastExpr, BuiltinFnToFnPtr, void (*)(struct __va_list_tag *, ...))
  11: __args
  12: [B1.11] (ImplicitCastExpr, ArrayToPointerDecay, struct __va_list_tag *)
  13: __fmt
  14: [B1.10]([B1.12], [B1.13])
  15: __builtin_vsnprintf
  16: [B1.15] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)(char *, unsigned long, const char *, struct __va_list_tag *))
  17: __out
  18: [B1.17] (ImplicitCastExpr, LValueToRValue, char *)
  19: __size
  20: [B1.19] (ImplicitCastExpr, LValueToRValue, int)
  21: [B1.20] (ImplicitCastExpr, IntegralCast, unsigned long)
  22: __fmt
  23: [B1.22] (ImplicitCastExpr, LValueToRValue, const char *)
  24: __args
  25: [B1.24] (ImplicitCastExpr, ArrayToPointerDecay, struct __va_list_tag *)
  26: [B1.16]([B1.18], [B1.21], [B1.23], [B1.25])
  27: const int __ret = __builtin_vsnprintf(__out, __size, __fmt, __args);
  28: __builtin_va_end
  29: [B1.28] (ImplicitCastExpr, BuiltinFnToFnPtr, void (*)(struct __va_list_tag *))
  30: __args
  31: [B1.30] (ImplicitCastExpr, ArrayToPointerDecay, struct __va_list_tag *)
  32: [B1.29]([B1.31])
  33: __gnu_cxx::__uselocale
  34: [B1.33] (ImplicitCastExpr, FunctionToPointerDecay, typeof (uselocale) *)
  35: __old
  36: [B1.35] (ImplicitCastExpr, LValueToRValue, __c_locale)
  37: [B1.34]([B1.36])
  38: __ret
  39: [B1.38] (ImplicitCastExpr, LValueToRValue, int)
  40: return [B1.39];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline unsigned int __bswap_32(unsigned int __bsx)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __builtin_bswap32
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, unsigned int (*)(unsigned int))
   3: __bsx
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, unsigned int)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline __uint64_t __bswap_64(__uint64_t __bsx)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __builtin_bswap64
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, unsigned long long (*)(unsigned long long))
   3: __bsx
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __uint64_t)
   5: [B1.4] (ImplicitCastExpr, IntegralCast, unsigned long long)
   6: [B1.2]([B1.5])
   7: [B1.6] (ImplicitCastExpr, IntegralCast, __uint64_t)
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

__pthread_cleanup_class(void (*__fct)(void *), void *__arg) : __cancel_routine(__fct), __cancel_arg(__arg), __do_it(1)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __fct
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, void (*)(void *))
   3: __cancel_routine([B1.2]) (Member initializer)
   4: __arg
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, void *)
   6: __cancel_arg([B1.5]) (Member initializer)
   7: 1
   8: __do_it([B1.7]) (Member initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

~__pthread_cleanup_class()
 [B3 (ENTRY)]
   Succs (1): B2

 [B1]
   1: this
   2: [B1.1]->__cancel_routine
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, void (*)(void *))
   4: this
   5: [B1.4]->__cancel_arg
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, void *)
   7: [B1.3]([B1.6])
   Preds (1): B2
   Succs (1): B0

 [B2]
   1: this
   2: [B2.1]->__do_it
   3: [B2.2] (ImplicitCastExpr, LValueToRValue, int)
   4: [B2.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B2.4]
   Preds (1): B3
   Succs (2): B1 B0

 [B0 (EXIT)]
   Preds (2): B1 B2

void __setdoit(int __newval)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __newval
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, int)
   3: this
   4: [B1.3]->__do_it
   5: [B1.4] = [B1.2]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void __defer()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: pthread_setcanceltype
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(int, int *))
   3: PTHREAD_CANCEL_DEFERRED
   4: [B1.3] (ImplicitCastExpr, IntegralCast, int)
   5: this
   6: [B1.5]->__cancel_type
   7: &[B1.6]
   8: [B1.2]([B1.4], [B1.7])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void __restore() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: pthread_setcanceltype
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(int, int *))
   3: this
   4: [B1.3]->__cancel_type
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, int)
   6: 0
   7: [B1.6] (ImplicitCastExpr, NullToPointer, int *)
   8: [B1.2]([B1.5], [B1.7])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_active_p()
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: __gthread_active_ptr
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, void *)
   3: 0
   4: [B1.3] (ImplicitCastExpr, NullToPointer, void *)
   5: [B1.2] != [B1.4]
   6: [B1.5] (ImplicitCastExpr, IntegralCast, int)
   7: return [B1.6];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: __gthrw___pthread_key_create
   2: &[B2.1]
   3: (void *)[B2.2] (CStyleCastExpr, BitCast, void *)
   4: static void *const __gthread_active_ptr = __extension__ (void *)&__gthrw___pthread_key_create;
   Preds (1): B3
   Succs (1): B1

 [B3]
   T: static init __gthread_active_ptr
   Preds (1): B4
   Succs (2): B1 B2

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_create(__gthread_t *__threadid, void *(*__func)(void *), void *__args)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_create
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_create) *)
   3: __threadid
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_t *)
   5: __null
   6: [B1.5] (ImplicitCastExpr, NullToPointer, const pthread_attr_t *)
   7: __func
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, void *(*)(void *))
   9: __args
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, void *)
  11: [B1.2]([B1.4], [B1.6], [B1.8], [B1.10])
  12: return [B1.11];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_join(__gthread_t __threadid, void **__value_ptr)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_join
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_join) *)
   3: __threadid
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_t)
   5: __value_ptr
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, void **)
   7: [B1.2]([B1.4], [B1.6])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_detach(__gthread_t __threadid)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_detach
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_detach) *)
   3: __threadid
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_t)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_equal(__gthread_t __t1, __gthread_t __t2)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_equal
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_equal) *)
   3: __t1
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_t)
   5: __t2
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, __gthread_t)
   7: [B1.2]([B1.4], [B1.6])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline __gthread_t __gthread_self()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_self
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_self) *)
   3: [B1.2]()
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_yield()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_sched_yield
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (sched_yield) *)
   3: [B1.2]()
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_once(__gthread_once_t *__once, void (*__func)())
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: 1
   2: -[B1.1]
   3: return [B1.2];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __gthrw_pthread_once
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_once) *)
   3: __once
   4: [B2.3] (ImplicitCastExpr, LValueToRValue, __gthread_once_t *)
   5: __func
   6: [B2.5] (ImplicitCastExpr, LValueToRValue, void (*)(void))
   7: [B2.2]([B2.4], [B2.6])
   8: return [B2.7];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __gthread_active_p
   2: [B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(void))
   3: [B3.2]()
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static inline int __gthread_key_create(__gthread_key_t *__key, void (*__dtor)(void *))
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_key_create
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_key_create) *)
   3: __key
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_key_t *)
   5: __dtor
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, void (*)(void *))
   7: [B1.2]([B1.4], [B1.6])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_key_delete(__gthread_key_t __key)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_key_delete
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_key_delete) *)
   3: __key
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_key_t)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline void *__gthread_getspecific(__gthread_key_t __key)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_getspecific
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_getspecific) *)
   3: __key
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_key_t)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_setspecific(__gthread_key_t __key, const void *__ptr)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_setspecific
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_setspecific) *)
   3: __key
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_key_t)
   5: __ptr
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const void *)
   7: [B1.2]([B1.4], [B1.6])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline void __gthread_mutex_init_function(__gthread_mutex_t *__mutex)
 [B3 (ENTRY)]
   Succs (1): B2

 [B1]
   1: __gthrw_pthread_mutex_init
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_mutex_init) *)
   3: __mutex
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_mutex_t *)
   5: __null
   6: [B1.5] (ImplicitCastExpr, NullToPointer, const pthread_mutexattr_t *)
   7: [B1.2]([B1.4], [B1.6])
   Preds (1): B2
   Succs (1): B0

 [B2]
   1: __gthread_active_p
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(void))
   3: [B2.2]()
   4: [B2.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B2.4]
   Preds (1): B3
   Succs (2): B1 B0

 [B0 (EXIT)]
   Preds (2): B1 B2

static inline int __gthread_mutex_destroy(__gthread_mutex_t *__mutex)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: 0
   2: return [B1.1];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __gthrw_pthread_mutex_destroy
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_mutex_destroy) *)
   3: __mutex
   4: [B2.3] (ImplicitCastExpr, LValueToRValue, __gthread_mutex_t *)
   5: [B2.2]([B2.4])
   6: return [B2.5];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __gthread_active_p
   2: [B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(void))
   3: [B3.2]()
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static inline int __gthread_mutex_lock(__gthread_mutex_t *__mutex)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: 0
   2: return [B1.1];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __gthrw_pthread_mutex_lock
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_mutex_lock) *)
   3: __mutex
   4: [B2.3] (ImplicitCastExpr, LValueToRValue, __gthread_mutex_t *)
   5: [B2.2]([B2.4])
   6: return [B2.5];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __gthread_active_p
   2: [B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(void))
   3: [B3.2]()
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static inline int __gthread_mutex_trylock(__gthread_mutex_t *__mutex)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: 0
   2: return [B1.1];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __gthrw_pthread_mutex_trylock
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_mutex_trylock) *)
   3: __mutex
   4: [B2.3] (ImplicitCastExpr, LValueToRValue, __gthread_mutex_t *)
   5: [B2.2]([B2.4])
   6: return [B2.5];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __gthread_active_p
   2: [B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(void))
   3: [B3.2]()
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static inline int __gthread_mutex_timedlock(__gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: 0
   2: return [B1.1];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __gthrw_pthread_mutex_timedlock
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_mutex_timedlock) *)
   3: __mutex
   4: [B2.3] (ImplicitCastExpr, LValueToRValue, __gthread_mutex_t *)
   5: __abs_timeout
   6: [B2.5] (ImplicitCastExpr, LValueToRValue, const __gthread_time_t *)
   7: [B2.2]([B2.4], [B2.6])
   8: return [B2.7];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __gthread_active_p
   2: [B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(void))
   3: [B3.2]()
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static inline int __gthread_mutex_unlock(__gthread_mutex_t *__mutex)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: 0
   2: return [B1.1];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __gthrw_pthread_mutex_unlock
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_mutex_unlock) *)
   3: __mutex
   4: [B2.3] (ImplicitCastExpr, LValueToRValue, __gthread_mutex_t *)
   5: [B2.2]([B2.4])
   6: return [B2.5];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __gthread_active_p
   2: [B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(void))
   3: [B3.2]()
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static inline int __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t *__mutex)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthread_mutex_lock
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(__gthread_mutex_t *))
   3: __mutex
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_recursive_mutex_t *)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_recursive_mutex_trylock(__gthread_recursive_mutex_t *__mutex)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthread_mutex_trylock
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(__gthread_mutex_t *))
   3: __mutex
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_recursive_mutex_t *)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_recursive_mutex_timedlock(__gthread_recursive_mutex_t *__mutex, const __gthread_time_t *__abs_timeout)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthread_mutex_timedlock
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(__gthread_mutex_t *, const __gthread_time_t *))
   3: __mutex
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_recursive_mutex_t *)
   5: __abs_timeout
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const __gthread_time_t *)
   7: [B1.2]([B1.4], [B1.6])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_recursive_mutex_unlock(__gthread_recursive_mutex_t *__mutex)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthread_mutex_unlock
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(__gthread_mutex_t *))
   3: __mutex
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_recursive_mutex_t *)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_recursive_mutex_destroy(__gthread_recursive_mutex_t *__mutex)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthread_mutex_destroy
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(__gthread_mutex_t *))
   3: __mutex
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_recursive_mutex_t *)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_cond_broadcast(__gthread_cond_t *__cond)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_cond_broadcast
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_cond_broadcast) *)
   3: __cond
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_cond_t *)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_cond_signal(__gthread_cond_t *__cond)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_cond_signal
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_cond_signal) *)
   3: __cond
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_cond_t *)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_cond_wait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_cond_wait
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_cond_wait) *)
   3: __cond
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_cond_t *)
   5: __mutex
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, __gthread_mutex_t *)
   7: [B1.2]([B1.4], [B1.6])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_cond_timedwait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_cond_timedwait
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_cond_timedwait) *)
   3: __cond
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_cond_t *)
   5: __mutex
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, __gthread_mutex_t *)
   7: __abs_timeout
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, const __gthread_time_t *)
   9: [B1.2]([B1.4], [B1.6], [B1.8])
  10: return [B1.9];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_cond_wait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *__mutex)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthread_cond_wait
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(__gthread_cond_t *, __gthread_mutex_t *))
   3: __cond
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_cond_t *)
   5: __mutex
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, __gthread_recursive_mutex_t *)
   7: [B1.2]([B1.4], [B1.6])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline int __gthread_cond_destroy(__gthread_cond_t *__cond)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gthrw_pthread_cond_destroy
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, typeof (pthread_cond_destroy) *)
   3: __cond
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, __gthread_cond_t *)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline _Atomic_word __exchange_and_add(volatile _Atomic_word *__mem, int __val)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __mem
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, volatile _Atomic_word *)
   3: 4
   4: __val
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, int)
   6: __atomic_fetch_add([B1.2], [B1.5], [B1.3])
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline void __atomic_add(volatile _Atomic_word *__mem, int __val)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __mem
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, volatile _Atomic_word *)
   3: 4
   4: __val
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, int)
   6: __atomic_fetch_add([B1.2], [B1.5], [B1.3])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline _Atomic_word __exchange_and_add_single(_Atomic_word *__mem, int __val)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __mem
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, _Atomic_word *)
   3: *[B1.2]
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, _Atomic_word)
   5: _Atomic_word __result = *__mem;
   6: __mem
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, _Atomic_word *)
   8: *[B1.7]
   9: __val
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, int)
  11: [B1.8] += [B1.10]
  12: __result
  13: [B1.12] (ImplicitCastExpr, LValueToRValue, _Atomic_word)
  14: return [B1.13];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline void __atomic_add_single(_Atomic_word *__mem, int __val)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __mem
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, _Atomic_word *)
   3: *[B1.2]
   4: __val
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, int)
   6: [B1.3] += [B1.5]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static inline _Atomic_word __exchange_and_add_dispatch(_Atomic_word *__mem, int __val)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: __exchange_and_add_single
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, _Atomic_word (*)(_Atomic_word *, int))
   3: __mem
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, _Atomic_word *)
   5: __val
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, int)
   7: [B1.2]([B1.4], [B1.6])
   8: return [B1.7];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __exchange_and_add
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, _Atomic_word (*)(volatile _Atomic_word *, int))
   3: __mem
   4: [B2.3] (ImplicitCastExpr, LValueToRValue, _Atomic_word *)
   5: [B2.4] (ImplicitCastExpr, NoOp, volatile _Atomic_word *)
   6: __val
   7: [B2.6] (ImplicitCastExpr, LValueToRValue, int)
   8: [B2.2]([B2.5], [B2.7])
   9: return [B2.8];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __gthread_active_p
   2: [B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(void))
   3: [B3.2]()
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

static inline void __atomic_add_dispatch(_Atomic_word *__mem, int __val)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: __atomic_add_single
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(_Atomic_word *, int))
   3: __mem
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, _Atomic_word *)
   5: __val
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, int)
   7: [B1.2]([B1.4], [B1.6])
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: __atomic_add
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(volatile _Atomic_word *, int))
   3: __mem
   4: [B2.3] (ImplicitCastExpr, LValueToRValue, _Atomic_word *)
   5: [B2.4] (ImplicitCastExpr, NoOp, volatile _Atomic_word *)
   6: __val
   7: [B2.6] (ImplicitCastExpr, LValueToRValue, int)
   8: [B2.2]([B2.5], [B2.7])
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __gthread_active_p
   2: [B3.1] (ImplicitCastExpr, FunctionToPointerDecay, int (*)(void))
   3: [B3.2]()
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

bad_alloc() throw() : std::exception()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1:  (CXXConstructExpr, class std::exception)
   2: exception([B1.1]) (Base initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline void *operator new(std::size_t, void *__p) throw()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __p
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, void *)
   3: return [B1.2];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline void *operator new[](std::size_t, void *__p) throw()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __p
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, void *)
   3: return [B1.2];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline void operator delete(void *, void *) throw()
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline void operator delete[](void *, void *) throw()
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

bool operator!=(const std::locale &__other) const throw()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->operator==
   3: __other
   4: [B1.2]([B1.3])
   5: !([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

explicit facet(size_t __refs = 0) throw() : _M_refcount(__refs ? 1 : 0)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: [B4.3] ? [B2.1] : [B3.1]
   2: _M_refcount([B1.1]) (Member initializer)
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: 1
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: 0
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: __refs
   2: [B4.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: [B4.2] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: [B4.3] ? ... : ...
   Preds (1): B5
   Succs (2): B2 B3

 [B0 (EXIT)]
   Preds (1): B1

void _M_add_reference() const throw()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__atomic_add_dispatch
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(_Atomic_word *, int))
   3: this
   4: [B1.3]->_M_refcount
   5: &[B1.4]
   6: 1
   7: [B1.2]([B1.5], [B1.6])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_remove_reference() const throw()
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   T: try ...
   Succs (1): B2

 [B2]
  catch (...):
   1: catch (...) {
}
   Preds (1): B1
   Succs (1): B0

 [B3]
   1: this
   2: [B3.1]->~facet() (Implicit destructor)
   3: delete [B3.1]
   Preds (1): B4
   Succs (1): B0

 [B4]
   1: __gnu_cxx::__exchange_and_add_dispatch
   2: [B4.1] (ImplicitCastExpr, FunctionToPointerDecay, _Atomic_word (*)(_Atomic_word *, int))
   3: this
   4: [B4.3]->_M_refcount
   5: &[B4.4]
   6: 1
   7: -[B4.6]
   8: [B4.2]([B4.5], [B4.7])
   9: 1
  10: [B4.8] == [B4.9]
   T: if [B4.10]
   Preds (1): B5
   Succs (2): B3 B0

 [B0 (EXIT)]
   Preds (3): B2 B3 B4

id()
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_add_reference() throw()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__atomic_add_dispatch
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(_Atomic_word *, int))
   3: this
   4: [B1.3]->_M_refcount
   5: &[B1.4]
   6: 1
   7: [B1.2]([B1.5], [B1.6])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_remove_reference() throw()
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   T: try ...
   Succs (1): B2

 [B2]
  catch (...):
   1: catch (...) {
}
   Preds (1): B1
   Succs (1): B0

 [B3]
   1: this
   2: [B3.1]->~_Impl() (Implicit destructor)
   3: delete [B3.1]
   Preds (1): B4
   Succs (1): B0

 [B4]
   1: __gnu_cxx::__exchange_and_add_dispatch
   2: [B4.1] (ImplicitCastExpr, FunctionToPointerDecay, _Atomic_word (*)(_Atomic_word *, int))
   3: this
   4: [B4.3]->_M_refcount
   5: &[B4.4]
   6: 1
   7: -[B4.6]
   8: [B4.2]([B4.5], [B4.7])
   9: 1
  10: [B4.8] == [B4.9]
   T: if [B4.10]
   Preds (1): B5
   Succs (2): B3 B0

 [B0 (EXIT)]
   Preds (3): B2 B3 B4

bool _M_check_same_name()
 [B8 (ENTRY)]
   Succs (1): B7

 [B1]
   1: __ret
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, _Bool)
   3: return [B1.2];
   Preds (3): B4 B5 B7
   Succs (1): B0

 [B2]
   1: __i
   2: ++[B2.1]
   Preds (1): B3
   Succs (1): B5

 [B3]
   1: __builtin_strcmp
   2: [B3.1] (ImplicitCastExpr, BuiltinFnToFnPtr, int (*)(const char *, const char *))
   3: this
   4: [B3.3]->_M_names
   5: [B3.4] (ImplicitCastExpr, LValueToRValue, char **)
   6: __i
   7: [B3.6] (ImplicitCastExpr, LValueToRValue, size_t)
   8: [B3.5][[B3.7]]
   9: [B3.8] (ImplicitCastExpr, LValueToRValue, char *)
  10: [B3.9] (ImplicitCastExpr, NoOp, const char *)
  11: this
  12: [B3.11]->_M_names
  13: [B3.12] (ImplicitCastExpr, LValueToRValue, char **)
  14: __i
  15: [B3.14] (ImplicitCastExpr, LValueToRValue, size_t)
  16: 1
  17: [B3.16] (ImplicitCastExpr, IntegralCast, unsigned long)
  18: [B3.15] + [B3.17]
  19: [B3.13][[B3.18]]
  20: [B3.19] (ImplicitCastExpr, LValueToRValue, char *)
  21: [B3.20] (ImplicitCastExpr, NoOp, const char *)
  22: [B3.2]([B3.10], [B3.21])
  23: 0
  24: [B3.22] == [B3.23]
  25: __ret
  26: [B3.25] = [B3.24]
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: __i
   2: [B4.1] (ImplicitCastExpr, LValueToRValue, size_t)
   3: _S_categories_size
   4: [B4.3] (ImplicitCastExpr, IntegralCast, int)
   5: 1
   6: [B4.4] - [B4.5]
   7: [B4.6] (ImplicitCastExpr, IntegralCast, unsigned long)
   8: [B4.2] < [B4.7]
   T: for (...; [B5.2] && [B4.8]; ...)
   Preds (1): B5
   Succs (2): B3 B1

 [B5]
   1: __ret
   2: [B5.1] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: [B5.2] && ...
   Preds (2): B2 B6
   Succs (2): B4 B1

 [B6]
   1: 0
   2: [B6.1] (ImplicitCastExpr, IntegralCast, size_t)
   3: size_t __i = 0;
   Preds (1): B7
   Succs (1): B5

 [B7]
   1: true
   2: bool __ret = true;
   3: this
   4: [B7.3]->_M_names
   5: [B7.4] (ImplicitCastExpr, LValueToRValue, char **)
   6: 1
   7: [B7.5][[B7.6]]
   8: [B7.7] (ImplicitCastExpr, LValueToRValue, char *)
   9: [B7.8] (ImplicitCastExpr, PointerToBoolean, _Bool)
   T: if [B7.9]
   Preds (1): B8
   Succs (2): B6 B1

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Fmtflags operator&(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   7: [B1.6] (ImplicitCastExpr, IntegralCast, int)
   8: static_cast<int>([B1.7]) (CXXStaticCastExpr, NoOp, int)
   9: [B1.4] & [B1.8]
  10: std::_Ios_Fmtflags([B1.9]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Fmtflags)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Fmtflags operator|(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   7: [B1.6] (ImplicitCastExpr, IntegralCast, int)
   8: static_cast<int>([B1.7]) (CXXStaticCastExpr, NoOp, int)
   9: [B1.4] | [B1.8]
  10: std::_Ios_Fmtflags([B1.9]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Fmtflags)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Fmtflags operator^(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   7: [B1.6] (ImplicitCastExpr, IntegralCast, int)
   8: static_cast<int>([B1.7]) (CXXStaticCastExpr, NoOp, int)
   9: [B1.4] ^ [B1.8]
  10: std::_Ios_Fmtflags([B1.9]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Fmtflags)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Fmtflags operator~(std::_Ios_Fmtflags __a)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: ~[B1.4]
   6: std::_Ios_Fmtflags([B1.5]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Fmtflags)
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline const std::_Ios_Fmtflags &operator|=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator|
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags))
   3: __a
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   7: [B1.4] | [B1.6] (OperatorCall)
   8: __a
   9: [B1.8] = [B1.7]
  10: [B1.9] (ImplicitCastExpr, NoOp, const enum std::_Ios_Fmtflags)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline const std::_Ios_Fmtflags &operator&=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator&
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags))
   3: __a
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   7: [B1.4] & [B1.6] (OperatorCall)
   8: __a
   9: [B1.8] = [B1.7]
  10: [B1.9] (ImplicitCastExpr, NoOp, const enum std::_Ios_Fmtflags)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline const std::_Ios_Fmtflags &operator^=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator^
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags))
   3: __a
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Fmtflags)
   7: [B1.4] ^ [B1.6] (OperatorCall)
   8: __a
   9: [B1.8] = [B1.7]
  10: [B1.9] (ImplicitCastExpr, NoOp, const enum std::_Ios_Fmtflags)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Openmode operator&(std::_Ios_Openmode __a, std::_Ios_Openmode __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   7: [B1.6] (ImplicitCastExpr, IntegralCast, int)
   8: static_cast<int>([B1.7]) (CXXStaticCastExpr, NoOp, int)
   9: [B1.4] & [B1.8]
  10: std::_Ios_Openmode([B1.9]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Openmode)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Openmode operator|(std::_Ios_Openmode __a, std::_Ios_Openmode __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   7: [B1.6] (ImplicitCastExpr, IntegralCast, int)
   8: static_cast<int>([B1.7]) (CXXStaticCastExpr, NoOp, int)
   9: [B1.4] | [B1.8]
  10: std::_Ios_Openmode([B1.9]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Openmode)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Openmode operator^(std::_Ios_Openmode __a, std::_Ios_Openmode __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   7: [B1.6] (ImplicitCastExpr, IntegralCast, int)
   8: static_cast<int>([B1.7]) (CXXStaticCastExpr, NoOp, int)
   9: [B1.4] ^ [B1.8]
  10: std::_Ios_Openmode([B1.9]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Openmode)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Openmode operator~(std::_Ios_Openmode __a)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: ~[B1.4]
   6: std::_Ios_Openmode([B1.5]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Openmode)
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline const std::_Ios_Openmode &operator|=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator|
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode))
   3: __a
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   7: [B1.4] | [B1.6] (OperatorCall)
   8: __a
   9: [B1.8] = [B1.7]
  10: [B1.9] (ImplicitCastExpr, NoOp, const enum std::_Ios_Openmode)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline const std::_Ios_Openmode &operator&=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator&
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode))
   3: __a
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   7: [B1.4] & [B1.6] (OperatorCall)
   8: __a
   9: [B1.8] = [B1.7]
  10: [B1.9] (ImplicitCastExpr, NoOp, const enum std::_Ios_Openmode)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline const std::_Ios_Openmode &operator^=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator^
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode))
   3: __a
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Openmode)
   7: [B1.4] ^ [B1.6] (OperatorCall)
   8: __a
   9: [B1.8] = [B1.7]
  10: [B1.9] (ImplicitCastExpr, NoOp, const enum std::_Ios_Openmode)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Iostate operator&(std::_Ios_Iostate __a, std::_Ios_Iostate __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   7: [B1.6] (ImplicitCastExpr, IntegralCast, int)
   8: static_cast<int>([B1.7]) (CXXStaticCastExpr, NoOp, int)
   9: [B1.4] & [B1.8]
  10: std::_Ios_Iostate([B1.9]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Iostate)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Iostate operator|(std::_Ios_Iostate __a, std::_Ios_Iostate __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   7: [B1.6] (ImplicitCastExpr, IntegralCast, int)
   8: static_cast<int>([B1.7]) (CXXStaticCastExpr, NoOp, int)
   9: [B1.4] | [B1.8]
  10: std::_Ios_Iostate([B1.9]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Iostate)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Iostate operator^(std::_Ios_Iostate __a, std::_Ios_Iostate __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   7: [B1.6] (ImplicitCastExpr, IntegralCast, int)
   8: static_cast<int>([B1.7]) (CXXStaticCastExpr, NoOp, int)
   9: [B1.4] ^ [B1.8]
  10: std::_Ios_Iostate([B1.9]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Iostate)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::_Ios_Iostate operator~(std::_Ios_Iostate __a)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   3: [B1.2] (ImplicitCastExpr, IntegralCast, int)
   4: static_cast<int>([B1.3]) (CXXStaticCastExpr, NoOp, int)
   5: ~[B1.4]
   6: std::_Ios_Iostate([B1.5]) (CXXFunctionalCastExpr, IntegralCast, enum std::_Ios_Iostate)
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline const std::_Ios_Iostate &operator|=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator|
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate))
   3: __a
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   7: [B1.4] | [B1.6] (OperatorCall)
   8: __a
   9: [B1.8] = [B1.7]
  10: [B1.9] (ImplicitCastExpr, NoOp, const enum std::_Ios_Iostate)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline const std::_Ios_Iostate &operator&=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator&
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate))
   3: __a
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   7: [B1.4] & [B1.6] (OperatorCall)
   8: __a
   9: [B1.8] = [B1.7]
  10: [B1.9] (ImplicitCastExpr, NoOp, const enum std::_Ios_Iostate)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline const std::_Ios_Iostate &operator^=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator^
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate))
   3: __a
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   5: __b
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, enum std::_Ios_Iostate)
   7: [B1.4] ^ [B1.6] (OperatorCall)
   8: __a
   9: [B1.8] = [B1.7]
  10: [B1.9] (ImplicitCastExpr, NoOp, const enum std::_Ios_Iostate)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

error_code()
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

_Callback_list(ios_base::event_callback __fn, int __index, std::ios_base::_Callback_list *__cb) : _M_next(__cb), _M_fn(__fn), _M_index(__index), _M_refcount(0)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __cb
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, struct std::ios_base::_Callback_list *)
   3: _M_next([B1.2]) (Member initializer)
   4: __fn
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, class ios_base::event_callback)
   6: _M_fn([B1.5]) (Member initializer)
   7: __index
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, int)
   9: _M_index([B1.8]) (Member initializer)
  10: 0
  11: _M_refcount([B1.10]) (Member initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_add_reference()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __gnu_cxx::__atomic_add_dispatch
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(_Atomic_word *, int))
   3: this
   4: [B1.3]->_M_refcount
   5: &[B1.4]
   6: 1
   7: [B1.2]([B1.5], [B1.6])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

int _M_remove_reference()
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: __res
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, int)
   3: return [B1.2];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: __gnu_cxx::__exchange_and_add_dispatch
   2: [B3.1] (ImplicitCastExpr, FunctionToPointerDecay, _Atomic_word (*)(_Atomic_word *, int))
   3: this
   4: [B3.3]->_M_refcount
   5: &[B3.4]
   6: 1
   7: -[B3.6]
   8: [B3.2]([B3.5], [B3.7])
   9: int __res = __gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount, -1);
  10: __res
  11: [B3.10] (ImplicitCastExpr, LValueToRValue, int)
  12: 0
  13: [B3.11] == [B3.12]
   T: if [B3.13]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (1): B1

_Words() : _M_pword(0), _M_iword(0)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: 0
   2: [B1.1] (ImplicitCastExpr, NullToPointer, void *)
   3: _M_pword([B1.2]) (Member initializer)
   4: 0
   5: [B1.4] (ImplicitCastExpr, IntegralCast, long)
   6: _M_iword([B1.5]) (Member initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

fmtflags flags() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_flags
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, fmtflags)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

fmtflags flags(fmtflags __fmtfl)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_flags
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, fmtflags)
   4: fmtflags __old = this->_M_flags;
   5: __fmtfl
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, fmtflags)
   7: this
   8: [B1.7]->_M_flags
   9: [B1.8] = [B1.6]
  10: __old
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, fmtflags)
  12: return [B1.11];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

fmtflags setf(fmtflags __fmtfl)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_flags
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, fmtflags)
   4: fmtflags __old = this->_M_flags;
   5: operator|=
   6: [B1.5] (ImplicitCastExpr, FunctionToPointerDecay, const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags))
   7: this
   8: [B1.7]->_M_flags
   9: __fmtfl
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, fmtflags)
  11: [B1.8] |= [B1.10] (OperatorCall)
  12: __old
  13: [B1.12] (ImplicitCastExpr, LValueToRValue, fmtflags)
  14: return [B1.13];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

fmtflags setf(fmtflags __fmtfl, fmtflags __mask)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_flags
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, fmtflags)
   4: fmtflags __old = this->_M_flags;
   5: operator&=
   6: [B1.5] (ImplicitCastExpr, FunctionToPointerDecay, const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags))
   7: this
   8: [B1.7]->_M_flags
   9: operator~
  10: [B1.9] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags))
  11: __mask
  12: [B1.11] (ImplicitCastExpr, LValueToRValue, fmtflags)
  13: ~ [B1.12] (OperatorCall)
  14: [B1.8] &= [B1.13] (OperatorCall)
  15: operator|=
  16: [B1.15] (ImplicitCastExpr, FunctionToPointerDecay, const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags))
  17: this
  18: [B1.17]->_M_flags
  19: operator&
  20: [B1.19] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags))
  21: __fmtfl
  22: [B1.21] (ImplicitCastExpr, LValueToRValue, fmtflags)
  23: __mask
  24: [B1.23] (ImplicitCastExpr, LValueToRValue, fmtflags)
  25: [B1.22] & [B1.24] (OperatorCall)
  26: [B1.18] |= ([B1.25]) (OperatorCall)
  27: __old
  28: [B1.27] (ImplicitCastExpr, LValueToRValue, fmtflags)
  29: return [B1.28];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void unsetf(fmtflags __mask)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator&=
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags))
   3: this
   4: [B1.3]->_M_flags
   5: operator~
   6: [B1.5] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags))
   7: __mask
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, fmtflags)
   9: ~ [B1.8] (OperatorCall)
  10: [B1.4] &= [B1.9] (OperatorCall)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

streamsize precision() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_precision
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, streamsize)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

streamsize precision(streamsize __prec)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_precision
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, streamsize)
   4: streamsize __old = this->_M_precision;
   5: __prec
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, streamsize)
   7: this
   8: [B1.7]->_M_precision
   9: [B1.8] = [B1.6]
  10: __old
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, streamsize)
  12: return [B1.11];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

streamsize width() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_width
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, streamsize)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

streamsize width(streamsize __wide)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_width
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, streamsize)
   4: streamsize __old = this->_M_width;
   5: __wide
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, streamsize)
   7: this
   8: [B1.7]->_M_width
   9: [B1.8] = [B1.6]
  10: __old
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, streamsize)
  12: return [B1.11];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

std::locale getloc() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_ios_locale
   3: [B1.2] (CXXConstructExpr, class std::locale)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const std::locale &_M_getloc() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_ios_locale
   3: return [B1.2];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

long &iword(int __ix)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: ([B4.6]) ? [B2.6] : [B3.6]
   2: std::ios_base::_Words &__word = (__ix < this->_M_word_size) ? this->_M_word[__ix] : this->_M_grow_words(__ix, true);
   3: __word
   4: [B1.3]._M_iword
   5: return [B1.4];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: this
   2: [B2.1]->_M_word
   3: [B2.2] (ImplicitCastExpr, LValueToRValue, struct std::ios_base::_Words *)
   4: __ix
   5: [B2.4] (ImplicitCastExpr, LValueToRValue, int)
   6: [B2.3][[B2.5]]
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: this
   2: [B3.1]->_M_grow_words
   3: __ix
   4: [B3.3] (ImplicitCastExpr, LValueToRValue, int)
   5: true
   6: [B3.2]([B3.4], [B3.5])
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: __ix
   2: [B4.1] (ImplicitCastExpr, LValueToRValue, int)
   3: this
   4: [B4.3]->_M_word_size
   5: [B4.4] (ImplicitCastExpr, LValueToRValue, int)
   6: [B4.2] < [B4.5]
   T: ([B4.6]) ? ... : ...
   Preds (1): B5
   Succs (2): B2 B3

 [B0 (EXIT)]
   Preds (1): B1

void *&pword(int __ix)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: ([B4.6]) ? [B2.6] : [B3.6]
   2: std::ios_base::_Words &__word = (__ix < this->_M_word_size) ? this->_M_word[__ix] : this->_M_grow_words(__ix, false);
   3: __word
   4: [B1.3]._M_pword
   5: return [B1.4];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: this
   2: [B2.1]->_M_word
   3: [B2.2] (ImplicitCastExpr, LValueToRValue, struct std::ios_base::_Words *)
   4: __ix
   5: [B2.4] (ImplicitCastExpr, LValueToRValue, int)
   6: [B2.3][[B2.5]]
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: this
   2: [B3.1]->_M_grow_words
   3: __ix
   4: [B3.3] (ImplicitCastExpr, LValueToRValue, int)
   5: false
   6: [B3.2]([B3.4], [B3.5])
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: __ix
   2: [B4.1] (ImplicitCastExpr, LValueToRValue, int)
   3: this
   4: [B4.3]->_M_word_size
   5: [B4.4] (ImplicitCastExpr, LValueToRValue, int)
   6: [B4.2] < [B4.5]
   T: ([B4.6]) ? ... : ...
   Preds (1): B5
   Succs (2): B2 B3

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &boolalpha(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::boolalpha
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &noboolalpha(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].unsetf
   3: ios_base::boolalpha
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &showbase(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::showbase
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &noshowbase(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].unsetf
   3: ios_base::showbase
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &showpoint(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::showpoint
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &noshowpoint(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].unsetf
   3: ios_base::showpoint
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &showpos(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::showpos
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &noshowpos(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].unsetf
   3: ios_base::showpos
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &skipws(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::skipws
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &noskipws(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].unsetf
   3: ios_base::skipws
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &uppercase(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::uppercase
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &nouppercase(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].unsetf
   3: ios_base::uppercase
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &unitbuf(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::unitbuf
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &nounitbuf(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].unsetf
   3: ios_base::unitbuf
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: [B1.2]([B1.4])
   6: __base
   7: return [B1.6];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &internal(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::internal
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: ios_base::adjustfield
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, fmtflags)
   7: [B1.2]([B1.4], [B1.6])
   8: __base
   9: return [B1.8];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &left(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::left
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: ios_base::adjustfield
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, fmtflags)
   7: [B1.2]([B1.4], [B1.6])
   8: __base
   9: return [B1.8];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &right(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::right
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: ios_base::adjustfield
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, fmtflags)
   7: [B1.2]([B1.4], [B1.6])
   8: __base
   9: return [B1.8];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &dec(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::dec
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: ios_base::basefield
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, fmtflags)
   7: [B1.2]([B1.4], [B1.6])
   8: __base
   9: return [B1.8];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &hex(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::hex
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: ios_base::basefield
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, fmtflags)
   7: [B1.2]([B1.4], [B1.6])
   8: __base
   9: return [B1.8];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &oct(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::oct
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: ios_base::basefield
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, fmtflags)
   7: [B1.2]([B1.4], [B1.6])
   8: __base
   9: return [B1.8];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &fixed(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::fixed
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: ios_base::floatfield
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, fmtflags)
   7: [B1.2]([B1.4], [B1.6])
   8: __base
   9: return [B1.8];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline std::ios_base &scientific(std::ios_base &__base)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __base
   2: [B1.1].setf
   3: ios_base::scientific
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, fmtflags)
   5: ios_base::floatfield
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, fmtflags)
   7: [B1.2]([B1.4], [B1.6])
   8: __base
   9: return [B1.8];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

char_type toupper(char_type __c) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->do_toupper
   3: __c
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const char_type *toupper(char_type *__lo, const char_type *__hi) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->do_toupper
   3: __lo
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type *)
   5: __hi
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const char_type *)
   7: [B1.2]([B1.4], [B1.6])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

char_type tolower(char_type __c) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->do_tolower
   3: __c
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const char_type *tolower(char_type *__lo, const char_type *__hi) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->do_tolower
   3: __lo
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type *)
   5: __hi
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const char_type *)
   7: [B1.2]([B1.4], [B1.6])
   8: return [B1.7];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

char_type widen(char __c) const
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: this
   2: [B1.1]->_M_widen_init
   3: [B1.2]()
   4: this
   5: [B1.4]->do_widen
   6: __c
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, char)
   8: [B1.5]([B1.7])
   9: return [B1.8];
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: this
   2: [B2.1]->_M_widen
   3: [B2.2] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   4: __c
   5: [B2.4] (ImplicitCastExpr, LValueToRValue, char)
   6: [B2.5] (ImplicitCastExpr, IntegralCast, unsigned char)
   7: static_cast<unsigned char>([B2.6]) (CXXStaticCastExpr, NoOp, unsigned char)
   8: [B2.3][[B2.7]]
   9: [B2.8] (ImplicitCastExpr, LValueToRValue, char)
  10: return [B2.9];
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: this
   2: [B3.1]->_M_widen_ok
   3: [B3.2] (ImplicitCastExpr, LValueToRValue, char)
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

const char *widen(const char *__lo, const char *__hi, char_type *__to) const
 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: this
   2: [B1.1]->do_widen
   3: __lo
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: __hi
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: __to
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, char_type *)
   9: [B1.2]([B1.4], [B1.6], [B1.8])
  10: return [B1.9];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: this
   2: [B2.1]->_M_widen_init
   3: [B2.2]()
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: this
   2: [B3.1]->_M_widen_ok
   3: [B3.2] (ImplicitCastExpr, LValueToRValue, char)
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   5: ![B3.4]
   T: if [B3.5]
   Preds (1): B5
   Succs (2): B2 B1

 [B4]
   1: __builtin_memcpy
   2: [B4.1] (ImplicitCastExpr, BuiltinFnToFnPtr, void *(*)(void *, const void *, unsigned long))
   3: __to
   4: [B4.3] (ImplicitCastExpr, LValueToRValue, char_type *)
   5: [B4.4] (ImplicitCastExpr, BitCast, void *)
   6: __lo
   7: [B4.6] (ImplicitCastExpr, LValueToRValue, const char *)
   8: [B4.7] (ImplicitCastExpr, BitCast, const void *)
   9: __hi
  10: [B4.9] (ImplicitCastExpr, LValueToRValue, const char *)
  11: __lo
  12: [B4.11] (ImplicitCastExpr, LValueToRValue, const char *)
  13: [B4.10] - [B4.12]
  14: [B4.13] (ImplicitCastExpr, IntegralCast, unsigned long)
  15: [B4.2]([B4.5], [B4.8], [B4.14])
  16: __hi
  17: [B4.16] (ImplicitCastExpr, LValueToRValue, const char *)
  18: return [B4.17];
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: this
   2: [B5.1]->_M_widen_ok
   3: [B5.2] (ImplicitCastExpr, LValueToRValue, char)
   4: [B5.3] (ImplicitCastExpr, IntegralCast, int)
   5: 1
   6: [B5.4] == [B5.5]
   T: if [B5.6]
   Preds (1): B6
   Succs (2): B4 B3

 [B0 (EXIT)]
   Preds (2): B1 B4

char narrow(char_type __c, char __dfault) const
 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: __t
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char)
   3: return [B1.2];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: __t
   2: [B2.1] (ImplicitCastExpr, LValueToRValue, char)
   3: this
   4: [B2.3]->_M_narrow
   5: [B2.4] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   6: __c
   7: [B2.6] (ImplicitCastExpr, LValueToRValue, char_type)
   8: [B2.7] (ImplicitCastExpr, IntegralCast, unsigned char)
   9: static_cast<unsigned char>([B2.8]) (CXXStaticCastExpr, NoOp, unsigned char)
  10: [B2.5][[B2.9]]
  11: [B2.10] = [B2.2]
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: this
   2: [B3.1]->do_narrow
   3: __c
   4: [B3.3] (ImplicitCastExpr, LValueToRValue, char_type)
   5: __dfault
   6: [B3.5] (ImplicitCastExpr, LValueToRValue, char)
   7: [B3.2]([B3.4], [B3.6])
   8: const char __t = this->do_narrow(__c, __dfault);
   9: __t
  10: [B3.9] (ImplicitCastExpr, LValueToRValue, char)
  11: [B3.10] (ImplicitCastExpr, IntegralCast, int)
  12: __dfault
  13: [B3.12] (ImplicitCastExpr, LValueToRValue, char)
  14: [B3.13] (ImplicitCastExpr, IntegralCast, int)
  15: [B3.11] != [B3.14]
   T: if [B3.15]
   Preds (1): B5
   Succs (2): B2 B1

 [B4]
   1: this
   2: [B4.1]->_M_narrow
   3: [B4.2] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   4: __c
   5: [B4.4] (ImplicitCastExpr, LValueToRValue, char_type)
   6: [B4.5] (ImplicitCastExpr, IntegralCast, unsigned char)
   7: static_cast<unsigned char>([B4.6]) (CXXStaticCastExpr, NoOp, unsigned char)
   8: [B4.3][[B4.7]]
   9: [B4.8] (ImplicitCastExpr, LValueToRValue, char)
  10: return [B4.9];
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: this
   2: [B5.1]->_M_narrow
   3: [B5.2] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   4: __c
   5: [B5.4] (ImplicitCastExpr, LValueToRValue, char_type)
   6: [B5.5] (ImplicitCastExpr, IntegralCast, unsigned char)
   7: static_cast<unsigned char>([B5.6]) (CXXStaticCastExpr, NoOp, unsigned char)
   8: [B5.3][[B5.7]]
   9: [B5.8] (ImplicitCastExpr, LValueToRValue, char)
  10: [B5.9] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B5.10]
   Preds (1): B6
   Succs (2): B4 B3

 [B0 (EXIT)]
   Preds (2): B1 B4

const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const
 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: this
   2: [B1.1]->do_narrow
   3: __lo
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, const char_type *)
   5: __hi
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const char_type *)
   7: __dfault
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, char)
   9: __to
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, char *)
  11: [B1.2]([B1.4], [B1.6], [B1.8], [B1.10])
  12: return [B1.11];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: this
   2: [B2.1]->_M_narrow_init
   3: [B2.2]()
   Preds (1): B3
   Succs (1): B1

 [B3]
   1: this
   2: [B3.1]->_M_narrow_ok
   3: [B3.2] (ImplicitCastExpr, LValueToRValue, char)
   4: [B3.3] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   5: ![B3.4]
   T: if [B3.5]
   Preds (1): B5
   Succs (2): B2 B1

 [B4]
   1: __builtin_memcpy
   2: [B4.1] (ImplicitCastExpr, BuiltinFnToFnPtr, void *(*)(void *, const void *, unsigned long))
   3: __to
   4: [B4.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: [B4.4] (ImplicitCastExpr, BitCast, void *)
   6: __lo
   7: [B4.6] (ImplicitCastExpr, LValueToRValue, const char_type *)
   8: [B4.7] (ImplicitCastExpr, BitCast, const void *)
   9: __hi
  10: [B4.9] (ImplicitCastExpr, LValueToRValue, const char_type *)
  11: __lo
  12: [B4.11] (ImplicitCastExpr, LValueToRValue, const char_type *)
  13: [B4.10] - [B4.12]
  14: [B4.13] (ImplicitCastExpr, IntegralCast, unsigned long)
  15: [B4.2]([B4.5], [B4.8], [B4.14])
  16: __hi
  17: [B4.16] (ImplicitCastExpr, LValueToRValue, const char_type *)
  18: return [B4.17];
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: __builtin_expect
   2: [B5.1] (ImplicitCastExpr, BuiltinFnToFnPtr, long (*)(long, long))
   3: this
   4: [B5.3]->_M_narrow_ok
   5: [B5.4] (ImplicitCastExpr, LValueToRValue, char)
   6: [B5.5] (ImplicitCastExpr, IntegralCast, int)
   7: 1
   8: [B5.6] == [B5.7]
   9: [B5.8] (ImplicitCastExpr, IntegralCast, long)
  10: true
  11: [B5.10] (ImplicitCastExpr, IntegralCast, long)
  12: [B5.2]([B5.9], [B5.11])
  13: [B5.12] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B5.13]
   Preds (1): B6
   Succs (2): B4 B3

 [B0 (EXIT)]
   Preds (2): B1 B4

const mask *table() const throw()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_table
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, const mask *)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

virtual char_type do_widen(char __c) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char)
   3: return [B1.2];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__to) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __builtin_memcpy
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, void *(*)(void *, const void *, unsigned long))
   3: __to
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char_type *)
   5: [B1.4] (ImplicitCastExpr, BitCast, void *)
   6: __lo
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, const char *)
   8: [B1.7] (ImplicitCastExpr, BitCast, const void *)
   9: __hi
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, const char *)
  11: __lo
  12: [B1.11] (ImplicitCastExpr, LValueToRValue, const char *)
  13: [B1.10] - [B1.12]
  14: [B1.13] (ImplicitCastExpr, IntegralCast, unsigned long)
  15: [B1.2]([B1.5], [B1.8], [B1.14])
  16: __hi
  17: [B1.16] (ImplicitCastExpr, LValueToRValue, const char *)
  18: return [B1.17];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

virtual char do_narrow(char_type __c, char __dfault) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __c
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, char_type)
   3: return [B1.2];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __builtin_memcpy
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, void *(*)(void *, const void *, unsigned long))
   3: __to
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, char *)
   5: [B1.4] (ImplicitCastExpr, BitCast, void *)
   6: __lo
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, const char_type *)
   8: [B1.7] (ImplicitCastExpr, BitCast, const void *)
   9: __hi
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, const char_type *)
  11: __lo
  12: [B1.11] (ImplicitCastExpr, LValueToRValue, const char_type *)
  13: [B1.10] - [B1.12]
  14: [B1.13] (ImplicitCastExpr, IntegralCast, unsigned long)
  15: [B1.2]([B1.5], [B1.8], [B1.14])
  16: __hi
  17: [B1.16] (ImplicitCastExpr, LValueToRValue, const char_type *)
  18: return [B1.17];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

bool is(mask __m, char __c) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_table
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, const mask *)
   4: __c
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, char)
   6: [B1.5] (ImplicitCastExpr, IntegralCast, unsigned char)
   7: static_cast<unsigned char>([B1.6]) (CXXStaticCastExpr, NoOp, unsigned char)
   8: [B1.3][[B1.7]]
   9: [B1.8] (ImplicitCastExpr, LValueToRValue, mask)
  10: [B1.9] (ImplicitCastExpr, IntegralCast, int)
  11: __m
  12: [B1.11] (ImplicitCastExpr, LValueToRValue, mask)
  13: [B1.12] (ImplicitCastExpr, IntegralCast, int)
  14: [B1.10] & [B1.13]
  15: [B1.14] (ImplicitCastExpr, IntegralToBoolean, _Bool)
  16: return [B1.15];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const char *is(const char *__low, const char *__high, mask *__vec) const
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: __high
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: return [B1.2];
   Preds (1): B4
   Succs (1): B0

 [B2]
   Preds (1): B3
   Succs (1): B4

 [B3]
   1: this
   2: [B3.1]->_M_table
   3: [B3.2] (ImplicitCastExpr, LValueToRValue, const mask *)
   4: __low
   5: [B3.4]++
   6: *[B3.5]
   7: [B3.6] (ImplicitCastExpr, LValueToRValue, char)
   8: [B3.7] (ImplicitCastExpr, IntegralCast, unsigned char)
   9: static_cast<unsigned char>([B3.8]) (CXXStaticCastExpr, NoOp, unsigned char)
  10: [B3.3][[B3.9]]
  11: [B3.10] (ImplicitCastExpr, LValueToRValue, mask)
  12: __vec
  13: [B3.12]++
  14: *[B3.13]
  15: [B3.14] = [B3.11]
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: __low
   2: [B4.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: __high
   4: [B4.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: [B4.2] < [B4.4]
   T: while [B4.5]
   Preds (2): B2 B5
   Succs (2): B3 B1

 [B0 (EXIT)]
   Preds (1): B1

const char *scan_is(mask __m, const char *__low, const char *__high) const
 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: __low
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: return [B1.2];
   Preds (2): B4 B5
   Succs (1): B0

 [B2]
   Preds (1): B3
   Succs (1): B5

 [B3]
   1: __low
   2: ++[B3.1]
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: this
   2: [B4.1]->_M_table
   3: [B4.2] (ImplicitCastExpr, LValueToRValue, const mask *)
   4: __low
   5: [B4.4] (ImplicitCastExpr, LValueToRValue, const char *)
   6: *[B4.5]
   7: [B4.6] (ImplicitCastExpr, LValueToRValue, char)
   8: [B4.7] (ImplicitCastExpr, IntegralCast, unsigned char)
   9: static_cast<unsigned char>([B4.8]) (CXXStaticCastExpr, NoOp, unsigned char)
  10: [B4.3][[B4.9]]
  11: [B4.10] (ImplicitCastExpr, LValueToRValue, mask)
  12: [B4.11] (ImplicitCastExpr, IntegralCast, int)
  13: __m
  14: [B4.13] (ImplicitCastExpr, LValueToRValue, mask)
  15: [B4.14] (ImplicitCastExpr, IntegralCast, int)
  16: [B4.12] & [B4.15]
  17: ([B4.16]) (ImplicitCastExpr, IntegralToBoolean, _Bool)
  18: ![B4.17]
   T: while [B5.5] && [B4.18]
   Preds (1): B5
   Succs (2): B3 B1

 [B5]
   1: __low
   2: [B5.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: __high
   4: [B5.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: [B5.2] < [B5.4]
   T: [B5.5] && ...
   Preds (2): B2 B6
   Succs (2): B4 B1

 [B0 (EXIT)]
   Preds (1): B1

const char *scan_not(mask __m, const char *__low, const char *__high) const
 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: __low
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: return [B1.2];
   Preds (2): B4 B5
   Succs (1): B0

 [B2]
   Preds (1): B3
   Succs (1): B5

 [B3]
   1: __low
   2: ++[B3.1]
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: this
   2: [B4.1]->_M_table
   3: [B4.2] (ImplicitCastExpr, LValueToRValue, const mask *)
   4: __low
   5: [B4.4] (ImplicitCastExpr, LValueToRValue, const char *)
   6: *[B4.5]
   7: [B4.6] (ImplicitCastExpr, LValueToRValue, char)
   8: [B4.7] (ImplicitCastExpr, IntegralCast, unsigned char)
   9: static_cast<unsigned char>([B4.8]) (CXXStaticCastExpr, NoOp, unsigned char)
  10: [B4.3][[B4.9]]
  11: [B4.10] (ImplicitCastExpr, LValueToRValue, mask)
  12: [B4.11] (ImplicitCastExpr, IntegralCast, int)
  13: __m
  14: [B4.13] (ImplicitCastExpr, LValueToRValue, mask)
  15: [B4.14] (ImplicitCastExpr, IntegralCast, int)
  16: [B4.12] & [B4.15]
  17: 0
  18: ([B4.16]) != [B4.17]
   T: while [B5.5] && [B4.18]
   Preds (1): B5
   Succs (2): B3 B1

 [B5]
   1: __low
   2: [B5.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: __high
   4: [B5.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: [B5.2] < [B5.4]
   T: [B5.5] && ...
   Preds (2): B2 B6
   Succs (2): B4 B1

 [B0 (EXIT)]
   Preds (1): B1

inline long abs(long __i)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __builtin_labs
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, long (*)(long))
   3: __i
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, long)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline ldiv_t div(long __i, long __j)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: ldiv
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, ldiv_t (*)(long, long) throw())
   3: __i
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, long)
   5: __j
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, long)
   7: [B1.2]([B1.4], [B1.6])
   8: [B1.7] (ImplicitCastExpr, NoOp, const ldiv_t)
   9: [B1.8]
  10: [B1.9] (CXXConstructExpr, ldiv_t)
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline long long abs(long long __x)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __builtin_llabs
   2: [B1.1] (ImplicitCastExpr, BuiltinFnToFnPtr, long long (*)(long long))
   3: __x
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, long long)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline lldiv_t div(long long __n, long long __d)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1:  (CXXConstructExpr, lldiv_t)
   2: lldiv_t __q;
   3: __n
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, long long)
   5: __d
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, long long)
   7: [B1.4] / [B1.6]
   8: __q
   9: [B1.8].quot
  10: [B1.9] = [B1.7]
  11: __n
  12: [B1.11] (ImplicitCastExpr, LValueToRValue, long long)
  13: __d
  14: [B1.13] (ImplicitCastExpr, LValueToRValue, long long)
  15: [B1.12] % [B1.14]
  16: __q
  17: [B1.16].rem
  18: [B1.17] = [B1.15]
  19: __q
  20: [B1.19] (ImplicitCastExpr, NoOp, const lldiv_t)
  21: [B1.20] (CXXConstructExpr, lldiv_t)
  22: return [B1.21];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

Module() : description(), vendor()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1:  (CXXConstructExpr, string)
   2: description([B1.1]) (Member initializer)
   3:  (CXXConstructExpr, string)
   4: vendor([B1.3]) (Member initializer)
   5: this
   6: [B1.5]->SetDescription
   7: "undefined"
   8: [B1.7] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
   9: [B1.6]([B1.8])
  10: this
  11: [B1.10]->SetVendor
  12: "undefined"
  13: [B1.12] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  14: [B1.11]([B1.13])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

Module(const char *_description, const char *_vendor, int _type, int _category, int _units) : description(), vendor()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1:  (CXXConstructExpr, string)
   2: description([B1.1]) (Member initializer)
   3:  (CXXConstructExpr, string)
   4: vendor([B1.3]) (Member initializer)
   5: this
   6: [B1.5]->SetDescription
   7: _description
   8: [B1.7] (ImplicitCastExpr, LValueToRValue, const char *)
   9: [B1.6]([B1.8])
  10: this
  11: [B1.10]->SetVendor
  12: _vendor
  13: [B1.12] (ImplicitCastExpr, LValueToRValue, const char *)
  14: [B1.11]([B1.13])
  15: this
  16: [B1.15]->SetType
  17: _type
  18: [B1.17] (ImplicitCastExpr, LValueToRValue, int)
  19: [B1.16]([B1.18])
  20: this
  21: [B1.20]->SetCategory
  22: _category
  23: [B1.22] (ImplicitCastExpr, LValueToRValue, int)
  24: [B1.21]([B1.23])
  25: this
  26: [B1.25]->SetUnits
  27: _units
  28: [B1.27] (ImplicitCastExpr, LValueToRValue, int)
  29: [B1.26]([B1.28])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

Module(const Module &obj) : description(), vendor()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1:  (CXXConstructExpr, string)
   2: description([B1.1]) (Member initializer)
   3:  (CXXConstructExpr, string)
   4: vendor([B1.3]) (Member initializer)
   5: this
   6: [B1.5]->SetDescription
   7: obj
   8: [B1.7].GetDescription
   9: [B1.8]()
  10: [B1.6]([B1.9])
  11: this
  12: [B1.11]->SetVendor
  13: obj
  14: [B1.13].GetVendor
  15: [B1.14]()
  16: [B1.12]([B1.15])
  17: this
  18: [B1.17]->SetType
  19: obj
  20: [B1.19].type
  21: [B1.20] (ImplicitCastExpr, LValueToRValue, int)
  22: [B1.18]([B1.21])
  23: this
  24: [B1.23]->SetUnits
  25: obj
  26: [B1.25].units
  27: [B1.26] (ImplicitCastExpr, LValueToRValue, int)
  28: [B1.24]([B1.27])
  29: this
  30: [B1.29]->SetSupportMetric
  31: obj
  32: [B1.31].GetSupportMetric
  33: [B1.32]()
  34: [B1.30]([B1.33])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

Module &operator=(const Module &obj)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->SetDescription
   3: obj
   4: [B1.3].GetDescription
   5: [B1.4]()
   6: [B1.2]([B1.5])
   7: this
   8: [B1.7]->SetVendor
   9: obj
  10: [B1.9].GetVendor
  11: [B1.10]()
  12: [B1.8]([B1.11])
  13: this
  14: [B1.13]->SetType
  15: obj
  16: [B1.15].type
  17: [B1.16] (ImplicitCastExpr, LValueToRValue, int)
  18: [B1.14]([B1.17])
  19: this
  20: [B1.19]->SetUnits
  21: obj
  22: [B1.21].units
  23: [B1.22] (ImplicitCastExpr, LValueToRValue, int)
  24: [B1.20]([B1.23])
  25: this
  26: [B1.25]->SetSupportMetric
  27: obj
  28: [B1.27].GetSupportMetric
  29: [B1.28]()
  30: [B1.26]([B1.29])
  31: this
  32: *[B1.31]
  33: return [B1.32];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

~Module()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this->vendor.~basic_string() (Member object destructor)
   2: this->description.~basic_string() (Member object destructor)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void SetDescription(const char *new_description)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator=
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, class std::__cxx11::basic_string<char> &(*)(const char *))
   3: this
   4: [B1.3]->description
   5: new_description
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: [B1.4] = [B1.6] (OperatorCall)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const char *GetDescription() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->description
   3: [B1.2].c_str
   4: [B1.3]()
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void SetVendor(const char *new_vendor)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator=
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, class std::__cxx11::basic_string<char> &(*)(const char *))
   3: this
   4: [B1.3]->vendor
   5: new_vendor
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, const char *)
   7: [B1.4] = [B1.6] (OperatorCall)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const char *GetVendor() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->vendor
   3: [B1.2].c_str
   4: [B1.3]()
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void SetType(int new_type)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: new_type
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, int)
   3: this
   4: [B1.3]->type
   5: [B1.4] = [B1.2]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

int GetTypeID() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->type
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, int)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void SetCategory(int new_category)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: new_category
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, int)
   3: this
   4: [B1.3]->category
   5: [B1.4] = [B1.2]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

int GetCategoryID() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->category
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, int)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void SetUnits(int new_units)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: new_units
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, int)
   3: this
   4: [B1.3]->units
   5: [B1.4] = [B1.2]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

int GetUnits() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->units
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, int)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void SetSupportMetric(int new_metric)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: new_metric
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, int)
   3: this
   4: [B1.3]->supportMetric
   5: [B1.4] = [B1.2]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

int GetSupportMetric() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->supportMetric
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, int)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

ostream &operator<<(ostream &output, const Module &module)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: operator<<
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
   3: operator<<
   4: [B1.3] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
   5: operator<<
   6: [B1.5] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
   7: operator<<
   8: [B1.7] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
   9: output
  10: "** "
  11: [B1.10] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  12: [B1.9] << [B1.11] (OperatorCall)
  13: module
  14: [B1.13].GetDescription
  15: [B1.14]()
  16: [B1.12] << [B1.15] (OperatorCall)
  17: " module data **"
  18: [B1.17] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  19: [B1.16] << [B1.18] (OperatorCall)
  20: endl
  21: [B1.20] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  22: [B1.19] << [B1.21] (OperatorCall)
  23: operator<<
  24: [B1.23] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
  25: operator<<
  26: [B1.25] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  27: operator<<
  28: [B1.27] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  29: output
  30: "Module type: "
  31: [B1.30] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  32: [B1.29] << [B1.31] (OperatorCall)
  33: module
  34: [B1.33].GetType
  35: [B1.34]()
  36: [B1.32] << [B1.35] (OperatorCall)
  37: endl
  38: [B1.37] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  39: [B1.36] << [B1.38] (OperatorCall)
  40: operator<<
  41: [B1.40] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
  42: operator<<
  43: [B1.42] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  44: operator<<
  45: [B1.44] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  46: output
  47: "Module category: "
  48: [B1.47] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  49: [B1.46] << [B1.48] (OperatorCall)
  50: module
  51: [B1.50].GetCategory
  52: [B1.51]()
  53: [B1.49] << [B1.52] (OperatorCall)
  54: endl
  55: [B1.54] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  56: [B1.53] << [B1.55] (OperatorCall)
  57: operator<<
  58: [B1.57] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
  59: operator<<
  60: [B1.59] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(int))
  61: operator<<
  62: [B1.61] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  63: output
  64: "Number of sub-modules: "
  65: [B1.64] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  66: [B1.63] << [B1.65] (OperatorCall)
  67: module
  68: [B1.67].GetUnits
  69: [B1.68]()
  70: [B1.66] << [B1.69] (OperatorCall)
  71: endl
  72: [B1.71] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  73: [B1.70] << [B1.72] (OperatorCall)
  74: operator<<
  75: [B1.74] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(__ostream_type &(*)(__ostream_type &)))
  76: operator<<
  77: [B1.76] (ImplicitCastExpr, FunctionToPointerDecay, __ostream_type &(*)(int))
  78: operator<<
  79: [B1.78] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *))
  80: output
  81: "Module support metric: "
  82: [B1.81] (ImplicitCastExpr, ArrayToPointerDecay, const char *)
  83: [B1.80] << [B1.82] (OperatorCall)
  84: module
  85: [B1.84].GetSupportMetric
  86: [B1.85]()
  87: [B1.83] << [B1.86] (OperatorCall)
  88: endl
  89: [B1.88] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
  90: [B1.87] << [B1.89] (OperatorCall)
  91: output
  92: return [B1.91];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

basic_string() : _M_dataplus(this->_M_local_data())
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_local_data
   3: [B1.2]()
   4: 
   5: [B1.3] (CXXConstructExpr, struct std::__cxx11::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider)
   6: _M_dataplus([B1.5]) (Member initializer)
   7: this
   8: [B1.7]->_M_set_length
   9: 0
  10: [B1.9] (ImplicitCastExpr, IntegralCast, size_type)
  11: [B1.8]([B1.10])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

pointer _M_local_data()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->
   3: [B1.2]_M_local_buf
   4: [B1.3] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   5: pointer([B1.4]) (CXXFunctionalCastExpr, NoOp, pointer)
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

allocator() throw() : __gnu_cxx::new_allocator<char>()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1:  (CXXConstructExpr, __gnu_cxx::new_allocator<char>)
   2: new_allocator([B1.1]) (Base initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

new_allocator() throw()
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

~__gnu_cxx::new_allocator<char>() throw()
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

~std::allocator<char>() throw()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: ~new_allocator() (Base object destructor)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

_Alloc_hider(pointer __dat, const std::allocator<char> &__a = std::allocator<char>()) : allocator_type(__a), _M_p(__dat)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (CXXConstructExpr, allocator_type)
   3: allocator([B1.2]) (Base initializer)
   4: __dat
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, pointer)
   6: _M_p([B1.5]) (Member initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

allocator(const std::allocator<char> &__a) throw() : __gnu_cxx::new_allocator<char>(__a)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, DerivedToBase, const class __gnu_cxx::new_allocator<char>)
   3: [B1.2] (CXXConstructExpr, __gnu_cxx::new_allocator<char>)
   4: new_allocator([B1.3]) (Base initializer)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

new_allocator(const __gnu_cxx::new_allocator<char> &) throw()
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_set_length(size_type __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_length
   3: __n
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, size_type)
   5: [B1.2]([B1.4])
   6: traits_type::assign
   7: [B1.6] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(char_type &, const char_type &))
   8: this
   9: [B1.8] (ImplicitCastExpr, NoOp, const class std::__cxx11::basic_string<char> *)
  10: [B1.9]->_M_data
  11: [B1.10]()
  12: __n
  13: [B1.12] (ImplicitCastExpr, LValueToRValue, size_type)
  14: [B1.11][[B1.13]]
  15: char()
  16: [B1.15]
  17: [B1.7]([B1.14], [B1.16])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_length(size_type __length)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __length
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, size_type)
   3: this
   4: [B1.3]->_M_string_length
   5: [B1.4] = [B1.2]
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

pointer _M_data() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_dataplus
   3: [B1.2]._M_p
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, pointer)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

~std::__cxx11::basic_string<char>()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_dispose
   3: [B1.2]()
   4: this->_M_dataplus.~_Alloc_hider() (Member object destructor)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_dispose()
 [B3 (ENTRY)]
   Succs (1): B2

 [B1]
   1: this
   2: [B1.1]->_M_destroy
   3: this
   4: [B1.3]->
   5: [B1.4]_M_allocated_capacity
   6: [B1.5] (ImplicitCastExpr, LValueToRValue, size_type)
   7: [B1.2]([B1.6])
   Preds (1): B2
   Succs (1): B0

 [B2]
   1: this
   2: [B2.1] (ImplicitCastExpr, NoOp, const class std::__cxx11::basic_string<char> *)
   3: [B2.2]->_M_is_local
   4: [B2.3]()
   5: ![B2.4]
   T: if [B2.5]
   Preds (1): B3
   Succs (2): B1 B0

 [B0 (EXIT)]
   Preds (2): B1 B2

bool _M_is_local() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_data
   3: [B1.2]()
   4: [B1.3] (ImplicitCastExpr, NoOp, const char *)
   5: this
   6: [B1.5]->_M_local_data
   7: [B1.6]()
   8: [B1.4] == [B1.7]
   9: return [B1.8];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const_pointer _M_local_data() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->
   3: [B1.2]_M_local_buf
   4: [B1.3] (ImplicitCastExpr, ArrayToPointerDecay, char *)
   5: const_pointer([B1.4]) (CXXFunctionalCastExpr, NoOp, const_pointer)
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void _M_destroy(size_type __size) throw()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: _Alloc_traits::deallocate
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(class std::allocator<char> &, pointer, size_type))
   3: this
   4: [B1.3]->_M_get_allocator
   5: [B1.4]()
   6: this
   7: [B1.6] (ImplicitCastExpr, NoOp, const class std::__cxx11::basic_string<char> *)
   8: [B1.7]->_M_data
   9: [B1.8]()
  10: __size
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, size_type)
  12: 1
  13: [B1.12] (ImplicitCastExpr, IntegralCast, unsigned long)
  14: [B1.11] + [B1.13]
  15: [B1.2]([B1.5], [B1.9], [B1.14])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

static void deallocate(std::allocator<char> &__a, pointer __p, size_type __n)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __a
   2: [B1.1] (ImplicitCastExpr, UncheckedDerivedToBase, class __gnu_cxx::new_allocator<char>)
   3: [B1.2].deallocate
   4: __p
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, pointer)
   6: __n
   7: [B1.6] (ImplicitCastExpr, LValueToRValue, size_type)
   8: [B1.3]([B1.5], [B1.7])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

void deallocate(pointer __p, size_type)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: ::operator delete
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(void *) throw())
   3: __p
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, pointer)
   5: [B1.4] (ImplicitCastExpr, BitCast, void *)
   6: [B1.2]([B1.5])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

allocator_type &_M_get_allocator()
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_dataplus
   3: [B1.2] (ImplicitCastExpr, DerivedToBase, allocator_type)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

std::__cxx11::basic_string<char> &operator=(const char *__s)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->assign
   3: __s
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, const char *)
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

std::__cxx11::basic_string<char> &assign(const char *__s)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_replace
   3: 0
   4: [B1.3] (ImplicitCastExpr, IntegralCast, size_type)
   5: size_type([B1.4]) (CXXFunctionalCastExpr, NoOp, size_type)
   6: this
   7: [B1.6] (ImplicitCastExpr, NoOp, const class std::__cxx11::basic_string<char> *)
   8: [B1.7]->size
   9: [B1.8]()
  10: __s
  11: [B1.10] (ImplicitCastExpr, LValueToRValue, const char *)
  12: traits_type::length
  13: [B1.12] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(const char_type *))
  14: __s
  15: [B1.14] (ImplicitCastExpr, LValueToRValue, const char *)
  16: [B1.13]([B1.15])
  17: [B1.2]([B1.5], [B1.9], [B1.11], [B1.16])
  18: return [B1.17];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

size_type size() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_string_length
   3: [B1.2] (ImplicitCastExpr, LValueToRValue, size_type)
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

const char *c_str() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->_M_data
   3: [B1.2]()
   4: [B1.3] (ImplicitCastExpr, NoOp, const char *)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: __out
   2: return [B1.1];
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: __ostream_insert
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &, const char *, streamsize))
   3: __out
   4: __s
   5: [B2.4] (ImplicitCastExpr, LValueToRValue, const char *)
   6: char_traits<char>::length
   7: [B2.6] (ImplicitCastExpr, FunctionToPointerDecay, size_t (*)(const char_type *))
   8: __s
   9: [B2.8] (ImplicitCastExpr, LValueToRValue, const char *)
  10: [B2.7]([B2.9])
  11: [B2.10] (ImplicitCastExpr, IntegralCast, streamsize)
  12: static_cast<streamsize>([B2.11]) (CXXStaticCastExpr, NoOp, streamsize)
  13: [B2.2]([B2.3], [B2.5], [B2.12])
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: __out
   2: [B3.1] (ImplicitCastExpr, UncheckedDerivedToBase, class std::basic_ios<char>)
   3: [B3.2].setstate
   4: ios_base::badbit
   5: [B3.4] (ImplicitCastExpr, LValueToRValue, iostate)
   6: [B3.3]([B3.5])
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: __s
   2: [B4.1] (ImplicitCastExpr, LValueToRValue, const char *)
   3: [B4.2] (ImplicitCastExpr, PointerToBoolean, _Bool)
   4: ![B4.3]
   T: if [B4.4]
   Preds (1): B5
   Succs (2): B3 B2

 [B0 (EXIT)]
   Preds (1): B1

void setstate(iostate __state)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1]->clear
   3: operator|
   4: [B1.3] (ImplicitCastExpr, FunctionToPointerDecay, enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate))
   5: this
   6: [B1.5] (ImplicitCastExpr, NoOp, const class std::basic_ios<char> *)
   7: [B1.6]->rdstate
   8: [B1.7]()
   9: __state
  10: [B1.9] (ImplicitCastExpr, LValueToRValue, iostate)
  11: [B1.8] | [B1.10] (OperatorCall)
  12: [B1.2]([B1.11])
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

iostate rdstate() const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: this
   2: [B1.1] (ImplicitCastExpr, UncheckedDerivedToBase, class std::ios_base *)
   3: [B1.2]->_M_streambuf_state
   4: [B1.3] (ImplicitCastExpr, LValueToRValue, iostate)
   5: return [B1.4];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline basic_ostream<char, std::char_traits<char> > &endl(basic_ostream<char, std::char_traits<char> > &__os)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: flush
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, basic_ostream<char, struct std::char_traits<char> > &(*)(basic_ostream<char, struct std::char_traits<char> > &))
   3: __os
   4: [B1.3].put
   5: __os
   6: [B1.5] (ImplicitCastExpr, UncheckedDerivedToBase, const class std::basic_ios<char>)
   7: [B1.6].widen
   8: '\n'
   9: [B1.7]([B1.8])
  10: [B1.4]([B1.9])
  11: [B1.2]([B1.10])
  12: return [B1.11];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

char_type widen(char __c) const
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __check_facet
   2: [B1.1] (ImplicitCastExpr, FunctionToPointerDecay, const class std::ctype<char> &(*)(const class std::ctype<char> *))
   3: this
   4: [B1.3]->_M_ctype
   5: [B1.4] (ImplicitCastExpr, LValueToRValue, const __ctype_type *)
   6: [B1.2]([B1.5])
   7: [B1.6].widen
   8: __c
   9: [B1.8] (ImplicitCastExpr, LValueToRValue, char)
  10: [B1.7]([B1.9])
  11: return [B1.10];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

inline const std::ctype<char> &__check_facet(const std::ctype<char> *__f)
 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1: __f
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, const class std::ctype<char> *)
   3: *[B1.2]
   4: return [B1.3];
   Preds (2): B2(Unreachable) B3
   Succs (1): B0

 [B2 (NORETURN)]
   1: __throw_bad_cast
   2: [B2.1] (ImplicitCastExpr, FunctionToPointerDecay, void (*)(void) __attribute__((noreturn)))
   3: [B2.2]()
   Preds (1): B3
   Succs (1): B0

 [B3]
   1: __f
   2: [B3.1] (ImplicitCastExpr, LValueToRValue, const class std::ctype<char> *)
   3: [B3.2] (ImplicitCastExpr, PointerToBoolean, _Bool)
   4: ![B3.3]
   T: if [B3.4]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2

inline basic_ostream<char, std::char_traits<char> > &flush(basic_ostream<char, std::char_traits<char> > &__os)
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __os
   2: [B1.1].flush
   3: [B1.2]()
   4: return [B1.3];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

__ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &))
 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: __pf
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, __ostream_type &(*)(__ostream_type &))
   3: this
   4: *[B1.3]
   5: [B1.2]([B1.4])
   6: return [B1.5];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1

