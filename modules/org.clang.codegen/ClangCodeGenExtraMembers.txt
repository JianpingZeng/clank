[EXTRA_MEMBERS]
(anonymous namespace)::(anonymous namespace)::BaseInfo = IMPLEMENTS#ComparableLower
(anonymous namespace)::(anonymous namespace)::BaseInfo = IMPLEMENTS#NativePOD<BaseInfo>
(anonymous namespace)::(anonymous namespace)::BaseInfo = IMPLEMENTS#NativeMoveable<BaseInfo>
(anonymous namespace)::(anonymous namespace)::BaseInfo = FILE#./extra_members/BaseInfoExtraMembers.java

(anonymous namespace)::ARCExprEmitter = IMPLEMENTS#ExprEmitter<Result>
(anonymous namespace)::ARCStrongBlockByrefHelpers = TEXT#public static ARCStrongBlockByrefHelpers $factory(ARCStrongBlockByrefHelpers p) { return new ARCStrongBlockByrefHelpers(JD$Move.INSTANCE, p); }
(anonymous namespace)::ARCStrongByrefHelpers = TEXT#public static ARCStrongByrefHelpers $factory(ARCStrongByrefHelpers p) { return new ARCStrongByrefHelpers(JD$Move.INSTANCE, p); }
(anonymous namespace)::ARCWeakByrefHelpers = TEXT#public static ARCWeakByrefHelpers $factory(ARCWeakByrefHelpers p) { return new ARCWeakByrefHelpers(JD$Move.INSTANCE, p); }
(anonymous namespace)::BlockLayoutChunk = IMPLEMENTS#NativeCloneable<BlockLayoutChunk>
(anonymous namespace)::BlockLayoutChunk = TEXT#public BlockLayoutChunk() { this.Alignment $EQ new CharUnits(); this.Size $EQ new CharUnits(); this.Lifetime $EQ Qualifiers.ObjCLifetime.OCL_None; this.Capture $EQ null; this.Type $EQ null; }
(anonymous namespace)::BlockLayoutChunk = TEXT#public BlockLayoutChunk clone() { return new BlockLayoutChunk(this.Alignment, this.Size, this.Lifetime, this.Capture, this.Type); }
(anonymous namespace)::CGObjCCommonMac::RUN_SKIP = IMPLEMENTS#NativeCloneable<RUN_SKIP>
(anonymous namespace)::CGObjCCommonMac::RUN_SKIP = IMPLEMENTS#ComparableLower
(anonymous namespace)::CGObjCCommonMac::RUN_SKIP = FILE#./extra_members/RUN_SKIPExtraMembers.java
(anonymous namespace)::CGRecordLowering::MemberInfo = FILE#./extra_members/MemberInfoExtraMembers.java
(anonymous namespace)::CGRecordLowering::MemberInfo = IMPLEMENTS#NativeCloneable<MemberInfo>
(anonymous namespace)::CGRecordLowering::MemberInfo::(anonymous) = FILE#./extra_members/Unnamed_union1ExtraMembers.java
(anonymous namespace)::CXXByrefHelpers = TEXT#public static CXXByrefHelpers $factory(CXXByrefHelpers p) { return new CXXByrefHelpers(JD$Move.INSTANCE, p); }
(anonymous namespace)::CallDeleteDuringConditionalNew = TEXT#private final type$ptr<DominatingValueRValue.saved_type<RValue> /*P*/> $this_plus_1;
(anonymous namespace)::CallDeleteDuringNew = TEXT#private final type$ptr<RValue /*P*/> $this_Plus_1;
(anonymous namespace)::ClangToLLVMArgMapping::IRArgs = FILE#./extra_members/IRArgsExtraMembers.java
(anonymous namespace)::ClangToLLVMArgMapping::IRArgs = IMPLEMENTS#NativeCloneable<IRArgs>
(anonymous namespace)::ComplexExprEmitter = FILE#./extra_members/ComplexExprEmitterExtraMembers.java
#(anonymous namespace)::CallBaseDtor = TEXT#public static CallBaseDtor $factory(CallBaseDtor p) { return new CallBaseDtor(JD$Move.INSTANCE, p); }
(anonymous namespace)::DestroyUnpassedArg = TEXT#public static DestroyUnpassedArg $factory(DestroyUnpassedArg p) { return new DestroyUnpassedArg(JD$Move.INSTANCE, p); }
(anonymous namespace)::FieldEncoding = FILE#./extra_members/FieldEncodingExtraMembers.java
(anonymous namespace)::FieldEncoding = IMPLEMENTS#ComparableLower
(anonymous namespace)::FieldMemcpyizer = TEXT#public void $destroy() { }
(anonymous namespace)::IvarInfo = TEXT#public IvarInfo() { this.Offset $EQ new CharUnits();    this.SizeInWords $EQ 0;  }
(anonymous namespace)::MSRTTIClass  = FILE#./extra_members/MSRTTIClassExtraMembers.java
(anonymous namespace)::MicrosoftCXXABI::GuardInfo = IMPLEMENTS#NativePOD<GuardInfo>
(anonymous namespace)::MicrosoftCXXABI::GuardInfo = FILE#./extra_members/GuardInfoExtraMembers.java
(anonymous namespace)::NeonIntrinsicInfo = FILE#./extra_members/NeonIntrinsicInfoExtraMembers.java
(anonymous namespace)::ObjectByrefHelpers = TEXT#public static ObjectByrefHelpers $factory(ObjectByrefHelpers p) { return new ObjectByrefHelpers(JD$Move.INSTANCE, p); }
(anonymous namespace)::PrivateHelpersTy = FILE#./extra_members/PrivateHelpersTyExtraMembers.java
(anonymous namespace)::PrivateHelpersTy = IMPLEMENTS#NativePOD<PrivateHelpersTy>
(anonymous namespace)::PrivateHelpersTy = IMPLEMENTS#NativeMoveable<PrivateHelpersTy>
(anonymous namespace)::ScalarExprEmitter = FILE#./extra_members/ScalarExprEmitterExtraMembers.java
(anonymous namespace)::SourceMappingRegion = FILE#./extra_members/SourceMappingRegionExtraMembers.java
(anonymous namespace)::VBTableGlobals = IMPLEMENTS#NativePOD<VBTableGlobals>
(anonymous namespace)::VBTableGlobals = FILE#./extra_members/VBTableGlobalsExtraMembers.java
(anonymous namespace)::WidthAndSignedness = TEXT#public WidthAndSignedness(int Width, boolean Signed) { this.Width $EQ Width; this.Signed $EQ Signed;  }
ISADataTy = FILE#./extra_members/ISADataTyExtraMembers.java
MapInfo = FILE#./extra_members/MapInfoExtraMembers.java
_ZN12_GLOBAL__N_116CGRecordLowering10MemberInfoE_Unnamed_union1=TEXT#private Unnamed_union1() {}
_ZN5clang7CodeGen10ABIArgInfoE_Unnamed_union1 = TEXT#private Unnamed_union1() {}
_ZN5clang7CodeGen10ABIArgInfoE_Unnamed_union2 = TEXT#private Unnamed_union2() {}
#clang::CodeGen::CodeGenTypeCache::(anonymous)
_ZN5clang7CodeGen16CodeGenTypeCacheE_Unnamed_union1 = TEXT#private Unnamed_union1() {}
_ZN5clang7CodeGen16CodeGenTypeCacheE_Unnamed_union2 = TEXT#private Unnamed_union2() {}
_ZN5clang7CodeGen16CodeGenTypeCacheE_Unnamed_union3 = TEXT#private Unnamed_union3() {}
_ZN5clang7CodeGen16CodeGenTypeCacheE_Unnamed_union4 = TEXT#private Unnamed_union4() {}
_ZN5clang7CodeGen16CodeGenTypeCacheE_Unnamed_union5 = TEXT#private Unnamed_union5() {}
buildByrefHelpers = T0EXTENDS#BlockByrefHelpers
clang::CodeGen::Address = IMPLEMENTS#NativePOD<Address>
clang::CodeGen::Address = IMPLEMENTS#NativeMoveable<Address>
clang::CodeGen::Address = FILE#./extra_members/AddressExtraMembers.java
clang::CodeGen::BlockByrefHelpers = EXTENDS#FoldingSetImpl.NodeImpl
clang::CodeGen::BlockByrefInfo = IMPLEMENTS#NativePOD<BlockByrefInfo>
clang::CodeGen::BlockByrefInfo = IMPLEMENTS#NativeMoveable<BlockByrefInfo>
clang::CodeGen::BlockByrefInfo = FILE#./extra_members/BlockByrefInfoExtraMembers.java
clang::CodeGen::BranchFixup = FILE#./extra_members/BranchFixupExtraMembers.java
clang::CodeGen::BranchFixup = IMPLEMENTS#NativePOD<BranchFixup>
clang::CodeGen::CGBitFieldInfo = IMPLEMENTS#NativePOD<CGBitFieldInfo>
clang::CodeGen::CGBitFieldInfo = FILE#./extra_members/CGBitFieldInfoExtraMembers.java
clang::CodeGen::CGBlockInfo::Capture = FILE#./extra_members/CaptureExtraMembers.java
clang::CodeGen::CGBlockInfo::Capture = IMPLEMENTS#NativeCloneable<Capture>
clang::CodeGen::CGDebugInfo::ObjCInterfaceCacheEntry = IMPLEMENTS#NativePOD<ObjCInterfaceCacheEntry>
clang::CodeGen::CGDebugInfo::ObjCInterfaceCacheEntry = FILE#./extra_members/ObjCInterfaceCacheEntryExtraMembers.java
clang::CodeGen::CGFunctionInfo = EXTENDS#FoldingSetImpl.NodeImpl
clang::CodeGen::CGFunctionInfo = IMPLEMENTS#ITrailingObjectsJavaBase<CGFunctionInfo>
clang::CodeGen::CGFunctionInfo = FILE#./extra_members/CGFunctionInfoExtraMembers.java
clang::CodeGen::CGObjCRuntime = FILE#./extra_members/CGObjCRuntimeExtraMembers.java
clang::CodeGen::CGOpenMPRuntime = FILE#./extra_members/CGOpenMPRuntimeExtraMembers.java
clang::CodeGen::CGOpenMPRuntime::DebugLocThreadIdTy = IMPLEMENTS#NativeCloneable<DebugLocThreadIdTy>
clang::CodeGen::CGOpenMPRuntime::DebugLocThreadIdTy = IMPLEMENTS#NativeMoveable<DebugLocThreadIdTy>
clang::CodeGen::CGOpenMPRuntime::DebugLocThreadIdTy = FILE#./extra_members/DebugLocThreadIdTyExtraMembers.java
clang::CodeGen::CGOpenMPRuntime::OffloadEntriesInfoManagerTy::OffloadEntryInfo = IMPLEMENTS#NativePOD<OffloadEntryInfo>, NativeMoveable<OffloadEntryInfo>
clang::CodeGen::CGOpenMPRuntime::OffloadEntriesInfoManagerTy::OffloadEntryInfo = FILE#./extra_members/OffloadEntryInfoExtraMembers.java
clang::CodeGen::CGOpenMPRuntime::OffloadEntriesInfoManagerTy::OffloadEntryInfoTargetRegion = FILE#./extra_members/OffloadEntryInfoTargetRegionExtraMembers.java
clang::CodeGen::CallArg = FILE#./extra_members/CallArgExtraMembers.java
clang::CodeGen::CallArg = IMPLEMENTS#NativeCloneable<CallArg>
clang::CodeGen::CallArgList = FILE#./extra_members/CallArgListExtraMembers.java
clang::CodeGen::CallArgList::CallArgCleanup = FILE#./extra_members/CallArgCleanupExtraMembers.java
clang::CodeGen::CallArgList::Writeback = FILE#./extra_members/WritebackExtraMembers.java
clang::CodeGen::CallArgList::Writeback = IMPLEMENTS#NativePOD<Writeback>
clang::CodeGen::CallArgList::Writeback = IMPLEMENTS#NativeMoveable<Writeback>
clang::CodeGen::CatchTypeInfo = FILE#./extra_members/CatchTypeInfoExtraMembers.java
clang::CodeGen::CodeGenFunction = FILE#./extra_members/CodeGenFunctionExtraMembers.java
clang::CodeGen::CodeGenFunction::AutoVarEmission::Invalid = TEXT#public Invalid() { }
clang::CodeGen::CodeGenFunction::BreakContinue = IMPLEMENTS#NativePOD<BreakContinue>
clang::CodeGen::CodeGenFunction::BreakContinue = FILE#./extra_members/BreakContinueExtraMembers.java
clang::CodeGen::CodeGenFunction::JumpDest = IMPLEMENTS#NativePOD<JumpDest>
clang::CodeGen::CodeGenFunction::JumpDest = IMPLEMENTS#NativeMoveable<JumpDest>
clang::CodeGen::CodeGenFunction::JumpDest = FILE#./extra_members/JumpDestExtraMembers.java
clang::CodeGen::CodeGenFunction::LifetimeExtendedCleanupHeader = FILE#./extra_members/LifetimeExtendedCleanupHeaderExtraMembers.java
clang::CodeGen::CodeGenFunction::ParamValue = FILE#./extra_members/ParamValueExtraMembers.java
clang::CodeGen::CodeGenFunction::ParamValue = IMPLEMENTS#NativeCloneable<ParamValue>, NativeMoveable<ParamValue>
clang::CodeGen::CodeGenFunction::VPtr = FILE#./extra_members/VPtrExtraMembers.java
clang::CodeGen::CodeGenModule = FILE#./extra_members/CodeGenModuleExtraMembers.java
clang::CodeGen::CodeGenModule::DeferredGlobal = IMPLEMENTS#NativeCloneable<DeferredGlobal>
clang::CodeGen::CodeGenModule::DeferredGlobal = FILE#./extra_members/DeferredGlobalExtraMembers.java
clang::CodeGen::CodeGenModule::GlobalInitPriorityCmp = IMPLEMENTS#Native.ComparatorLower<std.pair<OrderGlobalInits, Function /*P*/ >, std.pair<OrderGlobalInits, Function /*P*/ >>
clang::CodeGen::CodeGenModule::GlobalInitPriorityCmp = FILE#./extra_members/GlobalInitPriorityCmpExtraMembers.java
clang::CodeGen::CodeGenModule::MaybeHandleStaticInExternC = T0EXTENDS#NamedDecl & Redeclarable & org.clang.ast.java.ExternC
clang::CodeGen::CodeGenModule::Structor = IMPLEMENTS#NativeCloneable<Structor>
clang::CodeGen::CodeGenModule::Structor = FILE#./extra_members/StructorExtraMembers.java
clang::CodeGen::CodeGenTypeCache::(anonymous) = FILE#./extra_members/Unnamed_union1ExtraMembers.java
clang::CodeGen::ConstantAddress = FILE#./extra_members/ConstantAddressExtraMembers.java
clang::CodeGen::DominatingValue = TEXT#public static final class saved_type<T> {}
clang::CodeGen::DominatingValue<Address>::saved_type = FILE#./extra_members/saved_typeExtraMembers.java
clang::CodeGen::EHCatchScope = TEXT#private final type$ptr</*const*/ Handler /*P*/ > $this_plus_1;
clang::CodeGen::EHCatchScope::Handler = TEXT#public Handler() {}
clang::CodeGen::EHCleanupScope = TEXT#private final char$ptr $this_plus_1;
clang::CodeGen::EHFilterScope = TEXT#private final type$ptr<Value> $this_plus_1;
clang::CodeGen::EHPersonality = FILE#./extra_members/EHPersonalityExtraMembers.java
clang::CodeGen::EHScopeStack::ConditionalCleanup = FILE#./extra_members/ConditionalCleanupExtraMembers.java
clang::CodeGen::LValue = IMPLEMENTS#NativeCloneable<LValue>
clang::CodeGen::LValue = IMPLEMENTS#NativeMoveable<LValue>
clang::CodeGen::LValue = FILE#./extra_members/LValueExtraMembers.java
clang::CodeGen::LValue::(anonymous) = TEXT#public Unnamed_union1() {}
clang::CodeGen::LoopInfo = IMPLEMENTS#NativeCloneable<LoopInfo>
clang::CodeGen::LoopInfo = FILE#./extra_members/LoopInfoExtraMembers.java
clang::CodeGen::OMPTaskDataTy = FILE#./extra_members/OMPTaskDataTyExtraMembers.java
clang::CodeGen::ObjCEntrypoints = FILE#./extra_members/ObjCEntrypointsExtraMembers.java
clang::CodeGen::OrderGlobalInits = FILE#./extra_members/OrderGlobalInitsExtraMembers.java
clang::CodeGen::OrderGlobalInits = IMPLEMENTS#NativePOD<OrderGlobalInits>
clang::CodeGen::RValue = FILE#./extra_members/RValueExtraMembers.java
clang::CodeGen::RValue = IMPLEMENTS#NativeCloneable<RValue>
clang::CodeGen::RValue = IMPLEMENTS#NativeMoveable<RValue>
clang::CodeGen::RegionCodeGenTy = FILE#./extra_members/RegionCodeGenTyExtraMembers.java
clang::CodeGen::swiftcall::SwiftAggLowering::StorageEntry = FILE#./extra_members/StorageEntryExtraMembers.java
org.clang.codegen.CodeGen.impl.CodeGenFunction_CodeGenModule = FILE#./extra_members/CodeGenFunction_CodeGenModuleExtraMembers.java
org.clang.codegen.CodeGen.impl.CodeGenFunction_CodeGenPGO = FILE#./extra_members/CodeGenFunction_CodeGenPGOExtraMembers.java
