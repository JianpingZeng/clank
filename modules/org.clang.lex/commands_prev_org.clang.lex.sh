# Used directories
mkdir -p ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex
mkdir -p ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl
mkdir -p ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/llvm

# Global and static Enums
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Lexer.cpp "-nm=_ZN5clang18ConflictMarkerKindE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/ConflictMarkerKind.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/HeaderSearch.cpp "-nm=_ZN5clang8frontend15IncludeDirGroupE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/IncludeDirGroup.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Preprocessor.cpp "-nm=_ZN5clang8MacroUseE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/MacroUse.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Preprocessor.cpp "-nm=_ZN5clang28ObjCXXARCStandardLibraryKindE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/ObjCXXARCStandardLibraryKind.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN5clang20PragmaIntroducerKindE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/PragmaIntroducerKind.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/ModuleMap.cpp "-nm=_ZN12_GLOBAL__N_113AttributeKindE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/AttributeKind.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PPMacroExpansion.cpp "-nm=_Z7Bracket;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/Bracket.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PPDirectives.cpp "-nm=_Z9MacroDiag;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/MacroDiag.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Lexer.cpp "-nm=_ZN12_GLOBAL__N_121PreambleDirectiveKindE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PreambleDirectiveKind.java

# Global and static CXXRecords, ClassTemplates, ClassTemplateSpecializations
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/LiteralSupport.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Sema/SemaExpr.cpp "-nm=_ZN5clang17CharLiteralParserE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/CharLiteralParser.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Frontend/FrontendActions.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Parse/Parser.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Preprocessor.cpp "-nm=_ZN5clang21CodeCompletionHandlerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/CodeCompletionHandler.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Parse/Parser.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Preprocessor.cpp "-nm=_ZN5clang14CommentHandlerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/CommentHandler.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/MacroInfo.cpp "-nm=_ZN5clang17DefMacroDirectiveE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/DefMacroDirective.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/HeaderSearch.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PPDirectives.cpp "-nm=_ZN5clang15DirectoryLookupE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/DirectoryLookup.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN5clang18EmptyPragmaHandlerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/EmptyPragmaHandler.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Serialization/ASTReader.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/HeaderSearch.cpp "-nm=_ZN5clang28ExternalHeaderFileInfoSourceE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/ExternalHeaderFileInfoSource.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Serialization/ASTReader.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PreprocessingRecord.cpp "-nm=_ZN5clang33ExternalPreprocessingRecordSourceE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/ExternalPreprocessingRecordSource.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Serialization/ASTReader.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Preprocessor.cpp "-nm=_ZN5clang26ExternalPreprocessorSourceE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/ExternalPreprocessorSource.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Serialization/ASTReader.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/HeaderSearch.cpp "-nm=_ZN5clang14HeaderFileInfoE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/HeaderFileInfo.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/HeaderMap.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/HeaderSearch.cpp "-nm=_ZN5clang9HeaderMapE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/HeaderMap.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/HeaderSearch.cpp "-nm=_ZN5clang12HeaderSearchE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/HeaderSearch.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Frontend/CompilerInvocation.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/HeaderSearch.cpp "-nm=_ZN5clang19HeaderSearchOptionsE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/HeaderSearchOptions.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PreprocessingRecord.cpp "-nm=_ZN5clang18InclusionDirectiveE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/InclusionDirective.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Lexer.cpp "-nm=_ZN5clang5LexerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/Lexer.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/MacroArgs.cpp "-nm=_ZN5clang9MacroArgsE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/MacroArgs.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PreprocessingRecord.cpp "-nm=_ZN5clang15MacroDefinitionE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/MacroDefinition.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Frontend/CompilerInstance.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/MacroInfo.cpp "-nm=_ZN5clang14MacroDirectiveE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/MacroDirective.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PreprocessingRecord.cpp "-nm=_ZN5clang14MacroExpansionE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/MacroExpansion.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/MacroInfo.cpp "-nm=_ZN5clang9MacroInfoE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/MacroInfo.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Serialization/ASTReader.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Frontend/CompilerInstance.cpp ${LLVM_SRC}/llvm/tools/clang/lib/StaticAnalyzer/Frontend/ModelInjector.cpp "-nm=_ZN5clang16ModuleLoadResultE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/ModuleLoadResult.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Serialization/ASTReader.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Preprocessor.cpp "-nm=_ZN5clang12ModuleLoaderE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/ModuleLoader.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/HeaderSearch.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/ModuleMap.cpp "-nm=_ZN5clang9ModuleMapE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/ModuleMap.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Frontend/HeaderIncludeGen.cpp "-nm=_ZN5clang18MultipleIncludeOptE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/MultipleIncludeOpt.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/LiteralSupport.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Sema/SemaExpr.cpp "-nm=_ZN5clang20NumericLiteralParserE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/NumericLiteralParser.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PPCallbacks.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PPLexerChange.cpp "-nm=_ZN5clang11PPCallbacksE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/PPCallbacks.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PPCallbacks.cpp "-nm=_ZN5clang18PPChainedCallbacksE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/PPChainedCallbacks.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PPConditionalDirectiveRecord.cpp "-nm=_ZN5clang28PPConditionalDirectiveRecordE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/PPConditionalDirectiveRecord.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Lexer.cpp "-nm=_ZN5clang17PPConditionalInfoE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/PPConditionalInfo.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PTHLexer.cpp "-nm=_ZN5clang8PTHLexerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/PTHLexer.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PTHLexer.cpp "-nm=_ZN5clang10PTHManagerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/PTHManager.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN5clang13PragmaHandlerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/PragmaHandler.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN5clang15PragmaNamespaceE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/PragmaNamespace.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PreprocessingRecord.cpp "-nm=_ZN5clang18PreprocessedEntityE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/PreprocessedEntity.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PreprocessingRecord.cpp "-nm=_ZN5clang22PreprocessingDirectiveE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/PreprocessingDirective.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PreprocessingRecord.cpp "-nm=_ZN5clang19PreprocessingRecordE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/PreprocessingRecord.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PPCaching.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PPDirectives.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PPExpressions.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PPLexerChange.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PPMacroExpansion.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Preprocessor.cpp "-nm=_ZN5clang12PreprocessorE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/Preprocessor.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PreprocessorLexer.cpp "-nm=_ZN5clang17PreprocessorLexerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/PreprocessorLexer.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Frontend/CompilerInstance.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Frontend/CompilerInvocation.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Preprocessor.cpp "-nm=_ZN5clang19PreprocessorOptionsE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/PreprocessorOptions.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/ScratchBuffer.cpp "-nm=_ZN5clang13ScratchBufferE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/ScratchBuffer.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/AST/Expr.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/LiteralSupport.cpp "-nm=_ZN5clang19StringLiteralParserE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/StringLiteralParser.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Lexer.cpp ${LLVM_SRC}/llvm/tools/clang/lib/AST/Stmt.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/TokenLexer.cpp "-nm=_ZN5clang5TokenE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/Token.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/TokenConcatenation.cpp "-nm=_ZN5clang18TokenConcatenationE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/TokenConcatenation.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/TokenLexer.cpp "-nm=_ZN5clang10TokenLexerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/TokenLexer.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/AST/CommentSema.cpp ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Preprocessor.cpp "-nm=_ZN5clang10TokenValueE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/TokenValue.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/MacroInfo.cpp "-nm=_ZN5clang19UndefMacroDirectiveE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/UndefMacroDirective.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/MacroInfo.cpp "-nm=_ZN5clang24VisibilityMacroDirectiveE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/VisibilityMacroDirective.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PPExpressions.cpp "-nm=_Z14DefinedTracker;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/DefinedTracker.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/HeaderMap.cpp "-nm=_ZN5clang10HMapBucketE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/HMapBucket.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/HeaderMap.cpp "-nm=_ZN5clang10HMapHeaderE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/HMapHeader.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN12_GLOBAL__N_120LexingFor_PragmaRAIIE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/LexingFor_PragmaRAII.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/ModuleMap.cpp "-nm=_ZN5clang7MMTokenE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/MMToken.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/ModuleMap.cpp "-nm=_ZN5clang15ModuleMapParserE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/ModuleMapParser.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PPExpressions.cpp "-nm=_ZN12_GLOBAL__N_17PPValueE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PPValue.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PTHLexer.cpp "-nm=_ZN12_GLOBAL__N_111PTHFileDataE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PTHFileData.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PTHLexer.cpp "-nm=_ZN12_GLOBAL__N_124PTHFileLookupCommonTraitE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PTHFileLookupCommonTrait.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PTHLexer.cpp "-nm=_ZN5clang12PTHStatCacheE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PTHStatCache.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PTHLexer.cpp "-nm=_ZN12_GLOBAL__N_111PTHStatDataE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PTHStatData.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PTHLexer.cpp "-nm=_ZN12_GLOBAL__N_118PTHStatLookupTraitE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PTHStatLookupTrait.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN12_GLOBAL__N_129PragmaARCCFCodeAuditedHandlerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PragmaARCCFCodeAuditedHandler.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN12_GLOBAL__N_118PragmaDebugHandlerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PragmaDebugHandler.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN12_GLOBAL__N_123PragmaDependencyHandlerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PragmaDependencyHandler.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN12_GLOBAL__N_123PragmaDiagnosticHandlerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PragmaDiagnosticHandler.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN12_GLOBAL__N_125PragmaIncludeAliasHandlerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PragmaIncludeAliasHandler.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN12_GLOBAL__N_117PragmaMarkHandlerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PragmaMarkHandler.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN12_GLOBAL__N_120PragmaMessageHandlerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PragmaMessageHandler.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN12_GLOBAL__N_117PragmaOnceHandlerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PragmaOnceHandler.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN12_GLOBAL__N_119PragmaPoisonHandlerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PragmaPoisonHandler.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN12_GLOBAL__N_121PragmaPopMacroHandlerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PragmaPopMacroHandler.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN12_GLOBAL__N_122PragmaPushMacroHandlerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PragmaPushMacroHandler.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN12_GLOBAL__N_119PragmaRegionHandlerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PragmaRegionHandler.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN12_GLOBAL__N_134PragmaSTDC_CX_LIMITED_RANGEHandlerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PragmaSTDC_CX_LIMITED_RANGEHandler.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN12_GLOBAL__N_129PragmaSTDC_FENV_ACCESSHandlerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PragmaSTDC_FENV_ACCESSHandler.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN12_GLOBAL__N_125PragmaSTDC_UnknownHandlerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PragmaSTDC_UnknownHandler.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN12_GLOBAL__N_125PragmaSystemHeaderHandlerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PragmaSystemHeaderHandler.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Pragma.cpp "-nm=_ZN12_GLOBAL__N_120PragmaWarningHandlerE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PragmaWarningHandler.java
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Lexer.cpp "-nm=_ZN4llvm9isPodLikeIN5clang5TokenEEE;" > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/llvm/isPodLikeToken.java

# Global and static namespaces

# Static functions/variables
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/HeaderMap.cpp "-nm=_HeaderMap_cpp_Unnamed_enum11;_ZL11HashHMapKeyN4llvm9StringRefE;" -static-type=HeaderMapStatics -package=org.clang.lex.impl > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/HeaderMapStatics.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/HeaderSearch.cpp "-nm=_ZL23getFileAndSuggestModuleRN5clang12HeaderSearchEN4llvm9StringRefEPKNS_14DirectoryEntryEbPNS_9ModuleMap11KnownHeaderE;_ZL18getTopFrameworkDirRN5clang11FileManagerEN4llvm9StringRefERNS2_15SmallVectorImplISsEE;_ZL21checkMSVCHeaderSearchRN5clang17DiagnosticsEngineEPKNS_9FileEntryES4_NS_14SourceLocationE;_ZL10copyStringN4llvm9StringRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE;_ZL19mergeHeaderFileInfoRN5clang14HeaderFileInfoERKS0_;_ZL19getPrivateModuleMapPKN5clang9FileEntryERNS_11FileManagerE;" -static-type=HeaderSearchStatics -package=org.clang.lex.impl > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/HeaderSearchStatics.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Lexer.cpp "-nm=_ZL15getSpellingSlowRKN5clang5TokenEPKcRKNS_11LangOptionsEPc;_ZL23getBeginningOfFileTokenN5clang14SourceLocationERKNS_13SourceManagerERKNS_11LangOptionsE;_ZL21makeRangeFromFileLocsN5clang15CharSourceRangeERKNS_13SourceManagerERKNS_11LangOptionsE;_ZL17GetMappedTokenLocRN5clang12PreprocessorENS_14SourceLocationEjj;_ZL24GetTrigraphCharForLetterc;_ZL18DecodeTrigraphCharPKcPN5clang5LexerE;_ZL15isAllowedIDCharjRKN5clang11LangOptionsE;_ZL24isAllowedInitiallyIDCharjRKN5clang11LangOptionsE;_ZL13makeCharRangeRN5clang5LexerEPKcS3_;_ZL25maybeDiagnoseIDCharCompatRN5clang17DiagnosticsEngineEjNS_15CharSourceRangeEb;_ZL37isEndOfBlockCommentWithEscapedNewLinePKcPN5clang5LexerE;_ZL15FindConflictEndPKcS0_N5clang18ConflictMarkerKindE;" -static-type=LexerStatics -package=org.clang.lex.impl > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/LexerStatics.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/LiteralSupport.cpp "-nm=_ZL12getCharWidthN5clang3tok9TokenKindERKNS_10TargetInfoE;_ZL19MakeCharSourceRangeRKN5clang11LangOptionsENS_13FullSourceLocEPKcS5_S5_;_ZL4DiagPN5clang17DiagnosticsEngineERKNS_11LangOptionsENS_13FullSourceLocEPKcS7_S7_j;_ZL17ProcessCharEscapePKcRS0_S0_RbN5clang13FullSourceLocEjPNS3_17DiagnosticsEngineERKNS3_11LangOptionsE;_ZL15appendCodePointjRN4llvm15SmallVectorImplIcEE;_ZL16ProcessUCNEscapePKcRS0_S0_RjRtN5clang13FullSourceLocEPNS4_17DiagnosticsEngineERKNS4_11LangOptionsEb;_ZL16MeasureUCNEscapePKcRS0_S0_jRKN5clang11LangOptionsERb;_ZL15EncodeUCNEscapePKcRS0_S0_RPcRbN5clang13FullSourceLocEjPNS5_17DiagnosticsEngineERKNS5_11LangOptionsE;_ZL20alwaysFitsInto64Bitsjj;_ZL10resyncUTF8PKcS0_;" -static-type=LiteralSupportStatics -package=org.clang.lex.impl > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/LiteralSupportStatics.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/ModuleMap.cpp "-nm=_ZL28sanitizeFilenameAsIdentifierN4llvm9StringRefERNS_15SmallVectorImplIcEE;_ZL15isBuiltinHeaderN4llvm9StringRefE;_ZL12directlyUsesPKN5clang6ModuleES2_;_ZL22violatesPrivateIncludePN5clang6ModuleEPKNS_9FileEntryENS_9ModuleMap16ModuleHeaderRoleES1_;_ZL17getTopLevelOrNullPN5clang6ModuleE;_ZL18inferFrameworkLinkPN5clang6ModuleEPKNS_14DirectoryEntryERNS_11FileManagerE;_ZL16headerRoleToKindN5clang9ModuleMap16ModuleHeaderRoleE;_ZL23appendSubframeworkPathsPN5clang6ModuleERN4llvm15SmallVectorImplIcEE;_ZL14formatModuleIdRKN4llvm11SmallVectorISt4pairISsN5clang14SourceLocationEELj2EEE;" -static-type=ModuleMapStatics -package=org.clang.lex.impl > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/ModuleMapStatics.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PPDirectives.cpp "-nm=_ZL12isReservedIdN4llvm9StringRefERKN5clang11LangOptionsE;_ZL20shouldWarnOnMacroDefRN5clang12PreprocessorEPNS_14IdentifierInfoE;_ZL22shouldWarnOnMacroUndefRN5clang12PreprocessorEPNS_14IdentifierInfoE;_ZL12GetLineValueRN5clang5TokenERjjRNS_12PreprocessorEb;_ZL19ReadLineMarkerFlagsRbS_S_S_RN5clang12PreprocessorE;_ZL20EnterAnnotationTokenRN5clang12PreprocessorENS_14SourceLocationES2_NS_3tok9TokenKindEPv;_ZL22isConfigurationPatternRN5clang5TokenEPNS_9MacroInfoERKNS_11LangOptionsE;" -static-type=PPDirectivesStatics -package=org.clang.lex.impl > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PPDirectivesStatics.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PPExpressions.cpp "-nm=_ZL24EvaluateDirectiveSubExprRN12_GLOBAL__N_17PPValueEjRN5clang5TokenEbRNS2_12PreprocessorE;_ZL15EvaluateDefinedRN12_GLOBAL__N_17PPValueERN5clang5TokenER14DefinedTrackerbRNS2_12PreprocessorE;_ZL13EvaluateValueRN12_GLOBAL__N_17PPValueERN5clang5TokenER14DefinedTrackerbRNS2_12PreprocessorE;_ZL13getPrecedenceN5clang3tok9TokenKindE;" -static-type=PPExpressionsStatics -package=org.clang.lex.impl > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PPExpressionsStatics.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PPLexerChange.cpp "-nm=_ZL19computeRelativePathRN5clang11FileManagerEPKNS_14DirectoryEntryEPKNS_9FileEntryERN4llvm11SmallStringILj128EEE;" -static-type=PPLexerChangeStatics -package=org.clang.lex.impl > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PPLexerChangeStatics.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PPMacroExpansion.cpp "-nm=_ZL20RegisterBuiltinMacroRN5clang12PreprocessorEPKc;_ZL29isTrivialSingleTokenExpansionPKN5clang9MacroInfoEPKNS_14IdentifierInfoERNS_12PreprocessorE;_ZL20CheckMatchedBracketsRKN4llvm15SmallVectorImplIN5clang5TokenEEE;_ZL20GenerateNewArgTokensRN5clang12PreprocessorERN4llvm15SmallVectorImplINS_5TokenEEES6_RjRNS3_INS_11SourceRangeEEESA_;_ZL16ComputeDATE_TIMERN5clang14SourceLocationES1_RNS_12PreprocessorE;_ZL10HasFeatureRKN5clang12PreprocessorEPKNS_14IdentifierInfoE;_ZL12HasExtensionRKN5clang12PreprocessorEPKNS_14IdentifierInfoE;_ZL24EvaluateHasIncludeCommonRN5clang5TokenEPNS_14IdentifierInfoERNS_12PreprocessorEPKNS_15DirectoryLookupEPKNS_9FileEntryE;_ZL18EvaluateHasIncludeRN5clang5TokenEPNS_14IdentifierInfoERNS_12PreprocessorE;_ZL22EvaluateHasIncludeNextRN5clang5TokenEPNS_14IdentifierInfoERNS_12PreprocessorE;_ZL22EvaluateBuildingModuleRN5clang5TokenEPNS_14IdentifierInfoERNS_12PreprocessorE;" -static-type=PPMacroExpansionStatics -package=org.clang.lex.impl > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PPMacroExpansionStatics.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PTHLexer.cpp "-nm=_ZL15StoredTokenSize;_ZL10InvalidPTHRN5clang17DiagnosticsEngineEPKc;" -static-type=PTHLexerStatics -package=org.clang.lex.impl > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PTHLexerStatics.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PreprocessingRecord.cpp "-nm=_ZL30isPreprocessedEntityIfInFileIDPN5clang18PreprocessedEntityENS_6FileIDERNS_13SourceManagerE;" -static-type=PreprocessingRecordStatics -package=org.clang.lex.impl > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PreprocessingRecordStatics.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Preprocessor.cpp "-nm=_ZL21MacroDefinitionEqualsPKN5clang9MacroInfoEN4llvm8ArrayRefINS_10TokenValueEEE;" -static-type=PreprocessorStatics -package=org.clang.lex.impl > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/PreprocessorStatics.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/ScratchBuffer.cpp "-nm=_ZL14ScratchBufSize;" -static-type=ScratchBufferStatics -package=org.clang.lex.impl > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/ScratchBufferStatics.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/TokenConcatenation.cpp "-nm=_ZL14IsStringPrefixN4llvm9StringRefEb;_ZL12GetFirstCharRN5clang12PreprocessorERKNS_5TokenE;" -static-type=TokenConcatenationStatics -package=org.clang.lex.impl > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/TokenConcatenationStatics.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/TokenLexer.cpp "-nm=_ZL28isWideStringLiteralFromMacroRKN5clang5TokenES2_;_ZL31updateConsecutiveMacroArgTokensRN5clang13SourceManagerENS_14SourceLocationERPNS_5TokenES4_;" -static-type=TokenLexerStatics -package=org.clang.lex.impl > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/TokenLexerStatics.java
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/Lexer.cpp "-nm=_ZL22C11AllowedIDCharRanges;_ZL24CXX03AllowedIDCharRanges;_ZL22C99AllowedIDCharRanges;_ZL32C11DisallowedInitialIDCharRanges;_ZL32C99DisallowedInitialIDCharRanges;_ZL27UnicodeWhitespaceCharRanges;" -static-type=UnicodeCharSetsStatics -package=org.clang.lex.impl > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/impl/UnicodeCharSetsStatics.java

# Global functions/variables
${SPUTNIK}/contrib/JConvert/jclank.sh -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/PreprocessingRecord.cpp "-nm=_ZnwmRN5clang19PreprocessingRecordEj;_ZdlPvRN5clang19PreprocessingRecordEj;" -static-type=PreprocessingRecordGlobals -package=org.clang.lex > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/PreprocessingRecordGlobals.java

# Global functions/variables for namespace as packages
${SPUTNIK}/contrib/JConvert/jclank.sh -empty-body -java-options=${SPUTNIK}/modules/org.clang.lex/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Lex/LiteralSupport.cpp "-nm=_ZN5clang10expandUCNsERN4llvm15SmallVectorImplIcEENS0_9StringRefE;" -static-type=ClangGlobals -package=org.clang.lex > ${SPUTNIK}/modules/org.clang.lex/src/org/clang/lex/ClangGlobals.java

# Static functions/variables for namespaces as packages

