#add common conversions of types
<include> "../../contrib/JConvert/llvmToClankType"

[DELEGATE_BODY=LLVM39]
<include> "./commands_org.llvm.transforms_delegates.properties"
[DELEGATE_BODY=LLVM38]
<include> "./commands_prev_org.llvm.transforms_delegates.properties"

[STATICS_AND_GLOBALS]
<include> "./statics_and_globals_org.llvm.transforms.properties"

[IMPORTS]
<include> "./JavaImports"

[OLD_NEW_POSITIONS_MAP]
path = ./updated_positions.txt

[TYPES_MAP]

void (CallGraphNode * ) const = T2Void<CallGraphNode>

void (const Comdat * ) const = T2Void<Comdat>

[MEMBER_ACCESS]
(anonymous namespace)::AddDiscriminatorsLegacyPass::ID = // JAVA: in extra
(anonymous namespace)::AlwaysInliner::ID = // JAVA: moved to extra
(anonymous namespace)::BarrierNoop::ID = // JAVA: moved to extra
(anonymous namespace)::ForceFunctionAttrsLegacyPass::ID = // JAVA: moved to extra

[EXTRA_MEMBERS]
(anonymous namespace)::ADCELegacyPass = TEXT#public static final/*char*/Class<ADCELegacyPass> ID $EQ ADCELegacyPass.class; // Pass identification, replacement for typeid
(anonymous namespace)::AddDiscriminatorsLegacyPass = TEXT#public static final /*char*/Class<AddDiscriminatorsLegacyPass> ID $EQ AddDiscriminatorsLegacyPass.class; // Pass identification, replacement for typeid
(anonymous namespace)::AlwaysInliner = TEXT#public static final Class<AlwaysInliner> ID $EQ AlwaysInliner.class;
(anonymous namespace)::BarrierNoop = TEXT#public static Class<BarrierNoop> ID $EQ BarrierNoop.class;
(anonymous namespace)::ForceFunctionAttrsLegacyPass = TEXT#public static final Class<ForceFunctionAttrsLegacyPass> ID $EQ ForceFunctionAttrsLegacyPass.class;
llvm::PassManagerBuilder = IMPLEMENTS#LLVMOpaquePassManagerBuilder
org.llvm.transforms.utils.impl.AddDiscriminatorsStatics = TEXT#public static final DenseMapInfoPairTypeUInt DMI_PAIR_STRINGREF_UINT $EQ new DenseMapInfoPairTypeUInt(DenseMapInfoStringRef.$Info());
