# To change this license header, choose License Headers in Project Properties.
# To change this template file, choose Tools | Templates
# and open the template in the editor.
#see http://clang-analyzer.llvm.org/available_checks.html
core.description=Core Checkers
core.lang=IK_C,IK_CXX
core.example=
core.CallAndMessage.description=Check for logical errors for function calls and Objective-C message expressions (e.g., uninitialized arguments, null function pointers).
core.CallAndMessage.example=<html>void test() <br>{<br> void (*foo)(void);<br>foo(); // warn: function pointer is uninitialized<br>}</html>
core.CallAndMessage.lang=IK_C,IK_CXX
core.DivideZero.description=Check for division by zero.
core.DivideZero.example=
core.DivideZero.lang=IK_C,IK_CXX
core.NonNullParamChecker.description=Check for null pointers passed as arguments to a function whose arguments are marked with the nonnull attribute.
core.NonNullParamChecker.lang=IK_C,IK_CXX
core.NonNullParamChecker.example=<html>int f(int *p) __attribute__((nonnull));<br>void test(int *p) {<br>  if (!p)<br>    f(p); // warn<br>}<br></html>
core.NullDereference.description=Check for dereferences of null pointers.
core.NullDereference.example=<html>void test(int *p) {<br> if (p)<br>   return;<br>  int x = p[0]; // warn<br>}</html>
core.NullDereference.lang=IK_C,IK_CXX
core.StackAddressEscape.description=Check that addresses of stack memory do not escape the function.
core.StackAddressEscape.example=
core.StackAddressEscape.lang=IK_C
core.UndefinedBinaryOperatorResult.description=Check for undefined results of binary operators.
core.UndefinedBinaryOperatorResult.example=
core.UndefinedBinaryOperatorResult.lang=IK_C
core.VLASize.description=Check for declarations of VLA of undefined or zero size.
core.VLASize.example=
core.VLASize.lang=IK_C
core.uninitialized.ArraySubscript.description=Check for uninitialized values used as array subscripts.
core.uninitialized.ArraySubscript.example=
core.uninitialized.ArraySubscript.lang=IK_C
core.uninitialized.Assign.description=Check for assigning uninitialized values.
core.uninitialized.Assign.example=
core.uninitialized.Assign.lang=IK_C
core.uninitialized.Branch.description=Check for uninitialized values used as branch conditions.
core.uninitialized.Branch.example=
core.uninitialized.Branch.lang=IK_C
core.uninitialized.CapturedBlockVariable.description=Check for blocks that capture uninitialized values.
core.uninitialized.CapturedBlockVariable.example=
core.uninitialized.CapturedBlockVariable.lang=IK_C
core.uninitialized.UndefReturn.description=Check for uninitialized values being returned to the caller.
core.uninitialized.UndefReturn.example=
core.uninitialized.UndefReturn.lang=IK_C
deadcode.description=Dead Code Checkers
deadcode.lang=IK_C
deadcode.example=
deadcode.DeadStores.description=Check for values stored to variables that are never read afterwards.
deadcode.DeadStores.example=<html>void test() {<br>  int x;<br>  x = 1; // warn<br>}<br></html>
deadcode.DeadStores.lang=IK_C
cplusplus.description=C++ Checkers
cplusplus.lang=IK_CXX
cplusplus.example=
cplusplus.NewDelete.description= Check for double-free, use-after-free and offset problems involving C++ delete.
cplusplus.NewDelete.example=<html>void f(int *p);<br>void testUseMiddleArgAfterDelete(int *p) {<br>  delete p;<br>  f(p); // warn: use after free<br>}<br></html>
cplusplus.NewDelete.lang=IK_CXX
security.description=Security Checkers
security.lang=IK_C
security.example=
security.FloatLoopCounter.description=Warn on using a floating point value as a loop counter (CERT: FLP30-C, FLP30-CPP).
security.FloatLoopCounter.example=
security.FloatLoopCounter.lang=IK_C
security.insecureAPI.UncheckedReturn.description=
security.insecureAPI.UncheckedReturn.lang=IK_C
security.insecureAPI.UncheckedReturn.example=Warn on uses of functions whose return values must be always checked:setuid, setgid, seteuid, setegid, setreuid, setregid
security.insecureAPI.getpw.description=Warn on uses of the getpw function.
security.insecureAPI.getpw.lang=IK_C
security.insecureAPI.getpw.example=
security.insecureAPI.gets.description=Warn on uses of the gets function.
security.insecureAPI.gets.lang=IK_C
security.insecureAPI.gets.example=
security.insecureAPI.mkstemp.description=Warn when mktemp, mkstemp, mkstemps or mkdtemp is passed fewer than 6 X's in the format string.
security.insecureAPI.mkstemp.lang=IK_C
security.insecureAPI.mkstemp.example=
security.insecureAPI.mktemp.description=Warn on uses of the mktemp function.
security.insecureAPI.mktemp.lang=IK_C
security.insecureAPI.mktemp.example=
security.insecureAPI.rand.description=Warn on uses of inferior random number generating functions (only if arc4random function is available):drand48, erand48, jrand48, lcong48, lrand48, mrand48, nrand48, random, rand_
security.insecureAPI.rand.lang=IK_C
security.insecureAPI.rand.example=
security.insecureAPI.strcpy.description=Warn on uses of the strcpy and strcat functions.
security.insecureAPI.strcpy.lang=IK_C
security.insecureAPI.strcpy.example=
security.insecureAPI.vfork.description=Warn on uses of the vfork function.
security.insecureAPI.vfork.lang=IK_C
security.insecureAPI.vfork.example=
unix.description=Unix Checkers
unix.lang=IK_C,IK_CXX
unix.example=
unix.API.description=Check calls to various UNIX/POSIX functions: open, pthread_one, calloc, malloc, realloc, alloca
unix.API.example=
unix.API.lang=IK_C
unix.Malloc.description=Check for memory leaks, double free, and use-after-free and offset problems involving malloc.
unix.Malloc.example=
unix.Malloc.lang=IK_C
unix.MallocSizeof.description=Check for dubious malloc, calloc or realloc arguments involving sizeof.
unix.MallocSizeof.example=
unix.MallocSizeof.lang=IK_C
unix.MismatchedDeallocator.description=Check for mismatched deallocators (e.g. passing a pointer allocating with new to free()).
unix.MismatchedDeallocator.example=
unix.MismatchedDeallocator.lang=IK_C,IK_CXX
unix.cstring.NullArg.description=Check for null pointers being passed as arguments to C string functions: strlen, strnlen, strcpy, strncpy, strcat, strncat, strcmp, strncmp, strcasecmp, strncasecmp
unix.cstring.NullArg.example=
unix.cstring.NullArg.lang=IK_C
unix.cstring.BadSizeArg.description=Check the size argument passed to strncat for common erroneous patterns. Use -Wno-strncat-size compiler option to mute other strncat-related compiler warnings. 
unix.cstring.BadSizeArg.example=
unix.cstring.BadSizeArg.lang=IK_C
alpha.core.description=Core Alpha Checkers
alpha.core.lang=IK_C,IK_CXX
alpha.core.example=
alpha.core.CastSize.description=Check when casting a malloc'ed type T, whether the size is a multiple of the size of T (Works only with unix.Malloc or alpha.unix.MallocWithAnnotations checks enabled).
alpha.core.CastSize.lang=IK_C
alpha.core.CastSize.example=
alpha.cplusplus.description=C++ Alpha Checkers
alpha.cplusplus.lang=IK_CXX
alpha.cplusplus.example=
alpha.valist.description=Variable Argument Alpha Checkers
alpha.valist.lang=IK_C
alpha.valist.example=
alpha.deadcode.description=Dead Code Alpha Checkers
alpha.deadcode.lang=IK_C,IK_CXX
alpha.deadcode.example=
alpha.security.description=Security Alpha Checkers
alpha.security.lang=IK_C
alpha.security.example=
alpha.unix.description=Unix Alpha Checkers
alpha.unix.lang=IK_C
alpha.unix.example=
