/**
 * This file was converted to Java from the original LLVM source file. The original
 * source file follows the LLVM Release License, outlined below.
 * 
 * ==============================================================================
 * LLVM Release License
 * ==============================================================================
 * University of Illinois/NCSA
 * Open Source License
 * 
 * Copyright (c) 2003-2017 University of Illinois at Urbana-Champaign.
 * All rights reserved.
 * 
 * Developed by:
 * 
 *     LLVM Team
 * 
 *     University of Illinois at Urbana-Champaign
 * 
 *     http://llvm.org
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal with
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is furnished to do
 * so, subject to the following conditions:
 * 
 *     * Redistributions of source code must retain the above copyright notice,
 *       this list of conditions and the following disclaimers.
 * 
 *     * Redistributions in binary form must reproduce the above copyright notice
 *       this list of conditions and the following disclaimers in the
 *       documentation and/or other materials provided with the distribution.
 * 
 *     * Neither the names of the LLVM Team, University of Illinois at
 *       Urbana-Champaign, nor the names of its contributors may be used to
 *       endorse or promote products derived from this Software without specific
 *       prior written permission.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE
 * SOFTWARE.
 * 
 * ==============================================================================
 * Copyrights and Licenses for Third Party Software Distributed with LLVM:
 * ==============================================================================
 * The LLVM software contains code written by third parties.  Such software will
 * have its own individual LICENSE.TXT file in the directory in which it appears.
 * This file will describe the copyrights, license, and restrictions which apply
 * to that code.
 * 
 * The disclaimer of warranty in the University of Illinois Open Source License
 * applies to all code in the LLVM Distribution, and nothing in any of the
 * other licenses gives permission to use the names of the LLVM Team or the
 * University of Illinois to endorse or promote products derived from this
 * Software.
 * 
 * The following pieces of software have additional or alternate copyrights,
 * licenses, and/or restrictions:
 * 
 * Program             Directory
 * -------             ---------
 * Autoconf            llvm/autoconf
 *                     llvm/projects/ModuleMaker/autoconf
 * Google Test         llvm/utils/unittest/googletest
 * OpenBSD regex       llvm/lib/Support/{reg*, COPYRIGHT.regex}
 * pyyaml tests        llvm/test/YAMLParser/{*.data, LICENSE.TXT}
 * ARM contributions   llvm/lib/Target/ARM/LICENSE.TXT
 * md5 contributions   llvm/lib/Support/MD5.cpp llvm/include/llvm/Support/MD5.h
 */


package org.clang.basic.impl;

import org.clang.basic.DiagnosticIDs;
import org.clang.basic.diag;
import static org.clang.basic.impl.DiagnosticIDsStatics.*;
import org.clang.basic.impl.*;
import org.clank.support.Converted;

/**
 * IMPORTANT: array is initialized with "new StaticDiagInfoRec()" elements and there is
 * an error about too big code size, so we have to split array and initialize parts 
 * separately.
 * 
 * @author Vladimir Voskrsensky
 */
public final class JavaHugeStaticDiagInfoDelegate {
//<editor-fold defaultstate="collapsed" desc="static StaticDiagInfo">
@Converted(kind = Converted.Kind.MANUAL_DUPLICATED,
 source = "${LLVM_SRC}/llvm/tools/clang/lib/Basic/DiagnosticIDs.cpp", line = 73,
 FQN="StaticDiagInfo", NM="_ZL14StaticDiagInfo",
 cmd="jclank.sh -java-options=${SPUTNIK}/modules/org.clang.basic/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Basic/DiagnosticIDs.cpp -nm=_ZL14StaticDiagInfo")
//</editor-fold>
public static final /*const*/StaticDiagInfoRec StaticDiagInfo[/*4242*/];
static {
  final int NUM_DIAGS = 4242;
  StaticDiagInfoRec[] before_sema = init_Before_DiagnosticSemaKinds();
  StaticDiagInfoRec[] sema_start = init_DiagnosticSemaKinds_Start();
  StaticDiagInfoRec[] sema_end = init_DiagnosticSemaKinds_End();
  StaticDiagInfoRec[] after_sema = init_After_DiagnosticSemaKinds();
  StaticDiagInfo = new StaticDiagInfoRec[before_sema.length + sema_start.length + sema_end.length + after_sema.length];  
  int added = 0;
  added = add(0, before_sema);
  added = add(added, sema_start);
  added = add(added, sema_end);
  added = add(added, after_sema);
  assert added == StaticDiagInfo.length;
  assert StaticDiagInfo.length == NUM_DIAGS : "expected " + NUM_DIAGS + " got " + StaticDiagInfo.length;
}

private static int add(int index, StaticDiagInfoRec[] from) {
  int start = index;
  for (StaticDiagInfoRec rec : from) {
    assert rec != null : "null element at " + (index - start);
    StaticDiagInfo[index++] = rec;
  }
  return index;
}

//<editor-fold defaultstate="collapsed" desc="StaticDiagInfo">
@Converted(kind = Converted.Kind.AUTO,
 source = "${LLVM_SRC}/llvm/tools/clang/lib/Basic/DiagnosticIDs.cpp", line = 73,
 FQN="StaticDiagInfo", NM="_ZL14StaticDiagInfo",
 cmd="jclank.sh -java-options=${SPUTNIK}/modules/org.clang.basic/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Basic/DiagnosticIDs.cpp -nm=_ZL14StaticDiagInfo")
//</editor-fold>
private static StaticDiagInfoRec [/*1159*/] init_Before_DiagnosticSemaKinds() {
//TO generate use only following includes  
//#include "clang/Basic/DiagnosticCommonKinds.inc"
//#include "clang/Basic/DiagnosticDriverKinds.inc"
//#include "clang/Basic/DiagnosticFrontendKinds.inc"
//#include "clang/Basic/DiagnosticSerializationKinds.inc"
//#include "clang/Basic/DiagnosticLexKinds.inc"
//#include "clang/Basic/DiagnosticParseKinds.inc"
//#include "clang/Basic/DiagnosticASTKinds.inc"
//#include "clang/Basic/DiagnosticCommentKinds.inc"
return new /*const*/ StaticDiagInfoRec [/*1155*/] {
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arcmt_nsinvocation_ownership, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"NSInvocation's %0 is not safe to be used with an object with ownership other than __unsafe_unretained"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_not_type_attr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute cannot be applied to types"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_cannot_open_file, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot open file '%0': %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_default_special_members, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"only special member functions may be defaulted"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_deleted_non_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"only functions can have deleted definitions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_enum_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"enumeration cannot be a template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_after, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected %1 after %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_colon_after_setter_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"method name referenced in property setter attribute must end with ':'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_either, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected %0 or %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_namespace_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected namespace name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_string_literal, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected string literal %select{in %1|for diagnostic message in static_assert|for optional message in 'availability' attribute}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_file_modified, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"file '%0' modified since it was first processed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_integer_literal_too_large, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"integer literal is too large to be represented in any %select{signed |}0integer type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_character_udl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"character literal with user-defined suffix cannot be used here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_numeric_udl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"numeric literal with user-defined suffix cannot be used here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_storage_class_in_func_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid storage class specifier in function declarator"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_string_udl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"string literal with user-defined suffix cannot be used here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_build_disabled, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"module '%0' is needed but has not been provided, and implicit use of module files is disabled"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_cycle, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cyclic dependency in module '%0': %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_format_unhandled, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no handler registered for module format '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_header_missing, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{|umbrella }0header '%1' not found"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_lock_failure, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"could not acquire lock file for module '%0': %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_lock_timeout, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"timed out waiting to acquire lock file for module '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_not_built, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"could not build module '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_not_found, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"module '%0' not found"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_unavailable, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"module '%0' %select{is incompatible with|requires}1 feature '%2'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mt_message, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"[rewriter] %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_nullability_conflicting, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 17, 0/*, SKIP_ARG*/, /*KEEP_STR*/"nullability specifier %0 conflicts with existing specifier %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_more_one_clause, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"directive '#pragma omp %0' cannot contain more than one '%1' clause%select{| with '%3' name modifier| with 'source' dependence}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opt_not_valid_with_opt, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"option '%0' cannot be specified with '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_param_redefinition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"redefinition of parameter %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_seh___except_block, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 only allowed in __except block or filter expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_seh___except_filter, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 only allowed in __except filter expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_seh___finally_block, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 only allowed in __finally block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_seh_expected_handler, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected '__except' or '__finally' block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_target_unknown_abi, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unknown target ABI '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_target_unknown_cpu, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unknown target CPU '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_target_unknown_fpmath, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unknown FP unit '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_target_unknown_triple, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unknown target triple '%0', please use -triple or -arch"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_target_unsupported_abi, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ABI '%0' is not supported on CPU '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_target_unsupported_abi_for_triple, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ABI '%0' is not supported for '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_target_unsupported_fpmath, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the '%0' unit is not supported with this instruction set"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_target_unsupported_unaligned, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the %0 sub-architecture does not support unaligned accesses"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unable_to_make_temp, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unable to make temporary file: %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unable_to_rename_temp, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unable to rename temporary '%0' to output file '%1': '%2'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unsupported_bom, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 byte order mark detected in '%1', but encoding is not supported"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_c99_longlong, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 303/*, SKIP_ARG*/, /*KEEP_STR*/"'long long' is an extension when C99 mode is not enabled"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_clang_enable_if, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 206/*, SKIP_ARG*/, /*KEEP_STR*/"'enable_if' is a clang extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_cxx11_longlong, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 72/*, SKIP_ARG*/, /*KEEP_STR*/"'long long' is a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_integer_literal_too_large_for_signed, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 251/*, SKIP_ARG*/, /*KEEP_STR*/"integer literal is too large to be represented in a signed integer type, interpreting as unsigned"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_old_implicitly_unsigned_long_cxx, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 65/*, SKIP_ARG*/, /*KEEP_STR*/"integer literal is too large to be represented in type 'long' and is subject to undefined behavior under C++98, interpreting as 'unsigned long'; this literal will %select{have type 'long long'|be ill-formed}0 in C++11 onwards"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_variadic_templates, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 69/*, SKIP_ARG*/, /*KEEP_STR*/"variadic templates are a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.fatal_too_many_errors, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"too many errors emitted, stopping now"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_also_found, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"also found"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_decl_hiding_tag_type, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%1 %0 is hidden by a non-type declaration of %0 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_declared_at, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_duplicate_case_prev, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous case defined here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_forward_declaration, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"forward declaration of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_invalid_subexpr_in_const_expr, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"subexpression not valid in a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_matching, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"to match this %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_mt_message, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"[rewriter] %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_possibility, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"one possibility"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_pragma_entered_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"#pragma entered here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_previous_declaration, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous declaration is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_previous_definition, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous definition is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_previous_implicit_declaration, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous implicit declaration is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_previous_use, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous use is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_type_being_defined, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"definition of %0 is not complete until the closing '}'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_using, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"using"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_arcmt_nsalloc_realloc, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"[rewriter] call returns pointer to GC managed memory; it will become unmanaged in ARC"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_conflicting_nullability_attr_overriding_param_types, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 17, 389/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting nullability specifier on parameter types, %0 conflicts with existing specifier %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_conflicting_nullability_attr_overriding_ret_types, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 17, 389/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting nullability specifier on return types, %0 conflicts with existing specifier %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_longlong, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 88/*, SKIP_ARG*/, /*KEEP_STR*/"'long long' is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_variadic_templates, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"variadic templates are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_method_param_declaration, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 160/*, SKIP_ARG*/, /*KEEP_STR*/"redeclaration of method parameter %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_method_param_redefinition, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"redefinition of method parameter %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_mt_message, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"[rewriter] %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_nullability_duplicate, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 17, 389/*, SKIP_ARG*/, /*KEEP_STR*/"duplicate nullability specifier %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_old_implicitly_unsigned_long, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 91/*, SKIP_ARG*/, /*KEEP_STR*/"integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C89; this literal will %select{have type 'long long'|be ill-formed}0 in C99 onwards"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_old_implicitly_unsigned_long_cxx, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 65/*, SKIP_ARG*/, /*KEEP_STR*/"integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C++98; this literal will %select{have type 'long long'|be ill-formed}0 in C++11 onwards"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_analyzer_config_multiple_values, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"analyzer-config option '%0' should contain only one '='"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_analyzer_config_no_value, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"analyzer-config option '%0' has a key but no value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_unsupported_on_runtime, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"-fobjc-arc is not supported on platforms using the legacy runtime"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_unsupported_on_toolchain, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"-fobjc-arc is not supported on versions of OS X prior to 10.6"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_I_dash_not_supported, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' not supported, please use -iquote instead"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_argument_not_allowed_with, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid argument '%0' not allowed with '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_argument_only_allowed_with, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid argument '%0' only allowed with '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_bitcode_unsupported_on_toolchain, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"-fembed-bitcode is not supported on versions of iOS prior to 6.0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_cc_print_options_failure, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unable to open CC_PRINT_OPTIONS file: %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_clang_unsupported, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the clang compiler does not support '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_clang_unsupported_opt_cxx_darwin_i386, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the clang compiler does not support '%0' for C++ on Darwin/i386"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_command_failed, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 command failed with exit code %1 (use -v to see invocation)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_command_failure, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unable to execute command: %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_command_signalled, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 command failed due to signal (use -v to see invocation)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_conflicting_deployment_targets, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting deployment targets, both '%0' and '%1' are present in environment"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_cuda_bad_gpu_arch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"Unsupported CUDA gpu architecture: %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_cuda_version_too_low, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"GPU arch %1 requires CUDA version at least %3, but installation at %0 is %2. Use --cuda-path to specify a different CUDA install, or pass --no-cuda-version-check."), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_emit_llvm_link, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"-emit-llvm cannot be used when linking"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_force_crash, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"failing because environment variable '%0' is set"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_invalid_Xarch_argument_isdriver, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid Xarch argument: '%0', cannot change driver behavior inside Xarch argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_invalid_Xarch_argument_with_args, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid Xarch argument: '%0', options requiring arguments are unsupported"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_invalid_arch_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid arch name '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_invalid_argument_to_fdebug_prefix_map, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid argument '%0' to -fdebug-prefix-map"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_invalid_darwin_version, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid Darwin version number: %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_invalid_gcc_output_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid output type '%0' for use with gcc tool"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_invalid_int_value, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid integral value '%1' in '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_invalid_libcxx_deployment, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid deployment target for -stdlib=libc++ (requires %0 or later)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_invalid_linker_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid linker name in argument '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_invalid_mfloat_abi, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid float ABI '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_invalid_omp_target, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"OpenMP target is invalid: '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_invalid_output_with_multiple_archs, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot use '%0' output with multiple -arch options"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_invalid_pgo_instrumentor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid PGO instrumentor in argument '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_invalid_remap_file, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid option '%0' not of the form <from-file>;<to-file>"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_invalid_rtlib_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid runtime library name in argument '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_invalid_stdlib_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid library name in argument '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_invalid_thread_model_for_target, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid thread model '%0' in '%1' for this target"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_invalid_value, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid value '%1' in '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_invalid_version_number, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid version number in '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_malformed_sanitizer_blacklist, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"malformed sanitizer blacklist: '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_mg_requires_m_or_mm, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"option '-MG' requires '-M' or '-MM'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_missing_argument, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"argument to '%0' is missing (expected %1 value%s1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_modules_validate_once_requires_timestamp, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"option '-fmodules-validate-once-per-build-session' requires '-fbuild-session-timestamp=<seconds since Epoch>' or '-fbuild-session-file=<file>'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_no_ast_support, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0': unable to use AST files with this tool"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_no_cuda_installation, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot find CUDA installation.  Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes."), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_no_input_files, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no input files"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_no_linker_llvm_support, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0': unable to pass LLVM bit-code files to linker"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_no_module_support, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0': unable to use module files with this tool"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_no_neon_modifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"[no]neon is not accepted as modifier, please use [no]simd instead"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_no_such_file, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no such file or directory: '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_objc_gc_arr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot specify both '-fobjc-arc' and '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_omp_host_ir_file_not_found, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"The provided host compiler IR file '%0' is required to generate code for OpenMP target regions but cannot be found."), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_omp_host_target_not_supported, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"The target '%0' is not a supported OpenMP host target."), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_optimization_remark_pattern, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 in '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_out_file_argument_with_multiple_sources, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot specify '%0%1' when compiling multiple source files"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_output_argument_with_multiple_files, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot specify -o when generating multiple output files"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_preamble_format, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incorrect format for -preamble-bytes=N,END"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_unable_to_remove_file, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unable to remove file: %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_unknown_argument, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unknown argument: '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_unknown_language, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"language not recognized: '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_unknown_objc_runtime, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unknown or ill-formed Objective-C runtime '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_unknown_stdin_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"-E or -x required when input is from standard input"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_unknown_stdin_type_clang_cl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use /Tc or /Tp to set input type for standard input"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_unsupported_linker, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unsupported value '%0' for -linker option"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_unsupported_opt, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unsupported option '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_unsupported_opt_for_target, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unsupported option '%0' for target '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_unsupported_option_argument, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unsupported argument '%1' to option '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_unsupported_rtlib_for_platform, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unsupported runtime library '%0' for platform '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_drv_use_of_Z_option, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unsupported use of internal gcc -Z option '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_no_external_assembler, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"there is no external assembler that can be used on this platform"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_weak_unsupported, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"-fobjc-weak is not supported on the current deployment target"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_weak_with_gc, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"-fobjc-weak is not supported in Objective-C garbage collection"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_target_unsupported_arch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the target architecture '%0' is not supported by the target '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_test_module_file_extension_format, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"-ftest-module-file-extension argument '%0' is not of the required form 'blockname:major:minor:hashed:user info'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_drv_address_sanitizer_debug_runtime, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"AddressSanitizer doesn't support linking with debug runtime libraries yet"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_drv_command_failed_diag_msg, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"diagnostic msg: %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_drv_t_option_is_global, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"The last /TC or /TP option takes precedence over earlier instances"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_O4_is_O3, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 25, 131/*, SKIP_ARG*/, /*KEEP_STR*/"-O4 is equivalent to -O3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_c_kext, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ignoring -fapple-kext which is valid for C++ and Objective-C++ only"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_debug_compression_unavailable, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 126/*, SKIP_ARG*/, /*KEEP_STR*/"cannot compress debug sections (zlib not installed)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_assuming_mfloat_abi_is, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unknown platform, assuming -mfloat-abi=%0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_clang_unsupported, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the clang compiler does not support '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_deprecated_arg, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 25, 131/*, SKIP_ARG*/, /*KEEP_STR*/"argument '%0' is deprecated, use '%1' instead"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_disabling_vptr_no_rtti_default, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 41/*, SKIP_ARG*/, /*KEEP_STR*/"implicitly disabling vptr sanitizer because rtti wasn't enabled"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_empty_joined_argument, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 608/*, SKIP_ARG*/, /*KEEP_STR*/"joined argument expects additional value: '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_enabling_rtti_with_exceptions, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 489/*, SKIP_ARG*/, /*KEEP_STR*/"implicitly enabling rtti for exception handling"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_input_file_unused, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 608/*, SKIP_ARG*/, /*KEEP_STR*/"%0: '%1' input unused%select{ when '%3' is present|}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_input_file_unused_by_cpp, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 608/*, SKIP_ARG*/, /*KEEP_STR*/"%0: '%1' input unused in cpp mode"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_invoking_fallback, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 184/*, SKIP_ARG*/, /*KEEP_STR*/"falling back to %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_lto_libpath, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 297/*, SKIP_ARG*/, /*KEEP_STR*/"libLTO.dylib relative to clang installed dir not found; using 'ld' default search path instead"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_objc_gc_unsupported, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"Objective-C garbage collection is not supported on this platform, ignoring '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_optimization_value, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 280/*, SKIP_ARG*/, /*KEEP_STR*/"optimization level '%0' is not supported; using '%1%2' instead"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_overriding_flag_option, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 438/*, SKIP_ARG*/, /*KEEP_STR*/"overriding '%0' option with '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_pch_not_first_include, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"precompiled header '%0' was ignored because '%1' is not first '-include'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_preprocessed_input_file_unused, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 608/*, SKIP_ARG*/, /*KEEP_STR*/"%0: previously preprocessed input%select{ unused when '%2' is present|}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_ps4_force_pic, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 429/*, SKIP_ARG*/, /*KEEP_STR*/"option '%0' was ignored by the PS4 toolchain, using '-fPIC'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_ps4_sdk_dir, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 286/*, SKIP_ARG*/, /*KEEP_STR*/"environment variable SCE_ORBIS_SDK_DIR is set, but points to invalid or nonexistent directory '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_treating_input_as_cxx, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 25, 131/*, SKIP_ARG*/, /*KEEP_STR*/"treating '%0' input as '%1' when in C++ mode, this behavior is deprecated"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_unable_to_find_directory_expected, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 286/*, SKIP_ARG*/, /*KEEP_STR*/"unable to find %0 directory, expected to be in '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_unknown_argument_clang_cl, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 586/*, SKIP_ARG*/, /*KEEP_STR*/"unknown argument ignored in clang-cl: '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_unused_argument, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 608/*, SKIP_ARG*/, /*KEEP_STR*/"argument unused during compilation: '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_yc_multiple_inputs_clang_cl, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 99/*, SKIP_ARG*/, /*KEEP_STR*/"support for '/Yc' with more than one source file not implemented yet; flag ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_ycyu_different_arg_clang_cl, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 99/*, SKIP_ARG*/, /*KEEP_STR*/"support for '/Yc' and '/Yu' with different filenames not implemented yet; flags ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_ycyu_no_arg_clang_cl, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 99/*, SKIP_ARG*/, /*KEEP_STR*/"support for '%0' without a filename not implemented yet; flag ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_drv_ycyu_no_fi_arg_clang_cl, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 99/*, SKIP_ARG*/, /*KEEP_STR*/"support for '%0' without a corresponding /FI flag not implemented yet; flag ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_ignored_gcc_optimization, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 239/*, SKIP_ARG*/, /*KEEP_STR*/"optimization flag '%0' is not supported"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_ignoring_ftabstop_value, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ignoring invalid -ftabstop value '%0', using default value %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_incompatible_sysroot, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 262/*, SKIP_ARG*/, /*KEEP_STR*/"using sysroot for '%0' but targeting '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_missing_sysroot, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 355/*, SKIP_ARG*/, /*KEEP_STR*/"no such sysroot directory: '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_target_unsupported_compact_branches, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 601/*, SKIP_ARG*/, /*KEEP_STR*/"ignoring '-mcompact-branches=' option because the '%0' architecture does not support it"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_target_unsupported_nan2008, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 604/*, SKIP_ARG*/, /*KEEP_STR*/"ignoring '-mnan=2008' option because the '%0' architecture does not support it"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_target_unsupported_nanlegacy, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 604/*, SKIP_ARG*/, /*KEEP_STR*/"ignoring '-mnan=legacy' option because the '%0' architecture does not support it"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_action_not_available, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"action %0 not compiled in"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_backend_frame_larger_than, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 14, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_backend_plugin, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 14, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_backend_unsupported, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 14, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_cannot_link_module, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot link module '%0': %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_dependency_file_requires_MT, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"-dependency-file requires at least one -MT or -MQ option"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_error_backend, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"error in backend: %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_error_opening, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"error opening '%0': %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_error_reading, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"error reading '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_error_reading_stdin, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"error reading stdin: %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_expected_clang_command, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a clang compiler command"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_expected_compiler_job, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unable to handle compilation, expected exactly one compiler job in '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_inline_asm, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_invalid_code_complete_file, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot locate code-completion file %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_invalid_plugin_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unable to find plugin '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_no_pch_in_dir, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no suitable precompiled header file found in directory '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_pth_file_has_no_source_header, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"PTH file '%0' does not designate an original source header file for -include-pth"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_remap_missing_from_file, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"could not remap from missing file '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_remap_missing_to_file, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"could not remap file '%0' to the contents of file '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_stdout_binary, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unable to change standard output to binary"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_unable_to_create_target, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unable to create target: '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_unable_to_interface_with_target, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unable to interface with target machine"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_unable_to_load_pch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unable to load PCH file"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_unable_to_load_plugin, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unable to load plugin '%0': '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_unable_to_open_output, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unable to open output file '%0': '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_vfs_overlay, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid virtual filesystem overlay file '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_missing_module, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no module named '%0' declared in module map file '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_missing_module_name, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no module name provided; specify one with -fmodule-name="), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_missing_vfs_overlay_file, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"virtual filesystem overlay file '%0' not found"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_cannot_create_includes, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot create includes file for module %0: %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_map_not_found, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"module map file '%0' not found"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_modules_embed_file_not_found, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"file '%0' specified by '-fmodules-embed-file=' not found"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_no_submodule, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no submodule named %0 in module '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_no_submodule_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no submodule named %0 in module '%1'; did you mean '%2'?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_relocatable_without_isysroot, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"must specify system root with -isysroot when building a relocatable PCH file"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_test_module_file_extension_version, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"test module file extension '%0' has different version (%1.%2) than expected (%3.%4)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unknown_analyzer_checker, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no analyzer checkers are associated with '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_verify_inconsistent_diags, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' diagnostics %select{expected|seen}1 but not %select{seen|expected}1: %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_verify_invalid_content, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid expected %0: %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_verify_invalid_no_diags, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{expected|'expected-no-diagnostics'}0 directive cannot follow %select{'expected-no-diagnostics' directive|other expected directives}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_verify_invalid_range, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid range following '-' in expected %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_verify_missing_end, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot find end ('}}') of expected %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_verify_missing_file, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"file '%0' could not be located in expected %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_verify_missing_line, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing or invalid line number following '@' in expected %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_verify_missing_regex, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot find start of regex ('{{') in %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_verify_missing_start, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot find start ('{{') of expected %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_verify_no_directives, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no expected directives found: consider use of 'expected-no-diagnostics'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_fe_backend_frame_larger_than, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 14, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_fe_backend_invalid_loc, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 14, 0/*, SKIP_ARG*/, /*KEEP_STR*/"could not determine the original source location for %0:%1:%2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_fe_backend_plugin, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 14, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_fe_inline_asm, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_fe_inline_asm_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"instantiated into assembly here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_fixit_applied, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"FIX-IT applied suggested code changes"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_fixit_failed, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"FIX-IT unable to apply suggested code changes"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_fixit_in_macro, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"FIX-IT unable to apply suggested code changes in a macro"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_fixit_unfixed_error, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"FIX-IT detected an error it cannot fix"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_incompatible_analyzer_plugin_api, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"current API version is '%0', but plugin was compiled with version '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_module_def_undef_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"macro was %select{defined|#undef'd}0 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_suggest_disabling_all_checkers, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use -analyzer-disable-all-checks to disable all static analyzer checkers"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.remark_fe_backend_optimization_remark, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_REMARK, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 14, 444/*, SKIP_ARG*/, /*KEEP_STR*/"%0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.remark_fe_backend_optimization_remark_analysis, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_REMARK, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 14, 445/*, SKIP_ARG*/, /*KEEP_STR*/"%0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.remark_fe_backend_optimization_remark_analysis_aliasing, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_REMARK, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 14, 445/*, SKIP_ARG*/, /*KEEP_STR*/"%0; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop. If the arrays will always be independent specify '#pragma clang loop vectorize(assume_safety)' before the loop or provide the '__restrict__' qualifier with the independent array arguments. Erroneous results will occur if these options are incorrectly applied!"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.remark_fe_backend_optimization_remark_analysis_fpcommute, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_REMARK, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 14, 445/*, SKIP_ARG*/, /*KEEP_STR*/"%0; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'."), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.remark_fe_backend_optimization_remark_missed, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_REMARK, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 14, 447/*, SKIP_ARG*/, /*KEEP_STR*/"%0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.remark_fe_backend_plugin, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_REMARK, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 14, 480/*, SKIP_ARG*/, /*KEEP_STR*/"%0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.remark_module_build, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_REMARK, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 357/*, SKIP_ARG*/, /*KEEP_STR*/"building module '%0' as '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.remark_module_build_done, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_REMARK, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 357/*, SKIP_ARG*/, /*KEEP_STR*/"finished building module '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.remark_sanitize_address_insert_extra_padding_accepted, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_REMARK, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 490/*, SKIP_ARG*/, /*KEEP_STR*/"-fsanitize-address-field-padding applied to %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.remark_sanitize_address_insert_extra_padding_rejected, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_REMARK, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 490/*, SKIP_ARG*/, /*KEEP_STR*/"-fsanitize-address-field-padding ignored for %0 because it %select{is not C++|is packed|is a union|is trivially copyable|has trivial destructor|is standard layout|is in a blacklisted file|is blacklisted}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_fe_backend_frame_larger_than, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 14, 203/*, SKIP_ARG*/, /*KEEP_STR*/"%0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_fe_backend_optimization_failure, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 14, 446/*, SKIP_ARG*/, /*KEEP_STR*/"%0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_fe_backend_plugin, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 14, 46/*, SKIP_ARG*/, /*KEEP_STR*/"%0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_fe_cc_log_diagnostics_failure, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unable to open CC_LOG_DIAGNOSTICS file: %0 (using stderr)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_fe_cc_print_header_failure, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unable to open CC_PRINT_HEADERS file: %0 (using stderr)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_fe_frame_larger_than, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 14, 203/*, SKIP_ARG*/, /*KEEP_STR*/"stack frame size of %0 bytes in %q1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_fe_inline_asm, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 12, 273/*, SKIP_ARG*/, /*KEEP_STR*/"%0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_fe_macro_contains_embedded_newline, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"macro '%0' contains embedded newline; text after the newline is ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_fe_override_module, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 436/*, SKIP_ARG*/, /*KEEP_STR*/"overriding the module target triple with %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_fe_serialized_diag_failure, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 500/*, SKIP_ARG*/, /*KEEP_STR*/"unable to open file %0 for serializing diagnostics (%1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_fe_serialized_diag_merge_failure, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 500/*, SKIP_ARG*/, /*KEEP_STR*/"unable to merge a subprocess's serialized diagnostics"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_fixit_no_changes, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"FIX-IT detected errors it could not fix; no output will be generated"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_incompatible_analyzer_plugin_api, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 19/*, SKIP_ARG*/, /*KEEP_STR*/"checker plugin '%0' is not compatible with this version of the analyzer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_missing_submodule, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 265/*, SKIP_ARG*/, /*KEEP_STR*/"missing submodule '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_module_config_macro_undef, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 108/*, SKIP_ARG*/, /*KEEP_STR*/"%select{definition|#undef}0 of configuration macro '%1' has no effect on the import of '%2'; pass '%select{-D%1=...|-U%1}0' on the command line to configure the module"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_module_config_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 359/*, SKIP_ARG*/, /*KEEP_STR*/"module file %0 cannot be loaded due to a configuration mismatch with the current compilation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_option_invalid_ocl_version, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 25, 131/*, SKIP_ARG*/, /*KEEP_STR*/"OpenCL version %0 does not support the option '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unknown_diag_option, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 591/*, SKIP_ARG*/, /*KEEP_STR*/"unknown %select{warning|remark}0 option '%1'%select{|; did you mean '%3'?}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unknown_warning_specifier, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 591/*, SKIP_ARG*/, /*KEEP_STR*/"unknown %0 warning specifier: '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_not_a_pch_file, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"input is not a PCH file: '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_pch_file_modified, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"file '%0' has been modified since the precompiled header '%1' was built"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_pch_file_overridden, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"file '%0' from the precompiled header has been overridden"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_pch_malformed, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"malformed or corrupted AST file: '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_pch_malformed_block, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"malformed block record in PCH file: '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fe_unable_to_read_pch_file, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unable to read PCH file %0: '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_imported_module_modmap_changed, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"module '%0' imported by AST file '%1' found in a different module map file (%2) than when the importing AST file was built (%3)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_imported_module_not_found, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"module '%0' in AST file '%1' (imported by AST file '%2') is not defined in any loaded module map file; maybe you need to load '%3'?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_imported_module_relocated, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"module '%0' was built in directory '%1' but now resides in directory '%2'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_different_modmap, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"module '%0' %select{uses|does not use}1 additional module map '%2'%select{| not}1 used when the module was built"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_file_conflict, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"module '%0' is defined in both '%1' and '%2'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_file_invalid, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"file '%1' is not a valid precompiled %select{PCH|module|AST}0 file"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_file_not_found, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{PCH|module|AST}0 file '%1' not found%select{|: %3}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_file_not_module, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"AST file '%0' was not built as a module"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_file_out_of_date, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{PCH|module|AST}0 file '%1' is out of date and needs to be rebuilt%select{|: %3}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_odr_violation_different_definitions, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%q0 has different definitions in different modules; %select{definition in module '%2' is here|defined here}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_odr_violation_different_instantiations, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"instantiation of %q0 is different in different modules"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_odr_violation_missing_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Report, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%q0 from module '%1' is not present in definition of %q2%select{ in module '%4'| provided earlier}3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pch_diagopt_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is currently enabled, but was not in the PCH file"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pch_different_branch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"PCH file built from a different branch (%0) than the compiler (%1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pch_langopt_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 was %select{disabled|enabled}1 in PCH file but is currently %select{disabled|enabled}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pch_langopt_value_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 differs in PCH file vs. current file"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pch_macro_def_conflict, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"definition of macro '%0' differs between the precompiled header ('%1') and the command line ('%2')"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pch_macro_def_undef, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"macro '%0' was %select{defined|undef'd}1 in the precompiled header but %select{undef'd|defined}1 on the command line"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pch_modulecache_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"PCH was compiled with module cache path '%0', but the path is currently '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pch_pp_detailed_record, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{command line contains|precompiled header was built with}0 '-detailed-preprocessing-record' but %select{precompiled header was not built with it|it is not present on the command line}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pch_targetopt_feature_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{AST file|current translation unit}0 was compiled with the target feature'%1' but the %select{current translation unit is|AST file was}0 not"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pch_targetopt_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"PCH file was compiled for the %0 '%1' but the current translation unit is being compiled for target '%2'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pch_undef, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{command line contains|precompiled header was built with}0 '-undef' but %select{precompiled header was not built with it|it is not present on the command line}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pch_version_too_new, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"PCH file uses a newer PCH format that cannot be read"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pch_version_too_old, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"PCH file uses an older PCH format that is no longer supported"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pch_with_compiler_errors, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"PCH file contains compiler errors"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_module_cache_path, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"after modifying system headers, please delete the module cache at '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_module_file_imported_by, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"imported by %select{|module '%2' in }1'%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_module_odr_violation_different_definitions, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"definition in module '%0' is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_module_odr_violation_no_possible_decls, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"definition has no member %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_module_odr_violation_possible_decl, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration of %0 does not match"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_pch_rebuild_required, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"please rebuild precompiled header '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_pch_required_by, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 15, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' required by '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_duplicate_module_file_extension, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 15, 360/*, SKIP_ARG*/, /*KEEP_STR*/"duplicate module file extension block name '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_module_uses_date_time, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 15, 448/*, SKIP_ARG*/, /*KEEP_STR*/"%select{precompiled header|module}0 uses __DATE__ or __TIME__"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.backslash_newline_space, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 47/*, SKIP_ARG*/, /*KEEP_STR*/"backslash and newline separated by space"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err__Pragma_malformed, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"_Pragma takes a parenthesized string literal"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_character_encoding, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"illegal character encoding in character literal"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_string_encoding, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"illegal character encoding in string literal"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_character_too_large, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"character too large for enclosing character literal type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_conflict_marker, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"version control conflict marker in file"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_defined_macro_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'defined' cannot be used as a macro name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_digit_separator_not_between_digits, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"digit separator cannot appear at %select{start|end}0 of digit sequence"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_embedded_directive, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"embedding a #%0 directive within macro arguments is not supported"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_escape_too_large, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{hex|octal}0 escape sequence out of range"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_id_building_module, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a module name in '__building_module' expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_exponent_has_no_digits, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"exponent has no digits"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_feature_check_malformed, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"builtin feature check macro requires a parenthesized identifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_hex_constant_requires, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"hexadecimal floating %select{constant|literal}0 requires %select{an exponent|a significand}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_hex_escape_no_digits, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"\\%0 used with no following hex digits"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_char_raw_delim, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid character '%0' character in raw string delimiter; use PREFIX( )PREFIX to delimit raw string"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_character_to_charify, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid argument to convert to character"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_digit, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid digit '%0' in %select{decimal|octal|binary}1 constant"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_pth_file, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid or corrupt PTH file '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_suffix_constant, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid suffix '%0' on %select{integer|floating}1 constant"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_utf8, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"source file is not valid UTF-8"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_lexing_string, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"failure when lexing a string"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_config_macro_submodule, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"configuration macros are only allowed in top-level modules"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_expected_attribute, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected an attribute name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_expected_config_macro, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected configuration macro name after ','"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_expected_conflicts_comma, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected ',' after conflicting module name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_expected_conflicts_message, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a message describing the conflict with '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_expected_export_wildcard, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"only '*' can be exported from an inferred submodule"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_expected_feature, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a feature name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_expected_header, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a header name after '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_expected_inferred_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected %select{module exclusion with 'exclude'|'export *'}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_expected_lbrace, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected '{' to start module '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_expected_lbrace_wildcard, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected '{' to start inferred submodule"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_expected_library_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected %select{library|framework}0 name as a string"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_expected_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected umbrella, header, submodule, or module export"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_expected_mmap_file, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a module map file name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_expected_module, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected module declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_expected_module_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected module name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_expected_rbrace, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected '}'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_expected_rsquare, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected ']' to close attribute"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_explicit_inferred_framework, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"inferred framework modules cannot be 'explicit'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_explicit_top_level, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'explicit' is not permitted on top-level modules"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_inferred_framework_submodule, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"inferred submodule cannot be a framework submodule"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_inferred_no_umbrella, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"inferred submodules require a module with an umbrella"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_inferred_redef, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"redefinition of inferred submodule"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_missing_exclude_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected excluded module name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_missing_module_qualified, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no module named '%0' in '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_missing_module_unqualified, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no module named '%0' visible from '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_module_id, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a module name or '*'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_module_redefinition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"redefinition of module '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_nested_submodule_id, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"qualified module name can only be used to define modules at the top level"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_top_level_inferred_submodule, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"only submodules and framework modules may be inferred with wildcard syntax"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_umbrella_clash, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"umbrella for module '%0' already covers this directory"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_umbrella_dir_not_found, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"umbrella directory '%0' not found"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_unknown_token, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"skipping stray token"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mmap_use_decl_submodule, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use declarations are only allowed in top-level modules"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_multichar_utf_character_literal, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"Unicode character literals may not contain multiple characters"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_non_ascii, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-ASCII characters are not allowed outside of literals and identifiers"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pascal_string_too_long, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"Pascal string is too long"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_paste_at_end, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'##' cannot appear at end of macro expansion"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_paste_at_start, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'##' cannot appear at start of macro expansion"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_arc_cf_code_audited_syntax, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected 'begin' or 'end'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_assume_nonnull_syntax, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 17, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected 'begin' or 'end'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_bad_paste, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"pasting formed '%0', an invalid preprocessing token"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_colon_without_question, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"':' without preceding '?'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_directive_required, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 must be used within a preprocessing directive"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_division_by_zero, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"division by zero in preprocessor expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_double_begin_of_arc_cf_code_audited, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"already inside '#pragma clang arc_cf_code_audited'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_double_begin_of_assume_nonnull, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 17, 0/*, SKIP_ARG*/, /*KEEP_STR*/"already inside '#pragma clang assume_nonnull'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_duplicate_name_in_arg_list, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"duplicate macro parameter name %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_empty_filename, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"empty filename"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_endif_without_if, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"#endif without #if"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_eof_in_arc_cf_code_audited, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'#pragma clang arc_cf_code_audited' was not ended within this file"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_eof_in_assume_nonnull, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 17, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'#pragma clang assume_nonnull' was not ended within this file"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_error_opening_file, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"error opening file '%0': %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_expected_after, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing %1 after %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_expected_comma_in_arg_list, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected comma in macro parameter list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_expected_eol, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected end of line in preprocessor expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_expected_ident_in_arg_list, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected identifier in macro parameter list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_expected_rparen, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected ')' in preprocessor expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_expected_value_in_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected value in expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_expects_filename, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected \"FILENAME\" or <FILENAME>"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_expr_bad_token_binop, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"token is not a valid binary operator in a preprocessor subexpression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_expr_bad_token_lparen, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function-like macro %0 is not defined"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_expr_bad_token_start_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid token at start of a preprocessor expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_file_not_found, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' file not found"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_file_not_found_not_fatal, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' file not found with <angled> include; use \"quotes\" instead"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_hash_error, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 19, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_identifier_arg_not_identifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot convert %0 token to an identifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_illegal_floating_literal, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"floating point literal in preprocessor expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_import_directive_ms, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"#import of type library is an unsupported Microsoft feature"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_include_in_arc_cf_code_audited, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot #include files inside '#pragma clang arc_cf_code_audited'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_include_in_assume_nonnull, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 17, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot #include files inside '#pragma clang assume_nonnull'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_include_too_deep, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"#include nested too deeply"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_invalid_directive, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid preprocessing directive"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_invalid_poison, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"can only poison identifier tokens"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_invalid_tok_in_arg_list, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid token in macro parameter list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_invalid_udl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{character|integer}0 literal with user-defined suffix cannot be used in preprocessor constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_line_digit_sequence, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{#line|GNU line marker}0 directive requires a simple digit sequence"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_line_invalid_filename, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid filename for #line directive"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_line_requires_integer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"#line directive requires a positive integer argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_linemarker_invalid_filename, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid filename for line marker directive"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_linemarker_invalid_flag, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid flag line marker directive"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_linemarker_invalid_pop, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid line marker flag '2': cannot pop empty include stack"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_linemarker_requires_integer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"line marker directive requires a positive integer argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_macro_not_identifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"macro name must be an identifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_malformed_ident, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid #ident directive"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_missing_macro_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"macro name missing"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_missing_rparen_in_macro_def, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing ')' in macro parameter list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_nested_paren, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"nested parentheses not permitted in %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_opencl_variadic_macros, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variadic macros not supported in OpenCL"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_operator_used_as_macro_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"C++ operator %0 (aka %1) used as a macro name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_remainder_by_zero, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"remainder by zero in preprocessor expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_stringize_not_parameter, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%select{#|#@}0' is not followed by a macro parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_unmatched_end_of_arc_cf_code_audited, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"not currently inside '#pragma clang arc_cf_code_audited'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_unmatched_end_of_assume_nonnull, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 17, 0/*, SKIP_ARG*/, /*KEEP_STR*/"not currently inside '#pragma clang assume_nonnull'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_unterminated_conditional, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unterminated conditional directive"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_used_poisoned_id, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"attempt to use a poisoned identifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pp_visibility_non_macro, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no macro named %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pragma_message, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pragma_message_malformed, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"pragma %select{message|warning|error}0 requires parenthesized string"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pragma_push_pop_macro_malformed, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"pragma %0 requires a parenthesized string"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_raw_delim_too_long, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"raw string delimiter longer than 16 characters; use PREFIX( )PREFIX to delimit raw string"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_string_concat_mixed_suffix, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"differing user-defined suffixes ('%0' and '%1') in string literal concatenation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_too_few_args_in_macro_invoc, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"too few arguments provided to function-like macro invocation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_too_many_args_in_macro_invoc, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"too many arguments provided to function-like macro invocation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ucn_control_character, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"universal character name refers to a control character"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ucn_escape_basic_scs, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"character '%0' cannot be specified by a universal character name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ucn_escape_incomplete, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incomplete universal character name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ucn_escape_invalid, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid universal character"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_undeclared_use_of_module, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"module %0 does not depend on a module exporting '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unsupported_string_concat, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unsupported non-standard concatenation of string literals"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unterm_macro_invoc, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unterminated function-like macro invocation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unterminated___pragma, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing terminating ')' character"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unterminated_block_comment, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unterminated /* comment"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unterminated_raw_string, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"raw string missing terminating delimiter )%0\""), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.escaped_newline_block_comment_end, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 102/*, SKIP_ARG*/, /*KEEP_STR*/"escaped newline between */ characters at block comment end"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_binary_literal, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 213/*, SKIP_ARG*/, /*KEEP_STR*/"binary integer literals are a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_binary_literal_cxx14, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 74/*, SKIP_ARG*/, /*KEEP_STR*/"binary integer literals are a C++14 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_c99_whitespace_required_after_macro_name, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 92/*, SKIP_ARG*/, /*KEEP_STR*/"ISO C99 requires whitespace after the macro name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_charize_microsoft, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 315/*, SKIP_ARG*/, /*KEEP_STR*/"charizing operator #@ is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_comment_paste_microsoft, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 316/*, SKIP_ARG*/, /*KEEP_STR*/"pasting two '/' tokens into a '//' comment is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_ctrl_z_eof_microsoft, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 320/*, SKIP_ARG*/, /*KEEP_STR*/"treating Ctrl-Z as end-of-file is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_dollar_in_identifier, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 156/*, SKIP_ARG*/, /*KEEP_STR*/"'$' in identifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_embedded_directive, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 164/*, SKIP_ARG*/, /*KEEP_STR*/"embedding a directive within macro arguments has undefined behavior"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_empty_character, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 288/*, SKIP_ARG*/, /*KEEP_STR*/"empty character constant"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_empty_fnmacro_arg, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 92/*, SKIP_ARG*/, /*KEEP_STR*/"empty macro arguments are a C99 feature"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_four_char_character_literal, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 202/*, SKIP_ARG*/, /*KEEP_STR*/"multi-character character constant"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_hex_constant_invalid, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 92/*, SKIP_ARG*/, /*KEEP_STR*/"hexadecimal floating constants are a C99 feature"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_hex_literal_invalid, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 80/*, SKIP_ARG*/, /*KEEP_STR*/"hexadecimal floating literals are a C++1z feature"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_imaginary_constant, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 224/*, SKIP_ARG*/, /*KEEP_STR*/"imaginary constants are a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_line_comment, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 102/*, SKIP_ARG*/, /*KEEP_STR*/"// comments are not allowed in this language"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_missing_varargs_arg, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 234/*, SKIP_ARG*/, /*KEEP_STR*/"must specify at least one argument for '...' parameter of variadic macro"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_missing_whitespace_after_macro_name, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"whitespace required after macro name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_ms_reserved_user_defined_literal, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 484/*, SKIP_ARG*/, /*KEEP_STR*/"invalid suffix on literal; C++11 requires a space between literal and identifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_multi_line_line_comment, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 102/*, SKIP_ARG*/, /*KEEP_STR*/"multi-line // comment"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_multichar_character_literal, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 367/*, SKIP_ARG*/, /*KEEP_STR*/"multi-character character constant"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_named_variadic_macro, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 629/*, SKIP_ARG*/, /*KEEP_STR*/"named variadic macros are a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_no_newline_eof, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 373/*, SKIP_ARG*/, /*KEEP_STR*/"no newline at end of file"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_nonstandard_escape, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 449/*, SKIP_ARG*/, /*KEEP_STR*/"use of non-standard escape character '\\%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_on_off_switch_syntax, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 589/*, SKIP_ARG*/, /*KEEP_STR*/"expected 'ON' or 'OFF' or 'DEFAULT' in pragma"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_paste_comma, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 234/*, SKIP_ARG*/, /*KEEP_STR*/"token pasting of ',' and __VA_ARGS__ is a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_pp_bad_paste_ms, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 290/*, SKIP_ARG*/, /*KEEP_STR*/"pasting formed '%0', an invalid preprocessing token"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_pp_bad_vaargs_use, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 449/*, SKIP_ARG*/, /*KEEP_STR*/"__VA_ARGS__ can only appear in the expansion of a C99 variadic macro"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_pp_comma_expr, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 449/*, SKIP_ARG*/, /*KEEP_STR*/"comma operator in operand of #if"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_pp_extra_tokens_at_eol, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 183/*, SKIP_ARG*/, /*KEEP_STR*/"extra tokens at end of #%0 directive"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_pp_ident_directive, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 449/*, SKIP_ARG*/, /*KEEP_STR*/"#ident is a language extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_pp_import_directive, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 253/*, SKIP_ARG*/, /*KEEP_STR*/"#import is a language extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_pp_include_next_directive, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 225/*, SKIP_ARG*/, /*KEEP_STR*/"#include_next is a language extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_pp_include_search_ms, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 330/*, SKIP_ARG*/, /*KEEP_STR*/"#include resolved using non-portable Microsoft search rules as: %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_pp_line_too_big, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 449/*, SKIP_ARG*/, /*KEEP_STR*/"C requires #line number to be less than %0, allowed as extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_pp_line_zero, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 233/*, SKIP_ARG*/, /*KEEP_STR*/"#line directive with zero argument is a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_pp_macro_redef, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 305/*, SKIP_ARG*/, /*KEEP_STR*/"%0 macro redefined"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_pp_operator_used_as_macro_name, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 318/*, SKIP_ARG*/, /*KEEP_STR*/"C++ operator %0 (aka %1) used as a macro name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_pp_redef_builtin_macro, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 58/*, SKIP_ARG*/, /*KEEP_STR*/"redefining builtin macro"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_pp_undef_builtin_macro, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 58/*, SKIP_ARG*/, /*KEEP_STR*/"undefining builtin macro"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_pp_warning_directive, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 449/*, SKIP_ARG*/, /*KEEP_STR*/"#warning is a language extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_pragma_syntax_eod, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 589/*, SKIP_ARG*/, /*KEEP_STR*/"expected end of directive in pragma"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_reserved_user_defined_literal, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 484/*, SKIP_ARG*/, /*KEEP_STR*/"invalid suffix on literal; C++11 requires a space between literal and identifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_stdc_pragma_ignored, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 589/*, SKIP_ARG*/, /*KEEP_STR*/"unknown pragma in STDC namespace"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_string_too_long, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 433/*, SKIP_ARG*/, /*KEEP_STR*/"string literal of length %0 exceeds maximum length %1 that %select{C90|ISO C99|C++}2 compilers are required to support"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_token_used, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 295/*, SKIP_ARG*/, /*KEEP_STR*/"extension used"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_unicode_whitespace, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 584/*, SKIP_ARG*/, /*KEEP_STR*/"treating Unicode character as whitespace"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_unknown_escape, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 588/*, SKIP_ARG*/, /*KEEP_STR*/"unknown escape sequence '\\%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_unterminated_char_or_string, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 288/*, SKIP_ARG*/, /*KEEP_STR*/"missing terminating %select{'|'\"'}0 character"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_variadic_macro, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 629/*, SKIP_ARG*/, /*KEEP_STR*/"variadic macros are a C99 feature"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_header_guard, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is defined here; did you mean %1?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_implicit_top_level_module_import_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"submodule of top-level module '%0' implicitly imported here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_init_list_at_beginning_of_macro_argument, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot use initializer list at the beginning of a macro argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_macro_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"macro %0 defined here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_mmap_lbrace_match, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"to match this '{'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_mmap_lsquare_match, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"to match this ']'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_mmap_prev_definition, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previously defined here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_pp_ambiguous_macro_chosen, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expanding this definition of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_pp_ambiguous_macro_other, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"other definition of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_suggest_parens_for_macro, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"parentheses are required around macro argument containing braced initializer list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ucn_four_not_eight, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"did you mean to use '\\u'?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.null_in_char_or_string, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 386/*, SKIP_ARG*/, /*KEEP_STR*/"null character(s) preserved in %select{char|string}0 literal"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.null_in_file, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 386/*, SKIP_ARG*/, /*KEEP_STR*/"null character ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.pp_disabled_macro_expansion, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 142/*, SKIP_ARG*/, /*KEEP_STR*/"disabled expansion of recursive macro"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.pp_err_elif_after_else, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"#elif after #else"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.pp_err_elif_without_if, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"#elif without #if"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.pp_err_else_after_else, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"#else after #else"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.pp_err_else_without_if, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"#else without #if"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.pp_hash_warning, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 19, 2/*, SKIP_ARG*/, /*KEEP_STR*/"%0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.pp_include_macros_out_of_predefines, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the #__include_macros directive is only for internal use by -imacros"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.pp_include_next_absolute_path, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 255/*, SKIP_ARG*/, /*KEEP_STR*/"#include_next with absolute path"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.pp_include_next_in_primary, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 256/*, SKIP_ARG*/, /*KEEP_STR*/"#include_next in primary source file"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.pp_invalid_string_literal, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid string literal, ignoring final '\\'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.pp_macro_not_used, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 617/*, SKIP_ARG*/, /*KEEP_STR*/"macro is not used"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.pp_nonportable_path, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 382/*, SKIP_ARG*/, /*KEEP_STR*/"non-portable path to file '%0'; specified path differs in case from file name on disk"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.pp_nonportable_system_path, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 383/*, SKIP_ARG*/, /*KEEP_STR*/"non-portable path to file '%0'; specified path differs in case from file name on disk"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.pp_out_of_date_dependency, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"current file is older than dependency %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.pp_poisoning_existing_macro, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"poisoning existing macro"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.pp_pragma_once_in_main_file, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 458/*, SKIP_ARG*/, /*KEEP_STR*/"#pragma once in main file"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.pp_pragma_sysheader_in_main_file, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 459/*, SKIP_ARG*/, /*KEEP_STR*/"#pragma system_header ignored in main file"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.trigraph_converted, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 567/*, SKIP_ARG*/, /*KEEP_STR*/"trigraph converted to '%0' character"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.trigraph_ends_block_comment, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 567/*, SKIP_ARG*/, /*KEEP_STR*/"trigraph ends block comment"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.trigraph_ignored, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 567/*, SKIP_ARG*/, /*KEEP_STR*/"trigraph ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.trigraph_ignored_block_comment, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 567/*, SKIP_ARG*/, /*KEEP_STR*/"ignored trigraph would end block comment"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_auto_module_import, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 42/*, SKIP_ARG*/, /*KEEP_STR*/"treating #%select{include|import|include_next|__include_macros}0 as an import of module '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_bad_character_encoding, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 289/*, SKIP_ARG*/, /*KEEP_STR*/"illegal character encoding in character literal"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_bad_string_encoding, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 289/*, SKIP_ARG*/, /*KEEP_STR*/"illegal character encoding in string literal"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_c99_compat_unicode_id, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 91/*, SKIP_ARG*/, /*KEEP_STR*/"%select{using this character in an identifier|starting an identifier with this character}0 is incompatible with C99"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_c99_compat_unicode_literal, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 91/*, SKIP_ARG*/, /*KEEP_STR*/"unicode literals are incompatible with C99"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_char_constant_too_large, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"character constant too long for its type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx11_compat_binary_literal, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 84/*, SKIP_ARG*/, /*KEEP_STR*/"binary integer literals are incompatible with C++ standards before C++14"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx11_compat_digit_separator, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 83/*, SKIP_ARG*/, /*KEEP_STR*/"digit separators are incompatible with C++ standards before C++14"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx11_compat_reserved_user_defined_literal, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 68/*, SKIP_ARG*/, /*KEEP_STR*/"identifier after literal will be treated as a reserved user-defined literal suffix in C++11"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx11_compat_user_defined_literal, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 65/*, SKIP_ARG*/, /*KEEP_STR*/"identifier after literal will be treated as a user-defined literal suffix in C++11"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx11_keyword, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 65/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' is a keyword in C++11"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx14_compat_u8_character_literal, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 81/*, SKIP_ARG*/, /*KEEP_STR*/"unicode literals are incompatible with C++ standards before C++1z"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx1z_hex_literal, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 82/*, SKIP_ARG*/, /*KEEP_STR*/"hexidecimal floating literals are incompatible with C++ standards before C++1z"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_empty_fnmacro_arg, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 88/*, SKIP_ARG*/, /*KEEP_STR*/"empty macro arguments are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_less_colon_colon, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 85/*, SKIP_ARG*/, /*KEEP_STR*/"'<::' is treated as digraph '<:' (aka '[') followed by ':' in C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_literal_ucn_control_character, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 85/*, SKIP_ARG*/, /*KEEP_STR*/"universal character name referring to a control character is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_literal_ucn_escape_basic_scs, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 85/*, SKIP_ARG*/, /*KEEP_STR*/"specifying character '%0' with a universal character name is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_no_newline_eof, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 88/*, SKIP_ARG*/, /*KEEP_STR*/"C++98 requires newline at end of file"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_pp_line_too_big, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 88/*, SKIP_ARG*/, /*KEEP_STR*/"#line number greater than 32767 is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_raw_string_literal, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 85/*, SKIP_ARG*/, /*KEEP_STR*/"raw string literals are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_unicode_id, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 85/*, SKIP_ARG*/, /*KEEP_STR*/"using this character in an identifier is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_unicode_literal, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 85/*, SKIP_ARG*/, /*KEEP_STR*/"unicode literals are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_variadic_macro, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 88/*, SKIP_ARG*/, /*KEEP_STR*/"variadic macros are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_defined_in_function_type_macro, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 174/*, SKIP_ARG*/, /*KEEP_STR*/"macro expansion producing 'defined' has undefined behavior"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_defined_in_object_type_macro, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 174/*, SKIP_ARG*/, /*KEEP_STR*/"macro expansion producing 'defined' has undefined behavior"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_extraneous_char_constant, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"extraneous characters in character constant ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_has_warning_invalid_option, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 308/*, SKIP_ARG*/, /*KEEP_STR*/"__has_warning expected option name (e.g. \"-Wundef\")"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_header_guard, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 235/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is used as a header guard here, followed by #define of a different macro"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_missing_whitespace_after_macro_name, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"whitespace recommended after macro name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_mmap_unknown_attribute, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 238/*, SKIP_ARG*/, /*KEEP_STR*/"unknown attribute '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_module_conflict, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 358/*, SKIP_ARG*/, /*KEEP_STR*/"module '%0' conflicts with already-imported module '%1': %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_nested_block_comment, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 102/*, SKIP_ARG*/, /*KEEP_STR*/"'/*' within block comment"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_no_newline_eof, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 373/*, SKIP_ARG*/, /*KEEP_STR*/"no newline at end of file"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_non_modular_include_in_framework_module, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 376/*, SKIP_ARG*/, /*KEEP_STR*/"include of non-modular header inside framework module '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_non_modular_include_in_module, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 377/*, SKIP_ARG*/, /*KEEP_STR*/"include of non-modular header inside module '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pp_ambiguous_macro, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 17/*, SKIP_ARG*/, /*KEEP_STR*/"ambiguous expansion of macro %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pp_convert_to_positive, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{left|right}0 side of operator converted from negative value to unsigned: %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pp_date_time, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 1, 124/*, SKIP_ARG*/, /*KEEP_STR*/"expansion of date or time macro is not reproducible"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pp_expr_overflow, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"integer overflow in preprocessor expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pp_line_decimal, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{#line|GNU line marker}0 directive interprets number as decimal, not octal"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pp_macro_hides_keyword, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 293/*, SKIP_ARG*/, /*KEEP_STR*/"keyword is hidden by macro definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pp_macro_is_reserved_id, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 483/*, SKIP_ARG*/, /*KEEP_STR*/"macro name is a reserved identifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pp_objc_macro_redef_ignored, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 402/*, SKIP_ARG*/, /*KEEP_STR*/"ignoring redefinition of Objective-C qualifier macro"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pp_undef_identifier, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 574/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is not defined, evaluates to 0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_debug_missing_argument, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 240/*, SKIP_ARG*/, /*KEEP_STR*/"missing argument to debug command '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_debug_unexpected_command, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 240/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected debug command '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_diagnostic_cannot_pop, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 589/*, SKIP_ARG*/, /*KEEP_STR*/"pragma diagnostic pop could not pop, no matching push"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_diagnostic_invalid, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 589/*, SKIP_ARG*/, /*KEEP_STR*/"pragma diagnostic expected 'error', 'warning', 'ignored', 'fatal', 'push', or 'pop'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_diagnostic_invalid_option, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 589/*, SKIP_ARG*/, /*KEEP_STR*/"pragma diagnostic expected option name (e.g. \"-Wundef\")"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_diagnostic_invalid_token, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 589/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected token in pragma diagnostic"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_diagnostic_unknown_warning, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 589/*, SKIP_ARG*/, /*KEEP_STR*/"unknown warning group '%0', ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_ignored, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 589/*, SKIP_ARG*/, /*KEEP_STR*/"unknown pragma ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_include_alias_expected, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 589/*, SKIP_ARG*/, /*KEEP_STR*/"pragma include_alias expected '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_include_alias_expected_filename, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 589/*, SKIP_ARG*/, /*KEEP_STR*/"pragma include_alias expected include filename"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_include_alias_mismatch_angle, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 589/*, SKIP_ARG*/, /*KEEP_STR*/"angle-bracketed include <%0> cannot be aliased to double-quoted include \"%1\""), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_include_alias_mismatch_quote, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 589/*, SKIP_ARG*/, /*KEEP_STR*/"double-quoted include \"%0\" cannot be aliased to angle-bracketed include <%1>"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_message, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/true, /*KEEP_BOOL*/false, 28, 1/*, SKIP_ARG*/, /*KEEP_STR*/"%0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_pop_macro_no_push, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 240/*, SKIP_ARG*/, /*KEEP_STR*/"pragma pop_macro could not pop '%0', no matching push_macro"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_warning_expected, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 589/*, SKIP_ARG*/, /*KEEP_STR*/"#pragma warning expected '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_warning_expected_number, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 589/*, SKIP_ARG*/, /*KEEP_STR*/"#pragma warning expected a warning number"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_warning_push_level, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 589/*, SKIP_ARG*/, /*KEEP_STR*/"#pragma warning(push, level) requires a level between 0 and 4"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_warning_spec_invalid, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 589/*, SKIP_ARG*/, /*KEEP_STR*/"#pragma warning expected 'push', 'pop', 'default', 'disable', 'error', 'once', 'suppress', 1, 2, 3, or 4"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_stdc_fenv_access_not_supported, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 589/*, SKIP_ARG*/, /*KEEP_STR*/"pragma STDC FENV_ACCESS ON is not supported, ignoring pragma"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_ucn_escape_incomplete, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 583/*, SKIP_ARG*/, /*KEEP_STR*/"incomplete universal character name; treating as '\\' followed by identifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_ucn_escape_no_digits, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 583/*, SKIP_ARG*/, /*KEEP_STR*/"\\%0 used with no following hex digits; treating as '\\' followed by identifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_ucn_escape_surrogate, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 583/*, SKIP_ARG*/, /*KEEP_STR*/"universal character name refers to a surrogate character"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_ucn_not_valid_in_c89, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 583/*, SKIP_ARG*/, /*KEEP_STR*/"universal character names are only valid in C99 or C++; treating as '\\' followed by identifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_ucn_not_valid_in_c89_literal, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 583/*, SKIP_ARG*/, /*KEEP_STR*/"universal character names are only valid in C99 or C++"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_uncovered_module_header, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 265/*, SKIP_ARG*/, /*KEEP_STR*/"umbrella header for module '%0' does not include header '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_use_of_private_header_outside_module, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 1, 463/*, SKIP_ARG*/, /*KEEP_STR*/"use of private header from outside its module: '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_access_specifier_interface, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"interface types cannot specify '%select{private|protected}0' access"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_address_of_label_outside_fn, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of address-of-label extension outside of a function body"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_alias_declaration_not_identifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"name defined in alias declaration must be an identifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_alias_declaration_specialization, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{partial specialization|explicit specialization|explicit instantiation}0 of alias templates is not permitted"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_anon_type_definition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration of anonymous %0 must be a definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_bridge_retain, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 8, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unknown cast annotation __bridge_retain; did you mean __bridge_retained?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_argument_required_after_attribute, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"argument required after attribute"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_empty, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"__asm used with no assembly instructions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_goto_not_supported_yet, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'asm goto' constructs are not supported yet"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_operand_wide_string_literal, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot use %select{unicode|wide}0 string literal in 'asm'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_at_defs_cxx, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"@defs is not supported in Objective-C++"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_at_in_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected '@' in member specification"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_atimport, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of '@import' when modules are disabled"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_requires_arguments, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"parentheses must be omitted if %0 attribute's argument list is empty"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attributes_not_allowed, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"an attribute list cannot appear here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_avail_query_expected_condition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected an availability condition here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_avail_query_expected_platform_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a platform name here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_avail_query_unrecognized_platform_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unrecognized platform name %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_availability_expected_change, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected 'introduced', 'deprecated', or 'obsoleted'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_availability_expected_platform, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a platform name, e.g., 'macos'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_availability_query_repeated_platform, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"version for '%0' already specified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_availability_query_repeated_star, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'*' query has already been specified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_availability_query_wildcard_required, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"must handle potential future platforms with '*'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_availability_redundant, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"redundant %0 availability change; only the last specified change will be used"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_availability_unknown_change, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is not an availability stage; use 'introduced', 'deprecated', or 'obsoleted'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bitfield_member_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"bitfield member cannot have an in-class initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bool_redeclaration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"redeclaration of C++ built-in type 'bool'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bracket_depth_exceeded, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"bracket nesting level exceeded maximum of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_brackets_go_after_unqualified_id, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"brackets are not allowed here; to declare an array, place the brackets after the %select{identifier|name}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_c11_noreturn_misplaced, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'_Noreturn' keyword must precede function declarator"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_class_on_template_template_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template template parameter requires 'class' after the parameter list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constructor_bad_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing return type for function %0; did you mean the constructor name %1?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ctor_init_missing_comma, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing ',' between base or member initializers"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_cxx11_attribute_forbids_arguments, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"attribute %0 cannot have an argument list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_cxx11_attribute_forbids_ellipsis, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"attribute '%0' cannot be used as an attribute pack"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_cxx11_attribute_repeated, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"attribute %0 cannot appear multiple times in an attribute specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_declaration_does_not_declare_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration does not declare a parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_declspec_after_virtspec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' qualifier may not appear after the virtual specifier '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_default_arg_unparsed, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected end of default argument expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_default_delete_in_multiple_declaration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'= %select{default|delete}0' is a function definition and must occur in a standalone declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_default_template_template_parameter_not_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"default template argument for a template template parameter must be a class template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_destructor_template_id, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"destructor name %0 does not refer to a template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_destructor_tilde_identifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a class name after '~' to name a destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_destructor_tilde_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'~' in destructor name should be after nested name specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_dup_virtual, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"duplicate 'virtual' in base specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_duplicate_default_assoc, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"duplicate default generic association"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_duplicate_virt_specifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"class member already marked '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_dynamic_and_noexcept_specification, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot have both throw() and noexcept() clause on the same function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_enumerator_list_missing_comma, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing ',' between enumerators"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_enumerator_unnamed_no_def, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unnamed enumeration must be a definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_except_spec_unparsed, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected end of exception specification"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_capture, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected variable name or 'this' in lambda capture list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_case_before_expression, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected 'case' keyword before expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_catch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected catch"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_class_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected class name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_class_name_not_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'typename' is redundant; base classes are implicitly types"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_coloncolon_after_super, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected '::' after '__super'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_comma_greater, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected ',' or '>' in template-parameter-list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_comma_or_rsquare, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected ',' or ']' in lambda capture list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_end_declare_target, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected '#pragma omp end declare target'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_end_of_enumerator, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected '= constant-expression' or end of enumerator definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_equal_designator, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected '=' or another designator"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_expression, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_external_declaration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected external declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_field_designator, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a field designator, such as '.field = 4'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_fn_body, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected function body after function declarator"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_fold_operator, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a foldable binary operator in fold expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_init_in_condition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable declaration in condition must have an initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_init_in_condition_lparen, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable declaration in condition cannot have a parenthesized initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_lambda_body, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected body of lambda expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_lbrace_after_base_specifiers, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected '{' after base class list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_lbrace_in_compound_literal, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected '{' in compound literal"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_less_after, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected '<' after '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_lparen_after, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected '(' after '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_lparen_after_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected '(' for function-style cast or type construction"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_member_name_or_semi, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected member name or ';' after declaration specifiers"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_member_or_base_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected class member or base class name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_method_body, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected method body"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_minus_or_plus, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"method type specifier must start with '-' or '+'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_objc_container, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'@end' must appear in an Objective-C context"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_parameter_pack, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected the name of a parameter pack"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_parentheses_around_typename, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected parentheses around type name in %0 expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_property_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected property name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_punc, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected ')' or ',' after '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_qualified_after_typename, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a qualified name after 'typename'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_rparen_after, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected ')' after '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_selector_for_method, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected selector for Objective-C method"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_semi_after_attribute_list, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected ';' after attribute list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_semi_after_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected ';' after expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_semi_after_method_proto, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected ';' after method prototype"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_semi_after_namespace_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected ';' after namespace name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_semi_after_static_assert, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected ';' after static_assert"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_semi_after_stmt, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected ';' after %0 statement"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_semi_decl_list, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected ';' at end of declaration list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_semi_declaration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected ';' at end of declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_semi_for, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected ';' in 'for' statement specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_star_this_capture, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected 'this' following '*' in lambda capture list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_statement, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected statement"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_template_parameter, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected template parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_type_name_after_typename, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected an identifier or template-id after '::'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_unqualified_id, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected %select{identifier|unqualified-id}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_version, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a version of the form 'major[.minor[.subminor]]'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_while, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected 'while' in do/while loop"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_enum, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"enumerations cannot be explicitly instantiated"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_with_definition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit template instantiation cannot have a definition; if this definition is meant to be an explicit specialization, add '<>' after the 'template' keyword"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_spec_non_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit %select{specialization|instantiation}0 of non-template %1 %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_extraneous_closing_brace, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"extraneous closing brace ('}')"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_extraneous_rparen_in_condition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"extraneous ')' after condition, expected a statement"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_extraneous_token_before_semi, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"extraneous '%0' before ';'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fold_operator_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"operators in fold expression must be the same"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_for_co_await_not_range_for, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 13, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'co_await' modifier can only be applied to range-based for loop"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_for_range_expected_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"for range declaration must declare a variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_for_range_identifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"range-based for loop requires type for loop variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_friend_decl_defines_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot define a type in a friend declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_friend_explicit_instantiation, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"friend cannot be declared in an explicit instantiation; if this declaration is meant to be a friend declaration, remove the 'template' keyword"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_friend_invalid_in_context, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'friend' used outside of class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_func_def_no_params, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function definition does not declare parameters"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_function_declared_typedef, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function definition declared 'typedef'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_function_definition_not_allowed, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function definition is not allowed here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_function_is_not_record, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected %0 in function call; perhaps remove the %0?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_gnu_inline_asm_disabled, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"GNU-style inline assembly is disabled"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_id_after_template_in_nested_name_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected template name after 'template' keyword in nested name specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_illegal_decl_reference_to_reference, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 declared as a reference to a reference"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_illegal_super_cast, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot cast 'super' (it isn't an expression)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_incomplete_array_member_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array bound cannot be deduced from an in-class initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_init_list_bin_op, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initializer list cannot be used on the %select{left|right}0 hand side of operator '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_inline_ms_asm_parsing, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_inline_namespace_alias, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"namespace alias cannot be inline"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_inline_nested_namespace_definition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"nested namespace definition cannot be 'inline'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_operator_on_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot use %select{dot|arrow}0 operator on a type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_reference_qualifier_application, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' qualifier may not be applied to a reference"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_token_after_declarator_suggest_equal, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid %0 at end of declaration; did you mean '='?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_token_after_toplevel_declarator, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected ';' after top level declarator"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_l_square_l_square_not_attribute, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"C++11 only allows consecutive left square brackets when introducing an attribute"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_label_end_of_compound_statement, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"label at end of compound statement: expected statement"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_lambda_missing_parens, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"lambda requires '()' before %select{'mutable'|return type|attribute specifier}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_literal_operator_string_not_empty, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"string literal after 'operator' must be '\"\"'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_literal_operator_string_prefix, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"string literal after 'operator' cannot have an encoding prefix"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_misplaced_ellipsis_in_declaration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'...' must %select{immediately precede declared identifier|be innermost component of anonymous pack declaration}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_missing_before_module_end, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 16, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected %0 at end of module"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_missing_catch_finally, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"@try statement without a @catch and @finally clause"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_missing_comma_before_ellipsis, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"C requires a comma prior to the ellipsis in a variadic function type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_missing_dependent_template_keyword, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use 'template' keyword to treat '%0' as a dependent template name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_missing_end_of_definition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing '}' at end of definition of %q0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_missing_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected parameter declarator"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_missing_whitespace_digraph, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"found '<::' after a %select{template name|const_cast|dynamic_cast|reinterpret_cast|static_cast}0 which forms the digraph '<:' (aka '[') and a ':', did you mean '< ::'?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_expected_ident, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 16, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a module name after module import"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_expected_semi, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 16, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected ';' after module name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ms_declspec_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"__declspec attributes must be an identifier or string literal"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ms_property_duplicate_accessor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property declaration specifies '%0' accessor twice"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ms_property_expected_accessor_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected name of accessor method"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ms_property_expected_comma_or_rparen, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected ',' or ')' at end of property accessor list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ms_property_expected_equal, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected '=' after '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ms_property_has_set_accessor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"putter for property must be specified as 'put', not 'set'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ms_property_initializer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property declaration cannot have an in-class initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ms_property_missing_accessor_kind, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing 'get=' or 'put='"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ms_property_no_getter_or_putter, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property does not specify a getter or a putter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ms_property_unknown_accessor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected 'get' or 'put' in property declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_msasm_unable_to_create_target, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"MS-style inline assembly is not available: %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_msasm_unsupported_arch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"Unsupported architecture '%0' for MS-style inline assembly"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_multiple_template_declarators, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{|a template declaration|an explicit template specialization|an explicit template instantiation}0 can only %select{|declare|declare|instantiate}0 a single entity"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_namespace_nonnamespace_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"namespaces can only be defined in global or namespace scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_no_matching_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"parameter named %0 is missing"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_nsnumber_nonliteral_unary, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"@%0 must be followed by a number to form an NSNumber object"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_concat_string, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected token after Objective-C string"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_directive_only_in_protocol, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"directive may only be specified in protocols only"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_expected_equal_for_getter, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected '=' for Objective-C getter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_expected_equal_for_setter, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected '=' for Objective-C setter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_expected_property_attr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unknown property attribute %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_expected_selector_for_getter_setter, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected selector for Objective-C %select{setter|getter}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_expected_type_parameter, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected type parameter name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_illegal_interface_qual, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"illegal interface qualifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_illegal_visibility_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"illegal visibility specification"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_missing_end, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing '@end'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_no_attributes_on_category, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"attributes may not be specified on a category"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_parameterized_implementation, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"@implementation cannot have type parameters"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_postfix_attribute, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"postfix attributes are not allowed on Objective-C directives"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_postfix_attribute_hint, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"postfix attributes are not allowed on Objective-C directives, place them in front of '%select{@interface|@protocol}0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_properties_require_objc2, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"properties are an Objective-C 2 feature"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_property_bitfield, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property name cannot be a bitfield"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_property_requires_field_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property requires fields to be named"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_type_args_after_protocols, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"protocol qualifiers must precede type arguments"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_unexpected_atend, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'@end' appears where closing brace '}' is expected"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_unexpected_attr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"prefix attribute must be followed by an interface or protocol"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_unknown_at, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected an Objective-C directive after '@'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objcbridge_related_expected_related_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a related ObjectiveC class name, e.g., 'NSColor'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objcbridge_related_selector_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a class method selector with single argument, e.g., 'colorWithCGColor:'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_decl_in_declare_simd, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function declaration is expected after 'declare simd' directive"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_declare_simd_inbranch_notinbranch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected '%0' clause, '%1' is specified already"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_declare_target_unexpected_clause, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected '%0' clause, only 'to' or 'link' clauses expected"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_expected_identifier_for_critical, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected identifier specifying the name of the 'omp critical' directive"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_expected_punc, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected ',' or ')' in '%0' %select{clause|directive}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_expected_reduction_identifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected identifier or one of the following operators: '+', '-', '*', '&', '|', '^', '&&', or '||'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_immediate_directive, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'#pragma omp %0' %select{|with '%2' clause }1cannot be an immediate substatement"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_map_type_missing, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing map type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_unexpected_clause, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected OpenMP clause '%0' in directive '#pragma omp %1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_unexpected_directive, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected OpenMP directive '#pragma omp %0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_unknown_directive, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected an OpenMP directive"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_unknown_map_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incorrect map type, expected one of 'to', 'from', 'tofrom', 'alloc', 'release', or 'delete'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_unknown_map_type_modifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incorrect map type modifier, expected 'always'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_logical_exclusive_or, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"^^ is a reserved operator in OpenCL"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_taking_function_address_parser, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"taking address of function is not allowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_unroll_hint_on_non_loop, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"OpenCL only supports 'opencl_unroll_hint' attribute on for, while, and do statements"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_out_of_line_constructor_template_id, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"out-of-line constructor for %0 cannot have template arguments"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_out_of_line_template_id_type_names_constructor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"qualified reference to %0 is a constructor name rather than a %select{template name|type}1 wherever a constructor can be declared"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_override_control_interface, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' keyword not permitted with interface types"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_paren_after_colon_colon, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected parenthesis after '::'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_paren_sizeof_parameter_pack, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing parentheses around the size of parameter pack %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pragma_comment_malformed, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"pragma comment requires parenthesized identifier and optional string"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pragma_comment_unknown_kind, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unknown kind of pragma comment"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pragma_detect_mismatch_malformed, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"pragma detect_mismatch is malformed; it requires two comma-separated string literals"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pragma_fp_contract_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'#pragma fp_contract' can only appear at file scope or at the start of a compound statement"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pragma_invalid_keyword, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid argument; expected 'enable'%select{|, 'full'}0%select{|, 'assume_safety'}1 or 'disable'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pragma_loop_invalid_option, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{invalid|missing}0 option%select{ %1|}0; expected vectorize, vectorize_width, interleave, interleave_count, unroll, unroll_count, or distribute"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pragma_loop_missing_argument, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing argument; expected %select{an integer value|'enable'%select{|, 'full'}1%select{|, 'assume_safety'}2 or 'disable'}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pragma_missing_argument, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing argument to '#pragma %0'%select{|; expected %2}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pragma_optimize_extra_argument, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected extra argument '%0' to '#pragma clang optimize'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pragma_optimize_invalid_argument, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected argument '%0' to '#pragma clang optimize'; expected 'on' or 'off'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pragma_pointers_to_members_unknown_kind, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected %0, expected to see one of %select{|'best_case', 'full_generality', }1'single_inheritance', 'multiple_inheritance', or 'virtual_inheritance'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_right_angle_bracket_equal_needs_space, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"a space is required between a right angle bracket and an equals sign (use '> =')"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_scoped_enum_missing_identifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"scoped enumeration requires a name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_single_decl_assign_in_for_range, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"range-based 'for' statement uses ':', not '='"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_sizeof_parameter_pack, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected parenthesized parameter pack name in 'sizeof...' expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_stmtexpr_file_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"statement expression not allowed at file scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_super_in_using_declaration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'__super' cannot be used with a using declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_synthesized_property_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a property name in @synthesize"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_defn_explicit_instantiation, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{function|class|variable}0 cannot be defined in an explicit instantiation; if this declaration is meant to be a %select{function|class|variable}0 definition, remove the 'template' keyword"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_spec_syntax_non_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"identifier followed by '<' indicates a class template specialization but %0 %select{does not refer to a template|refers to a function template|<unused>|refers to a variable template|<unused>}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_templated_invalid_declaration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"a static_assert declaration cannot be a template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_templated_using_directive_declaration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot template a using %select{directive|declaration}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_this_captured_by_reference, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'this' cannot be captured by reference"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_two_right_angle_brackets_need_space, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"a space is required between consecutive right angle brackets (use '> >')"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_type_safety_unknown_flag, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid comparison flag %0; use 'layout_compatible' or 'must_be_null'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_type_trait_arity, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type trait requires %0%select{| or more}1 argument%select{|s}2; have %3 argument%s3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typename_identifiers_only, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"typename is allowed for identifiers only"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typename_invalid_constexpr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type name does not allow constexpr specifier to be specified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typename_invalid_functionspec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type name does not allow function specifier to be specified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typename_invalid_storageclass, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type name does not allow storage class to be specified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typename_refers_to_non_type_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"typename specifier refers to a non-type template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typename_requires_specqual, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type name requires a specifier or qualifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unexpected_at, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected '@' in program"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unexpected_colon_in_nested_name_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected ':' in nested name specifier; did you mean '::'?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unexpected_namespace_attributes_alias, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"attributes cannot be specified on namespace alias"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unexpected_nested_namespace_attribute, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"attributes cannot be specified on a nested namespace definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unexpected_protocol_qualifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"@implementation declaration cannot be protocol qualified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unexpected_scope_on_base_decltype, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected namespace scope prior to decltype"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unexpected_semi, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected ';' before %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unexpected_token_in_nested_name_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' cannot be a part of nested name specifier; did you mean ':'?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unexpected_typedef_ident, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected type name %0: expected identifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unexpected_unqualified_id, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type-id cannot have a name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unknown_template_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unknown template name %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unspecified_size_with_static, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'static' may not be used without an array size"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unspecified_vla_size_with_static, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'static' may not be used with an unspecified variable length array size"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_using_attribute_ns_conflict, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"attribute with scope specifier cannot follow default scope specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_using_namespace_in_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'using namespace' is not allowed in classes"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_zero_version, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"version number must have non-zero major, minor, or sub-minor version"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_empty_enum, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of empty enum"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_property_ivar_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property synthesize requires specification of an ivar"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_abstract_pack_declarator_parens, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 20/*, SKIP_ARG*/, /*KEEP_STR*/"ISO C++11 requires a parenthesized pack declaration to have a name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_alias_declaration, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 69/*, SKIP_ARG*/, /*KEEP_STR*/"alias declarations are a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_alignof_expr, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 209/*, SKIP_ARG*/, /*KEEP_STR*/"%0 applied to an expression is a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_auto_storage_class, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 43/*, SKIP_ARG*/, /*KEEP_STR*/"'auto' storage class specifier is not permitted in C++11, and will not be supported in future releases"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_auto_type, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 212/*, SKIP_ARG*/, /*KEEP_STR*/"'__auto_type' is a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_c11_alignment, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 90/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is a C11-specific feature"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_c11_generic_selection, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 90/*, SKIP_ARG*/, /*KEEP_STR*/"generic selections are a C11-specific feature"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_c11_noreturn, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 90/*, SKIP_ARG*/, /*KEEP_STR*/"_Noreturn functions are a C11-specific feature"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_c11_static_assert, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 90/*, SKIP_ARG*/, /*KEEP_STR*/"_Static_assert is a C11-specific feature"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_c99_compound_literal, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 92/*, SKIP_ARG*/, /*KEEP_STR*/"compound literals are a C99-specific feature"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_c99_variable_decl_in_for_loop, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 92/*, SKIP_ARG*/, /*KEEP_STR*/"variable declaration in for loop is a C99-specific feature"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_c_enum_fixed_underlying_type, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 327/*, SKIP_ARG*/, /*KEEP_STR*/"enumeration types with a fixed underlying type are a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_constexpr_if, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 80/*, SKIP_ARG*/, /*KEEP_STR*/"constexpr if is a C++1z extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_cxx11_enum_fixed_underlying_type, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 69/*, SKIP_ARG*/, /*KEEP_STR*/"enumeration types with a fixed underlying type are a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_decltype_auto_type_specifier, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 77/*, SKIP_ARG*/, /*KEEP_STR*/"'decltype(auto)' type specifier is a C++14 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_defaulted_deleted_function, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 69/*, SKIP_ARG*/, /*KEEP_STR*/"%select{defaulted|deleted}0 function definitions are a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_ellipsis_exception_spec, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 323/*, SKIP_ARG*/, /*KEEP_STR*/"exception specification of '...' is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_empty_translation_unit, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 166/*, SKIP_ARG*/, /*KEEP_STR*/"ISO C requires a translation unit to contain at least one declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_enumerator_list_comma_c, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 92/*, SKIP_ARG*/, /*KEEP_STR*/"commas at the end of enumerator lists are a C99-specific feature"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_enumerator_list_comma_cxx, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 69/*, SKIP_ARG*/, /*KEEP_STR*/"commas at the end of enumerator lists are a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_expected_semi_decl_list, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected ';' at end of declaration list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_extern_template, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 69/*, SKIP_ARG*/, /*KEEP_STR*/"extern templates are a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_extra_semi, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 182/*, SKIP_ARG*/, /*KEEP_STR*/"extra ';' %select{outside of a function|inside a %1|inside instance variable list|after member function definition}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_extra_semi_cxx11, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 70/*, SKIP_ARG*/, /*KEEP_STR*/"extra ';' outside of a function is a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_fold_expression, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 80/*, SKIP_ARG*/, /*KEEP_STR*/"pack fold expression is a C++1z extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_for_range, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 69/*, SKIP_ARG*/, /*KEEP_STR*/"range-based for loop is a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_generalized_initializer_lists, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 69/*, SKIP_ARG*/, /*KEEP_STR*/"generalized initializer lists are a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_gnu_address_of_label, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 226/*, SKIP_ARG*/, /*KEEP_STR*/"use of GNU address-of-label extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_gnu_array_range, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 218/*, SKIP_ARG*/, /*KEEP_STR*/"use of GNU array range extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_gnu_case_range, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 214/*, SKIP_ARG*/, /*KEEP_STR*/"use of GNU case range extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_gnu_conditional_expr, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 217/*, SKIP_ARG*/, /*KEEP_STR*/"use of GNU ?: conditional expression extension, omitting middle operand"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_gnu_empty_initializer, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 219/*, SKIP_ARG*/, /*KEEP_STR*/"use of GNU empty initializer extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_gnu_indirect_goto, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 226/*, SKIP_ARG*/, /*KEEP_STR*/"use of GNU indirect-goto extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_gnu_missing_equal_designator, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 218/*, SKIP_ARG*/, /*KEEP_STR*/"use of GNU 'missing =' extension in designator"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_gnu_old_style_field_designator, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 218/*, SKIP_ARG*/, /*KEEP_STR*/"use of GNU old-style field designator extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_gnu_statement_expr, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 228/*, SKIP_ARG*/, /*KEEP_STR*/"use of GNU statement expression extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_ident_list_in_param, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 449/*, SKIP_ARG*/, /*KEEP_STR*/"type-less parameter names in function declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_inline_namespace, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 71/*, SKIP_ARG*/, /*KEEP_STR*/"inline namespaces are a C++11 feature"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_keyword_as_ident, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 292/*, SKIP_ARG*/, /*KEEP_STR*/"keyword '%0' will be made available as an identifier %select{here|for the remainder of the translation unit}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_ms_sealed_keyword, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 334/*, SKIP_ARG*/, /*KEEP_STR*/"'sealed' keyword is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_nested_namespace_definition, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 80/*, SKIP_ARG*/, /*KEEP_STR*/"nested namespace definition is a C++1z extension; define each namespace separately"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_nonstatic_member_init, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 69/*, SKIP_ARG*/, /*KEEP_STR*/"in-class initialization of non-static data member is a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_nullability, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 392/*, SKIP_ARG*/, /*KEEP_STR*/"type nullability specifier %0 is a Clang extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_override_control_keyword, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 69/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' keyword is a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_ref_qualifier, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 69/*, SKIP_ARG*/, /*KEEP_STR*/"reference qualifiers on functions are a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_rvalue_reference, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 69/*, SKIP_ARG*/, /*KEEP_STR*/"rvalue references are a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_scoped_enum, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 69/*, SKIP_ARG*/, /*KEEP_STR*/"scoped enumerations are a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_template_template_param_typename, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 80/*, SKIP_ARG*/, /*KEEP_STR*/"template template parameter using 'typename' is a C++1z extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_thread_before, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 449/*, SKIP_ARG*/, /*KEEP_STR*/"'__thread' before '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_using_attribute_ns, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 80/*, SKIP_ARG*/, /*KEEP_STR*/"default scope specifier for attributes is a C++1z extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_bracket_depth, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use -fbracket-depth=N to increase maximum nesting level"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_extra_comma_message_arg, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"comma separating Objective-C messaging arguments"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_force_empty_selector_name, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"or insert whitespace before ':' to use %0 as parameter name and have an empty entry in the selector"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_misplaced_ellipsis_vararg_add_comma, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"insert ',' before '...' to silence this warning"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_misplaced_ellipsis_vararg_add_ellipsis, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"place '...' %select{immediately before declared identifier|here}0 to declare a function parameter pack"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_misplaced_ellipsis_vararg_existing_ellipsis, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"preceding '...' declares a function parameter pack"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_missing_end_of_definition_before, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"still within definition of %q0 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_missing_selector_name, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"introduce a parameter name to make %0 part of the selector"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_objc_container_start, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{class|protocol|category|class extension|implementation|category implementation}0 started here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_previous_default_assoc, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous default generic association is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.w_asm_qualifier_ignored, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ignored %0 qualifier on asm"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_arc_bridge_cast_nonarc, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 8, 22/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' casts have no effect when not using ARC"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_no_decl, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 238/*, SKIP_ARG*/, /*KEEP_STR*/"attribute %0 ignored, because it is not attached to a declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_on_function_definition, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 206/*, SKIP_ARG*/, /*KEEP_STR*/"GCC does not allow %0 attribute in this position on a function definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_availability_and_unavailable, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 45/*, SKIP_ARG*/, /*KEEP_STR*/"'unavailable' availability overrides all other availability information"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cstyle_param, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 25, 133/*, SKIP_ARG*/, /*KEEP_STR*/"use of C-style parameters in Objective-C method declarations is deprecated"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx11_compat_decltype_auto_type_specifier, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 83/*, SKIP_ARG*/, /*KEEP_STR*/"'decltype(auto)' type specifier is incompatible with C++ standards before C++14"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx11_right_shift_in_template_arg, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 65/*, SKIP_ARG*/, /*KEEP_STR*/"use of right-shift operator ('>>') in template argument will require parentheses in C++11"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx14_compat_attribute, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 81/*, SKIP_ARG*/, /*KEEP_STR*/"attributes on %select{a namespace|an enumerator}0 declaration are incompatible with C++ standards before C++1z"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx14_compat_constexpr_if, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 81/*, SKIP_ARG*/, /*KEEP_STR*/"constexpr if is incompatible with C++ standards before C++1z"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx14_compat_fold_expression, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 81/*, SKIP_ARG*/, /*KEEP_STR*/"pack fold expression is incompatible with C++ standards before C++1z"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx14_compat_nested_namespace_definition, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 81/*, SKIP_ARG*/, /*KEEP_STR*/"nested namespace definition is incompatible with C++ standards before C++1z"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx14_compat_template_template_param_typename, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 81/*, SKIP_ARG*/, /*KEEP_STR*/"template template parameter using 'typename' is incompatible with C++ standards before C++1z"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx14_compat_using_attribute_ns, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 81/*, SKIP_ARG*/, /*KEEP_STR*/"default scope specifier for attributes is incompatible with C++ standards before C++1z"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_alias_declaration, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"alias declarations are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_alignas, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"'alignas' is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_alignof, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"alignof expressions are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_attribute, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"C++11 attribute syntax is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_decltype, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"'decltype' type specifier is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_defaulted_deleted_function, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"%select{defaulted|deleted}0 function definitions are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_enum_fixed_underlying_type, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"enumeration types with a fixed underlying type are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_enumerator_list_comma, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 88/*, SKIP_ARG*/, /*KEEP_STR*/"commas at the end of enumerator lists are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_extern_template, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 88/*, SKIP_ARG*/, /*KEEP_STR*/"extern templates are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_for_range, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"range-based for loop is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_generalized_initializer_lists, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"generalized initializer lists are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_inline_namespace, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"inline namespaces are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_lambda, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"lambda expressions are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_literal_operator, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"literal operators are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_noexcept_decl, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"noexcept specifications are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_noexcept_expr, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"noexcept expressions are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_nonstatic_member_init, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"in-class initialization of non-static data members is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_nullptr, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"'nullptr' is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_override_control_keyword, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' keyword is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_ref_qualifier, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"reference qualifiers on functions are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_rvalue_reference, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"rvalue references are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_scoped_enum, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"scoped enumerations are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_static_assert, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"static_assert declarations are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_top_level_semi, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 88/*, SKIP_ARG*/, /*KEEP_STR*/"extra ';' outside of a function is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_trailing_return_type, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"trailing return types are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_two_right_angle_brackets, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 85/*, SKIP_ARG*/, /*KEEP_STR*/"consecutive right angle brackets are incompatible with C++98 (use '> >')"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_dangling_else, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 121/*, SKIP_ARG*/, /*KEEP_STR*/"add explicit braces to avoid dangling else"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_expected_consistent_version_separator, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 45/*, SKIP_ARG*/, /*KEEP_STR*/"use same version number separators '_' or '.'; as in 'major[.minor[.subminor]]'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_expected_qualified_after_typename, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a qualified name after 'typename'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_extra_semi_after_mem_fn_def, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 182/*, SKIP_ARG*/, /*KEEP_STR*/"extra ';' after member function definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_file_asm_volatile, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"meaningless 'volatile' on asm outside function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_gcc_attribute_location, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 206/*, SKIP_ARG*/, /*KEEP_STR*/"GCC does not allow an attribute in this position on a function declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_microsoft_dependent_exists, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 324/*, SKIP_ARG*/, /*KEEP_STR*/"dependent %select{__if_not_exists|__if_exists}0 declarations are ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_microsoft_qualifiers_ignored, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 238/*, SKIP_ARG*/, /*KEEP_STR*/"qualifiers after comma in declarator list are ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_misplaced_ellipsis_vararg, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 16/*, SKIP_ARG*/, /*KEEP_STR*/"'...' in this location creates a C-style varargs function%select{, not a function parameter pack|}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_missing_dependent_template_keyword, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use 'template' keyword to treat '%0' as a dependent template name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_missing_selector_name, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 354/*, SKIP_ARG*/, /*KEEP_STR*/"%0 used as the name of the previous parameter rather than as part of the selector"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_protocol_qualifier_missing_id, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 0/*, SKIP_ARG*/, /*KEEP_STR*/"protocol has no object type specified; defaults to qualified 'id'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_omp_extra_tokens_at_eol, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 183/*, SKIP_ARG*/, /*KEEP_STR*/"extra tokens at the end of '#pragma omp %0' are ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_align_expected_equal, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"expected '=' following '#pragma %select{align|options align}0' - ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_align_invalid_option, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"invalid alignment option in '#pragma %select{align|options align}0' - ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_comment_ignored, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"'#pragma comment %0' ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_expected_action_or_r_paren, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"expected action or ')' in '#pragma %0' - ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_expected_colon, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"missing ':' after %0 - ignoring"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_expected_colon_r_paren, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"missing ':' or ')' after %0 - ignoring"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_expected_enable_disable, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"expected 'enable' or 'disable' - ignoring"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_expected_identifier, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"expected identifier in '#pragma %0' - ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_expected_init_seg, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"expected 'compiler', 'lib', 'user', or a string literal for the section name in '#pragma %0' - ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_expected_integer, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"expected integer between %0 and %1 inclusive in '#pragma %2' - ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_expected_lparen, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"missing '(' after '#pragma %0' - ignoring"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_expected_non_wide_string, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"expected non-wide string literal in '#pragma %0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_expected_punc, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"expected ')' or ',' in '#pragma %0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_expected_rparen, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"missing ')' after '#pragma %0' - ignoring"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_expected_section_label_or_name, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"expected a stack label or a string literal for the section name in '#pragma %0' - ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_expected_section_name, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"expected a string literal for the section name in '#pragma %0' - ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_expected_section_push_pop_or_name, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"expected push, pop or a string literal for the section name in '#pragma %0' - ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_extension_is_core, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 450/*, SKIP_ARG*/, /*KEEP_STR*/"OpenCL extension %0 is core feature or supported optional core feature - ignoring"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_extra_tokens_at_eol, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"extra tokens at end of '#pragma %0' - ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_init_seg_unsupported_target, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"'#pragma init_seg' is only supported when targeting a Microsoft environment"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_invalid_action, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"unknown action for '#pragma %0' - ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_invalid_specific_action, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"unknown action '%1' for '#pragma %0' - ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_ms_struct, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"incorrect use of '#pragma ms_struct on|off' - ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_omp_ignored, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 520/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected '#pragma omp ...' in program"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_options_expected_align, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"expected 'align' following '#pragma options' - ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_pack_malformed, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"expected integer or identifier in '#pragma pack' - ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_unknown_extension, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"unknown OpenCL extension %0 - ignoring"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_unroll_cuda_value_in_parens, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 119/*, SKIP_ARG*/, /*KEEP_STR*/"argument to '#pragma unroll' should not be in parentheses in CUDA C/C++"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_unsupported_action, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"known but unsupported action '%1' for '#pragma %0' - ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_unsupported_extension, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"unsupported OpenCL extension %0 - ignoring"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_unused_expected_var, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 240/*, SKIP_ARG*/, /*KEEP_STR*/"expected '#pragma unused' argument to be a variable name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_semicolon_before_method_body, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 497/*, SKIP_ARG*/, /*KEEP_STR*/"semicolon before method body is ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_static_inline_explicit_inst_ignored, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 4, 524/*, SKIP_ARG*/, /*KEEP_STR*/"ignoring '%select{static|inline}0' keyword on explicit template instantiation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_empty_symbolic_operand_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"empty symbolic operand name in inline assembly string"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_invalid_escape, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid %% escape in inline assembly string"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_invalid_operand_number, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid operand number in inline asm string"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_unknown_symbolic_operand_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unknown symbolic operand name in inline assembly string"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_unterminated_symbolic_operand_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unterminated symbolic operand name in inline assembly string"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_odr_different_num_template_parameters, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template parameter lists have a different number of parameters (%0 vs %1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_odr_different_template_parameter_kind, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template parameter has different kinds in different translation units"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_odr_field_type_inconsistent, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"field %0 declared with incompatible types in different translation units (%1 vs. %2)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_odr_function_type_inconsistent, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"external function %0 declared with incompatible types in different translation units (%1 vs. %2)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_odr_ivar_type_inconsistent, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"instance variable %0 declared with incompatible types in different translation units (%1 vs. %2)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_odr_non_type_parameter_type_inconsistent, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template parameter declared with incompatible types in different translation units (%0 vs. %1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_odr_objc_method_num_params_inconsistent, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{class|instance}0 method %1 has a different number of parameters in different translation units (%2 vs. %3)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_odr_objc_method_param_type_inconsistent, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{class|instance}0 method %1 has a parameter with a different types in different translation units (%2 vs. %3)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_odr_objc_method_result_type_inconsistent, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{class|instance}0 method %1 has incompatible result types in different translation units (%2 vs. %3)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_odr_objc_method_variadic_inconsistent, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{class|instance}0 method %1 is variadic in one translation unit and not variadic in another"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_odr_objc_property_impl_kind_inconsistent, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property %0 is implemented with %select{@synthesize|@dynamic}1 in one translation but %select{@dynamic|@synthesize}1 in another translation unit"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_odr_objc_property_type_inconsistent, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property %0 declared with incompatible types in different translation units (%1 vs. %2)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_odr_objc_superclass_inconsistent, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"class %0 has incompatible superclasses"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_odr_objc_synthesize_ivar_inconsistent, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property %0 is synthesized to different ivars in different translation units (%1 vs. %2)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_odr_parameter_pack_non_pack, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"parameter kind mismatch; parameter is %select{not a|a}0 parameter pack"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_odr_variable_multiple_def, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"external variable %0 defined in multiple translation units"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_odr_variable_type_inconsistent, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"external variable %0 declared with incompatible types in different translation units (%1 vs. %2)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unsupported_ast_node, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot import unsupported AST node %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_vftable_ambiguous_component, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 20, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ambiguous vftable component for %0 introduced via covariant thunks; this is an inherent limitation of the ABI"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_access_inactive_union_member, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{read of|assignment to|increment of|decrement of}0 member %1 of union with %select{active member %3|no active member}2 is not allowed in a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_access_null, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{read of|assignment to|increment of|decrement of}0 dereferenced null pointer is not allowed in a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_access_past_end, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{read of|assignment to|increment of|decrement of}0 dereferenced one-past-the-end pointer is not allowed in a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_access_static_temporary, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{read of|assignment to|increment of|decrement of}0 temporary is not allowed in a constant expression outside the expression that created the temporary"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_access_uninit, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{read of|assignment to|increment of|decrement of}0 object outside its lifetime is not allowed in a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_access_volatile_obj, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{read of|assignment to|increment of|decrement of}0 volatile %select{temporary|object %2|member %2}1 is not allowed in a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_access_volatile_type, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{read of|assignment to|increment of|decrement of}0 volatile-qualified type %1 is not allowed in a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_array_index, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot refer to element %0 of %select{array of %2 elements|non-array object}1 in a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_baa_insufficient_alignment, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{alignment of|offset of the aligned pointer from}0 the base pointee object (%1 %plural{1:byte|:bytes}1) is %select{less than|not a multiple of}0 the asserted %2 %plural{1:byte|:bytes}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_baa_value_insufficient_alignment, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"value of the aligned pointer (%0) is not a multiple of the asserted %1 %plural{1:byte|:bytes}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_call_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"in call to '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_call_limit_exceeded, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constexpr evaluation hit maximum call limit"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_calls_suppressed, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"(skipping %0 call%s0 in backtrace; use -fconstexpr-backtrace-limit=0 to see all)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_compare_virtual_mem_ptr, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"comparison of pointer to virtual member function %0 has unspecified value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_conditional_never_const, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"both arms of conditional operator are unable to produce a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_depth_limit_exceeded, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constexpr evaluation exceeded maximum depth of %0 calls"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_float_arithmetic, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"floating point arithmetic produces %select{an infinity|a NaN}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_inherited_ctor_call_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"in implicit initialization for inherited constructor of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_invalid_cast, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{reinterpret_cast|dynamic_cast|cast that performs the conversions of a reinterpret_cast|cast from %1}0 is not allowed in a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_invalid_downcast, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot cast object of dynamic type %0 to type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_invalid_function, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{non-constexpr|undefined}0 %select{function|constructor}1 %2 cannot be used in a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_invalid_inhctor, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constructor inherited from base class %0 cannot be used in a constant expression; derived class cannot be implicitly initialized"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_large_shift, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"shift count %0 >= width of type %1 (%2 bit%s2)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_lifetime_ended, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{read of|assignment to|increment of|decrement of}0 %select{temporary|variable}1 whose lifetime has ended"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_lshift_discards, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"signed left shift discards bits"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_lshift_of_negative, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"left shift of negative value %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_ltor_mutable, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"read of mutable member %0 is not allowed in a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_ltor_non_const_int, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"read of non-const variable %0 is not allowed in a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_ltor_non_constexpr, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"read of non-constexpr variable %0 is not allowed in a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_modify_const_type, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"modification of object of const-qualified type %0 is not allowed in a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_modify_global, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"a constant expression cannot modify an object that is visible outside that expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_negative_shift, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"negative shift count %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_no_return, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"control reached end of constexpr function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_non_global, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{pointer|reference}0 to %select{|subobject of }1%select{temporary|%3}2 is not a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_nonliteral, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-literal type %0 cannot be used in a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_null_subobject, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot %select{access base class of|access derived class of|access field of|access array element of|perform pointer arithmetic on|call member function on|access real component of|access imaginary component of}0 null pointer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_overflow, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"value %0 is outside the range of representable values of type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_past_end, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"dereferenced pointer past the end of %select{|subobject of }0%select{temporary|%2}1 is not a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_past_end_subobject, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot %select{access base class of|access derived class of|access field of|access array element of|ERROR|call member function on|access real component of|access imaginary component of}0 pointer past the end of object"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_pointer_comparison_base_classes, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"comparison of addresses of subobjects of different base classes has unspecified value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_pointer_comparison_base_field, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"comparison of address of base class subobject %0 of class %1 to field %2 has unspecified value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_pointer_comparison_differing_access, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"comparison of address of fields %0 and %2 of %4 with differing access specifiers (%1 vs %3) has unspecified value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_pointer_subtraction_not_same_array, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"subtracted pointers are not elements of the same array"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_pointer_subtraction_zero_size, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"subtraction of pointers to type %0 of zero size"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_step_limit_exceeded, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constexpr evaluation hit maximum step limit; possible infinite loop?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_stmt_expr_unsupported, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"this use of statement expressions is not supported in a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_temporary_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"temporary created here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_this, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{|implicit }0use of 'this' pointer is only allowed within the evaluation of a call to a 'constexpr' member function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_typeid_polymorphic, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"typeid applied to expression of polymorphic type %0 is not allowed in a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_uninitialized, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{|sub}0object of type %1 is not initialized"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_use_uninit_reference, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of reference outside its lifetime is not allowed in a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_var_init_non_constant, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initializer of %0 is not a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_virtual_base, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot construct object of type %0 with virtual base class in a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_virtual_call, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot evaluate virtual function call in a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_void_comparison, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"comparison between unequal pointers to void has unspecified result"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_covariant_thunk, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 20, 0/*, SKIP_ARG*/, /*KEEP_STR*/"covariant thunk required by %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_expr_divide_by_zero, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"division by zero"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_odr_base, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"class has base type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_odr_bit_field, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"bit-field %0 with type %1 and length %2 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_odr_defined_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"also defined here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_odr_enumerator, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"enumerator %0 with value %1 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_odr_field, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"field %0 has type %1 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_odr_missing_base, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no corresponding base class here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_odr_missing_enumerator, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no corresponding enumerator here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_odr_missing_field, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no corresponding field here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_odr_not_bit_field, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"field %0 is not a bit-field"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_odr_number_of_bases, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"class has %0 base %plural{1:class|:classes}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_odr_objc_method_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{class|instance}0 method %1 also declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_odr_objc_missing_superclass, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no corresponding superclass here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_odr_objc_property_impl_kind, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property %0 is implemented with %select{@synthesize|@dynamic}1 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_odr_objc_superclass, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"inherits from superclass %0 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_odr_objc_synthesize_ivar_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property is synthesized to ivar %0 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_odr_parameter_pack_non_pack, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{parameter|parameter pack}0 declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_odr_tag_kind_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is a %select{struct|interface|union|class|enum}1 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_odr_template_parameter_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template parameter declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_odr_template_parameter_list, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template parameter list also declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_odr_value_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declared here with type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_odr_virtual_base, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{non-virtual|virtual}0 derivation here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_integer_constant_overflow, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 279/*, SKIP_ARG*/, /*KEEP_STR*/"overflow in expression; result is %0 with type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_odr_tag_type_inconsistent, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 423/*, SKIP_ARG*/, /*KEEP_STR*/"type %0 has incompatible definitions in different translation units"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_add_deprecation_attr, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 0/*, SKIP_ARG*/, /*KEEP_STR*/"add a deprecation attribute to the declaration to silence this warning"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_doc_block_command_previous, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous command '%select{\\|@}0%1' here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_doc_block_command_previous_alias, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous command '%select{\\|@}0%1' (an alias of '\\%2') here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_doc_html_end_tag, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 0/*, SKIP_ARG*/, /*KEEP_STR*/"end tag"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_doc_html_tag_started_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 0/*, SKIP_ARG*/, /*KEEP_STR*/"HTML tag started here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_doc_param_name_suggestion, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 0/*, SKIP_ARG*/, /*KEEP_STR*/"did you mean '%0'?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_doc_param_previous, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous documentation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_doc_tparam_name_suggestion, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 0/*, SKIP_ARG*/, /*KEEP_STR*/"did you mean '%0'?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_doc_tparam_previous, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous documentation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_correct_comment_command_name, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 155/*, SKIP_ARG*/, /*KEEP_STR*/"unknown command tag name '%0'; did you mean '%1'?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_api_container_decl_mismatch, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 151/*, SKIP_ARG*/, /*KEEP_STR*/"'%select{\\|@}0%select{class|interface|protocol|struct|union}1' command should not be used in a comment attached to a non-%select{class|interface|protocol|struct|union}2 declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_block_command_duplicate, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 151/*, SKIP_ARG*/, /*KEEP_STR*/"duplicated command '%select{\\|@}0%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_block_command_empty_paragraph, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 151/*, SKIP_ARG*/, /*KEEP_STR*/"empty paragraph passed to '%select{\\|@}0%1' command"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_container_decl_mismatch, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 151/*, SKIP_ARG*/, /*KEEP_STR*/"'%select{\\|@}0%select{classdesign|coclass|dependency|helper|helperclass|helps|instancesize|ownership|performance|security|superclass}1' command should not be used in a comment attached to a non-container declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_deprecated_not_sync, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 152/*, SKIP_ARG*/, /*KEEP_STR*/"declaration is marked with '\\deprecated' command but does not have a deprecation attribute"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_function_method_decl_mismatch, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 151/*, SKIP_ARG*/, /*KEEP_STR*/"'%select{\\|@}0%select{function|functiongroup|method|methodgroup|callback}1' command should be used in a comment attached to %select{a function|a function|an Objective-C method|an Objective-C method|a pointer to function}2 declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_html_end_forbidden, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 153/*, SKIP_ARG*/, /*KEEP_STR*/"HTML end tag '%0' is forbidden"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_html_end_unbalanced, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 153/*, SKIP_ARG*/, /*KEEP_STR*/"HTML end tag does not match any start tag"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_html_missing_end_tag, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 153/*, SKIP_ARG*/, /*KEEP_STR*/"HTML tag '%0' requires an end tag"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_html_start_end_mismatch, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 153/*, SKIP_ARG*/, /*KEEP_STR*/"HTML start tag '%0' closed by '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_html_start_tag_expected_ident_or_greater, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 151/*, SKIP_ARG*/, /*KEEP_STR*/"HTML start tag prematurely ended, expected attribute name or '>'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_html_start_tag_expected_quoted_string, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 151/*, SKIP_ARG*/, /*KEEP_STR*/"expected quoted string after equals sign"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_param_duplicate, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 151/*, SKIP_ARG*/, /*KEEP_STR*/"parameter '%0' is already documented"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_param_invalid_direction, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 151/*, SKIP_ARG*/, /*KEEP_STR*/"unrecognized parameter passing direction, valid directions are '[in]', '[out]' and '[in,out]'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_param_not_attached_to_a_function_decl, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 151/*, SKIP_ARG*/, /*KEEP_STR*/"'%select{\\|@}0param' command used in a comment that is not attached to a function declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_param_not_found, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 151/*, SKIP_ARG*/, /*KEEP_STR*/"parameter '%0' not found in the function declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_param_spaces_in_direction, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 154/*, SKIP_ARG*/, /*KEEP_STR*/"whitespace is not allowed in parameter passing direction"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_returns_attached_to_a_void_function, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 151/*, SKIP_ARG*/, /*KEEP_STR*/"'%select{\\|@}0%1' command used in a comment that is attached to a %select{function returning void|constructor|destructor|method returning void}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_returns_not_attached_to_a_function_decl, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 151/*, SKIP_ARG*/, /*KEEP_STR*/"'%select{\\|@}0%1' command used in a comment that is not attached to a function or method declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_tparam_duplicate, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 151/*, SKIP_ARG*/, /*KEEP_STR*/"template parameter '%0' is already documented"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_tparam_not_attached_to_a_template_decl, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 151/*, SKIP_ARG*/, /*KEEP_STR*/"'%select{\\|@}0tparam' command used in a comment that is not attached to a template declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_doc_tparam_not_found, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 151/*, SKIP_ARG*/, /*KEEP_STR*/"template parameter '%0' not found in the template declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unknown_comment_command_name, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 155/*, SKIP_ARG*/, /*KEEP_STR*/"unknown command tag name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_verbatim_block_end_without_start, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 151/*, SKIP_ARG*/, /*KEEP_STR*/"'%select{\\|@}0%1' command does not terminate a verbatim text block")
};
}

//<editor-fold defaultstate="collapsed" desc="static Sema Start">  
@Converted(kind = Converted.Kind.AUTO, source = "${LLVM_SRC}/llvm/tools/clang/lib/Basic/DiagnosticIDs.cpp", line = 82,
 cmd = "jclank.sh -java-options=${SPUTNIK}/modules/org.clang.basic/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Basic/DiagnosticIDs.cpp -no-enum2int -filter=StaticDiagInfo")
//</editor-fold>
private static StaticDiagInfoRec [] init_DiagnosticSemaKinds_Start() {
//TO generate use only following include
//#include "clang/Basic/DiagnosticSemaKinds.inc"
// and then split by this and the following methods
return new /*const*/StaticDiagInfoRec [] {
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_64_bit_builtin_32_bit_tgt, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"this builtin is only available on 64-bit targets"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_abi_tag_on_redeclaration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot add 'abi_tag' attribute in a redeclaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_abstract_type_in_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{return|parameter|variable|field|instance variable|synthesized instance variable}0 type %1 is an abstract class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_access, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_AccessControl, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%1 is a %select{private|protected}0 member of %3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_access_base_ctor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_AccessControl, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{base class|inherited virtual base class}0 %1 has %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR*|}2constructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_access_ctor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_AccessControl, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"calling a %select{private|protected}0 constructor of class %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_access_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ISO C++11 does not allow access declarations; use using declarations instead"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_access_dtor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_AccessControl, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"calling a %select{private|protected}1 destructor of class %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_access_dtor_base, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_AccessControl, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"base class %0 has %select{private|protected}1 destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_access_dtor_exception, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_AccessControl, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"exception object of type %0 has %select{private|protected}1 destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_access_dtor_field, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_AccessControl, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"field of type %1 has %select{private|protected}2 destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_access_dtor_ivar, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_AccessControl, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"instance variable of type %0 has %select{private|protected}1 destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_access_dtor_temp, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_AccessControl, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"temporary of type %0 has %select{private|protected}1 destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_access_dtor_var, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_AccessControl, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable of type %1 has %select{private|protected}2 destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_access_dtor_vbase, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_AccessControl, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"inherited virtual base class %1 has %select{private|protected}2 destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_access_field_ctor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_AccessControl, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"field of type %0 has %select{private|protected}2 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}1constructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_access_friend_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_AccessControl, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"friend function %1 is a %select{private|protected}0 member of %3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_access_lambda_capture, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_AccessControl, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"capture of variable '%0' as type %1 calls %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}2constructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_addr_ovl_ambiguous, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address of overloaded function %0 is ambiguous"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_addr_ovl_no_qualifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot form member pointer of type %0 without '&' and class name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_addr_ovl_no_viable, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address of overloaded function %0 does not match required type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_addr_ovl_not_func_ptrref, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address of overloaded function %0 cannot be converted to type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_address_of_function_with_pass_object_size_params, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot take address of function %0 because parameter %1 has pass_object_size attribute"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_address_space_qualified_delete, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'delete' cannot delete objects of type %0 in address space '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_address_space_qualified_new, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'new' cannot allocate objects of type %0 in address space '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_addrof_function_disabled_by_enable_if_attr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot take address of function %0 becuase it has one or more non-tautological enable_if conditions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_alias_after_tentative, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"alias definition of %0 after tentative definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_alias_is_definition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"definition %0 cannot also be an %select{alias|ifunc}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_alias_not_supported_on_darwin, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"only weak aliases are supported on darwin"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_alias_not_supported_on_nvptx, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"CUDA does not support aliases"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_alias_template_expansion_into_fixed_list, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"pack expansion used as argument for non-pack parameter of alias template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_alias_template_extra_headers, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"extraneous template parameter list in alias template declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_alias_to_undefined, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{alias|ifunc}0 must point to a defined %select{variable or |}1function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_align_value_attribute_argument_not_int, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'align_value' attribute requires integer constant"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_alignas_attribute_wrong_decl_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute cannot be applied to a %select{function parameter|variable with 'register' storage class|'catch' variable|bit-field}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_alignas_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"redeclaration has different alignment requirement (%1 vs %0)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_alignas_missing_on_definition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 must be specified on definition if it is specified on any declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_alignas_underaligned, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"requested alignment is less than minimum alignment of %1 for type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_aligned_attribute_argument_not_int, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'aligned' attribute requires integer constant"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_alignment_dependent_typedef_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"requested alignment is dependent but declaration is not dependent"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_alignment_not_power_of_two, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"requested alignment is not a power of 2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_alignof_member_of_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid application of 'alignof' to a field of a class still being defined"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_allocation_of_abstract_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"allocating an object of abstract class type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_altivec_empty_initializer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ambiguous_base_to_derived_cast, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ambiguous cast from base %0 to derived %1:%2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ambiguous_delete_operand, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ambiguous conversion of delete expression of type %0 to a pointer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ambiguous_derived_to_base_conv, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ambiguous conversion from derived class %0 to base class %1:%2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ambiguous_inherited_constructor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constructor of %0 inherited from multiple base class subobjects"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ambiguous_member_multiple_subobject_types, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"member %0 found in multiple base classes of different types"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ambiguous_member_multiple_subobjects, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-static member %0 found in multiple base-class subobjects of type %1:%2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ambiguous_memptr_conv, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ambiguous conversion from pointer to member of %select{base|derived}0 class %1 to pointer to member of %select{derived|base}0 class %2:%3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ambiguous_reference, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reference to %0 is ambiguous"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ambiguous_suitable_delete_member_function_found, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"multiple suitable %0 functions in %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ambiguous_tag_hiding, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"a type named %0 is hidden by a declaration in a different namespace"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_anon_bitfield_has_negative_width, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"anonymous bit-field has negative width (%0)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_anon_bitfield_width_exceeds_type_width, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"width of anonymous bit-field (%0 bits) exceeds %select{width|size}1 of its type (%2 bit%s2)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_anonymous_property, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"anonymous property is not supported"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_anonymous_record_bad_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"anonymous %select{struct|union}0 can only contain non-static data members"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_anonymous_record_member_redecl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"member of anonymous %select{struct|union}0 redeclares %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_anonymous_record_nonpublic_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"anonymous %select{struct|union}0 cannot contain a %select{private|protected}1 data member"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_anonymous_record_with_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"functions cannot be declared in an anonymous %select{struct|union}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_anonymous_record_with_static, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"static members cannot be declared in an anonymous %select{struct|union}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_anonymous_record_with_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"types cannot be declared in an anonymous %select{struct|union}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_anonymous_struct_not_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"anonymous %select{structs|structs and classes}0 must be %select{struct or union|class}0 members"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_anonymous_union_not_static, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"anonymous unions at namespace or global scope must be declared 'static'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_anonymous_union_with_storage_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"anonymous union at class scope must not have a storage specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_anyx86_interrupt_attribute, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{x86|x86-64}0 'interrupt' attribute only applies to functions that have %select{a 'void' return type|only a pointer parameter optionally followed by an integer parameter|a pointer as the first parameter|a %2 type as the second parameter}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_anyx86_interrupt_called, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"interrupt service routine cannot be called directly"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_array_param_no_ownership, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"must explicitly describe intended ownership of an object array parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_assign_property_ownership, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 6, 0/*, SKIP_ARG*/, /*KEEP_STR*/"existing instance variable %1 for property %0 with %select{unsafe_unretained|assign}2 attribute must be __unsafe_unretained"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_atomic_ownership, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot perform atomic operation on a pointer to type %0: type has non-trivial ownership"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_autoreleasing_capture, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot capture __autoreleasing variable in a %select{block|lambda by copy}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_autoreleasing_var, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{__block variables|global variables|fields|instance variables}0 cannot have __autoreleasing ownership"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_bridge_cast_incompatible, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 7, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incompatible types casting %0 to %1 with a %select{__bridge|__bridge_transfer|__bridge_retained}2 cast"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_bridge_cast_wrong_kind, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 7, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cast of %select{Objective-C|block|C}0 pointer type %1 to %select{Objective-C|block|C}2 pointer type %3 cannot use %select{__bridge|__bridge_transfer|__bridge_retained}4"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_cast_requires_bridge, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 7, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{cast|implicit conversion}0 of %select{Objective-C|block|C}1 pointer type %2 to %select{Objective-C|block|C}3 pointer type %4 requires a bridged cast"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_collection_forward, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"collection expression type %0 is a forward declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_convesion_of_weak_unavailable, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 9, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{implicit conversion|cast}0 of weak-unavailable object of type %1 to a __weak object of type %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_gained_method_convention, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"method implementation does not match its declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_illegal_explicit_message, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 10, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ARC forbids explicit message send of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_illegal_method_def, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 10, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ARC forbids %select{implementation|synthesis}0 of %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_illegal_selector, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 10, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ARC forbids use of %0 in a @selector"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_inconsistent_property_ownership, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 6, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{|unsafe_unretained|strong|weak}1 property %0 may not also be declared %select{|__unsafe_unretained|__strong|__weak|__autoreleasing}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_indirect_no_ownership, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{pointer|reference}1 to non-const type %0 with no explicit ownership"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_init_method_unrelated_result_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"init methods must return a type related to the receiver type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_lost_method_convention, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"method was declared as %select{an 'alloc'|a 'copy'|an 'init'|a 'new'}0 method, but its implementation doesn't match because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_may_not_respond, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no visible @interface for %0 declares the selector %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_method_not_found, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no known %select{instance|class}1 method for selector %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_mismatched_cast, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 10, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{implicit conversion|cast}0 of %select{%2|a non-Objective-C pointer type %2|a block pointer|an Objective-C pointer|an indirect pointer to an Objective-C pointer}1 to %3 is disallowed with ARC"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_multiple_method_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"multiple methods named %0 found with mismatched result, parameter type or attributes"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_new_array_without_ownership, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'new' cannot allocate an array of %0 with no explicit ownership"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_nolifetime_behavior, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 10, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit ownership qualifier on cast result has no effect"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_nonlocal_writeback, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"passing address of %select{non-local|non-scalar}0 object to __autoreleasing parameter for write-back"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_objc_object_in_tag, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 10, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ARC forbids %select{Objective-C objects|blocks}0 in %select{struct|interface|union|<<ERROR>>|enum}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_objc_property_default_assign_on_object, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 10, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ARC forbids synthesizing a property of an Objective-C object with unspecified ownership or storage attribute"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_perform_selector_retains, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"performSelector names a selector which retains the object"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_pseudo_dtor_inconstant_quals, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"pseudo-destructor destroys object of type %0 with inconsistently-qualified type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_receiver_forward_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"receiver %0 for class message is a forward declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_receiver_forward_instance, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"receiver type %0 for instance message is a forward declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_strong_property_ownership, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 6, 0/*, SKIP_ARG*/, /*KEEP_STR*/"existing instance variable %1 for strong property %0 may not be %select{|__unsafe_unretained||__weak}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_thread_ownership, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"thread-local variable has non-trivial ownership: type is %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_typecheck_convert_incompatible_pointer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incompatible pointer types passing retainable parameter of type %0to a CF function expecting %1 type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_unsupported_weak_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 9, 0/*, SKIP_ARG*/, /*KEEP_STR*/"class is incompatible with __weak references"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_unused_init_message, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 10, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the result of a delegate init call must be immediately returned or assigned to 'self'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_weak_disabled, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 9, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot create __weak reference in file using manual reference counting"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_weak_no_runtime, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 9, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot create __weak reference because the current deployment target does not support weak references"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_weak_unavailable_assign, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 9, 0/*, SKIP_ARG*/, /*KEEP_STR*/"assignment of a weak-unavailable object to a __weak object"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arc_weak_unavailable_property, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 9, 0/*, SKIP_ARG*/, /*KEEP_STR*/"synthesizing __weak instance variable of type %0, which does not support weak references"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arg_with_address_space, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"parameter may not be qualified with an address space"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_argument_invalid_range, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"argument should be a value from %0 to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arithmetic_nonfragile_interface, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"arithmetic on pointer to interface %0, which is not a constant size for this architecture and platform"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_arm_invalid_specialreg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid special register for builtin"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_designator_empty_range, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array designator range [%0, %1] is empty"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_designator_negative, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array designator value '%0' is negative"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_designator_non_array, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array designator cannot initialize non-array type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_designator_too_large, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array designator index (%0) exceeds array bounds (%1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_init_different_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot initialize array %diff{of type $ with array of type $|with different type of array}0,1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_init_incompat_wide_string_into_wchar, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initializing wide char array with incompatible wide string literal"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_init_narrow_string_into_wchar, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initializing wide char array with non-wide string literal"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_init_non_constant_array, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot initialize array %diff{of type $ with non-constant array of type $|with different type of array}0,1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_init_not_init_list, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array initializer must be an initializer list%select{| or string literal| or wide string literal}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_init_wide_string_into_char, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initializing char array with wide string literal"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_new_needs_size, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array size must be specified in new expressions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_of_abstract_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array of abstract class type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_section_does_not_specify_contiguous_storage, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array section does not specify contiguous storage"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_size_ambiguous_conversion, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ambiguous conversion of array size expression of type %0 to an integral or enumeration type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_size_explicit_conversion, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array size expression of type %0 requires explicit conversion to type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_size_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array size expression has incomplete class type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_size_non_int, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"size of array has non-integer type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_size_not_integral, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array size expression must have integral or %select{|unscoped }0enumeration type, not %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_star_in_function_definition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable length array must be bound in function definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_star_outside_prototype, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"star modifier used outside of function prototype"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_static_not_outermost, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 used in non-outermost array type derivation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_static_outside_prototype, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 used in array declarator outside of function prototype"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_array_too_large, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array is too large (%0 elements)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_as_qualified_auto_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"automatic variable qualified with an address space"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_bad_register_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"bad type for named register variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_immediate_expected, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constraint '%0' expects an integer constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"asm operand has incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_input_duplicate_match, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"more than one input constraint matches the same output '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_invalid_global_var_reg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"register '%0' unsuitable for global register variables on this target"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_invalid_input_constraint, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid input constraint '%0' in asm"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_invalid_input_size, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid input size for constraint '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_invalid_lvalue_in_input, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid lvalue in asm input for constraint '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_invalid_lvalue_in_output, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid lvalue in asm output"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_invalid_output_constraint, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid output constraint '%0' in asm"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_invalid_output_size, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid output size for constraint '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_invalid_type_in_input, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid type %0 in asm input for constraint '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_naked_parm_ref, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"parameter references not allowed in naked functions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_naked_this_ref, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'this' pointer references not allowed in naked functions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_non_addr_value_in_memory_constraint, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reference to a %select{bit-field|vector element|global register variable}0 in asm %select{input|output}1 with a memory constraint '%2'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_register_size_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"size of register '%0' does not match variable size"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_tying_incompatible_types, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unsupported inline asm: input with type %diff{$ matching output with type $|}0,1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_unexpected_constraint_alternatives, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"asm constraint has an unexpected number of alternatives: %0 vs %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_asm_unknown_register_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unknown register name '%0' in asm"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_assoc_compatible_types, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type %0 in generic association compatible with previously specified type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_assoc_type_incomplete, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type %0 in generic association incomplete"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_assoc_type_nonobject, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type %0 in generic association not an object type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_assoc_type_variably_modified, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type %0 in generic association is a variably modified type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_atdef_nonfragile_interface, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of @defs is not supported on this architecture and platform"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_atomic_builtin_must_be_pointer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address argument to atomic builtin must be a pointer (%0 invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_atomic_builtin_must_be_pointer_intfltptr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address argument to atomic builtin must be a pointer to integer, floating-point or pointer (%0 invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_atomic_builtin_must_be_pointer_intptr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address argument to atomic builtin must be a pointer to integer or pointer (%0 invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_atomic_builtin_pointer_size, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address argument to atomic builtin must be a pointer to 1,2,4,8 or 16 byte type (%0 invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_atomic_exclusive_builtin_pointer_size, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address argument to load or store exclusive builtin must be a pointer to 1,2,4 or 8 byte type (%0 invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_atomic_init_constant, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"atomic variable can only be assigned to a compile time constant in the declaration statement in the program scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_atomic_load_store_uses_lib, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"atomic %select{load|store}0 requires runtime support that is not available for this target"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_atomic_op_bitwise_needs_atomic_int, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address argument to bitwise atomic operation must be a pointer to %select{|atomic }0integer (%1 invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_atomic_op_needs_atomic, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address argument to atomic operation must be a pointer to _Atomic type (%0 invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_atomic_op_needs_atomic_int_or_ptr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address argument to atomic operation must be a pointer to %select{|atomic }0integer or pointer (%1 invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_atomic_op_needs_non_const_atomic, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address argument to atomic operation must be a pointer to non-const _Atomic type (%0 invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_atomic_op_needs_non_const_pointer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address argument to atomic operation must be a pointer to non-const type (%0 invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_atomic_op_needs_trivial_copy, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address argument to atomic operation must be a pointer to a trivially-copyable type (%0 invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_atomic_property_nontrivial_assign_op, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"atomic property of reference type %0 cannot have non-trivial assignment operator"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_atomic_specifier_bad_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"_Atomic cannot be applied to %select{incomplete |array |function |reference |atomic |qualified |}0type %1 %select{||||||which is not trivially copyable}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attr_objc_ownership_redundant, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the type %0 is already explicitly ownership-qualified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attr_tlsmodel_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"tls_model must be \"global-dynamic\", \"local-dynamic\", \"initial-exec\" or \"local-exec\""), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_address_function_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function type may not be qualified with an address space"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_address_multiple_qualifiers, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"multiple address spaces specified for type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_address_space_negative, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address space is negative"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_address_space_too_high, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address space is larger than the maximum supported (%0)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_aligned_too_great, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"requested alignment must be %0 bytes or smaller"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_argument_is_zero, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute must be greater than 0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_argument_n_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute requires parameter %1 to be %select{int or bool|an integer constant|a string|an identifier}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_argument_out_of_bounds, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute parameter %1 is out of bounds"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_argument_out_of_range, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute parameter %1 is out of bounds: %plural{0:no parameters to index into|1:can only be 1, since there is one parameter|:must be between 1 and %2}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_argument_outof_range, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute requires integer constant between %1 and %2 inclusive"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_argument_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute requires %select{int or bool|an integer constant|a string|an identifier}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_argument_vec_type_hint, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid attribute argument %0 - expecting a vector or vectorizable scalar type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_bad_neon_vector_size, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"Neon vector size must be 64 or 128 bits"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_cleanup_arg_not_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'cleanup' argument %select{|%1 |%1 }0is not a %select{||single }0function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_cleanup_func_arg_incompatible_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'cleanup' function %0 parameter has %diff{type $ which is incompatible with type $|incompatible type}1,2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_cleanup_func_must_take_one_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'cleanup' function %0 must take 1 parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_dll_ambiguous_default_ctor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'__declspec(dllexport)' cannot be applied to more than one default constructor in %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_dll_deleted, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"attribute %q0 cannot be applied to a deleted function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_dll_lambda, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"lambda cannot be declared %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_dll_member_of_dll_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"attribute %q0 cannot be applied to member of %q1 class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_dll_not_extern, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%q0 must have external linkage when declared %q1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_dll_redeclaration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"redeclaration of %q0 cannot add %q1 attribute"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_dll_thread_local, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%q0 cannot be thread local when declared %q1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_dllimport_data_definition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"definition of dllimport data"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_dllimport_function_definition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"dllimport cannot be applied to non-inline function definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_dllimport_static_field_definition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"definition of dllimport static field not allowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_invalid_implicit_this_argument, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute is invalid for the implicit this argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_invalid_size, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"vector size not an integral multiple of component size"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_invalid_vector_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid vector element type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_multiple_objc_gc, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"multiple garbage collection attributes specified for type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_no_member_pointers, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute cannot be used with pointers to members"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_not_supported_in_lang, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute is not supported in %select{C|C++|Objective-C}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_only_once_per_parameter, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute can only be applied once per parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_overloadable_missing, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{overloaded function|redeclaration of}0 %1 must have the 'overloadable' attribute"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_overloadable_no_prototype, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'overloadable' function %0 must have a prototype"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_pointers_only, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute only applies to%select{| constant}1 pointer arguments"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_regparm_invalid_number, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'regparm' parameter must be between 0 and %0 inclusive"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_regparm_wrong_platform, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'regparm' is not valid on this platform"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_requires_opencl_version, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute requires OpenCL version %1%select{| or above}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_requires_positive_integer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute requires a positive integral compile time constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_section_invalid_for_target, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"argument to 'section' attribute is not valid for this target: %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_selectany_non_extern_data, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'selectany' can only be applied to data items with external linkage"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_sentinel_less_than_zero, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'sentinel' parameter 1 less than zero"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_sentinel_not_zero_or_one, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'sentinel' parameter 2 not 0 or 1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_size_too_large, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"vector size too large"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_too_few_arguments, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute takes at least %1 argument%s1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_too_many_arguments, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute takes no more than %1 argument%s1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_unsupported, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute is not supported for this target"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_uuid_malformed_guid, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"uuid attribute contains a malformed GUID"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_vecreturn_only_pod_record, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the vecreturn attribute can only be used on a POD (plain old data) class or structure (i.e. no virtual functions)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_vecreturn_only_vector_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the vecreturn attribute can only be used on a class or structure with one member, which must be a vector"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_weak_static, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"weak declaration cannot have internal linkage"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_weakref_not_global_context, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"weakref declaration of %0 must be in a global context"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_weakref_not_static, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"weakref declaration must have internal linkage"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_weakref_without_alias, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"weakref declaration of %0 must also have an alias attribute"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_wrong_decl_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute only applies to %select{functions|unions|variables and functions|functions, variables, and Objective-C interfaces|functions and methods|parameters|functions, methods and blocks|functions, methods, and classes|functions, methods, and parameters|classes|enums|variables|methods|fields and global variables|structs|parameters and typedefs|variables and typedefs|thread-local variables|variables and fields|variables, data members and tag types|types and namespaces|Objective-C interfaces|methods and properties|struct or union|struct, union or class|types|Objective-C instance methods|init methods of interface or class extension declarations|variables, functions and classes|functions, variables, classes, and Objective-C interfaces|Objective-C protocols|functions and global variables|structs, unions, and typedefs|structs and typedefs|interface or protocol declarations|kernel functions|non-K&R-style functions|variables, enums, fields and typedefs|functions, methods, enums, and classes|structs, classes, variables, functions, and inline namespaces|variables, functions, methods, types, enumerations, enumerators, labels, and non-static data members}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_wrong_number_arguments, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute %plural{0:takes no arguments|1:takes one argument|:requires exactly %1 arguments}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attribute_zero_size, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"zero vector size"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_attributes_are_not_compatible, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 and %1 attributes are not compatible"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_bitfield, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot pass bit-field as __auto_type initializer in C"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_different_deductions, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%select{auto|decltype(auto)|__auto_type}0' deduced as %1 in declaration of %2 and deduced as %3 in declaration of %4"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_fn_deduction_failure, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot deduce return type %0 from returned value of type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_fn_different_deductions, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%select{auto|decltype(auto)}0' in return type deduced as %1 here but deduced as %2 in earlier return statement"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_fn_no_return_but_not_auto, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot deduce return type %0 for function with no return statements"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_fn_return_init_list, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot deduce return type from initializer list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_fn_return_void_but_not_auto, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot deduce return type %0 from omitted return expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_fn_used_before_defined, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function %0 with deduced return type cannot be used before it is defined"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_fn_virtual, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function with deduced return type cannot be virtual"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_init_list_from_c, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot use __auto_type with initializer list in C"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_missing_trailing_return, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'auto' return without trailing return type; deduced return types are a C++14 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_new_ctor_multiple_expressions, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"new expression for type %0 contains multiple constructor arguments"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_new_deduction_failure, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"new expression for type %0 has incompatible constructor argument of type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_new_list_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"new expression for type %0 cannot use list-initialization"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_new_requires_ctor_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"new expression for type %0 requires a constructor argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_not_allowed, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{'auto'|'decltype(auto)'|'__auto_type'}0 not allowed %select{in function prototype|in non-static struct member|in struct member|in non-static union member|in union member|in non-static class member|in interface member|in exception declaration|in template parameter|in block literal|in template argument|in typedef|in type alias|in function return type|in conversion function type|here|in lambda parameter|in type allocated by 'new'|in K&R-style function parameter}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_not_allowed_var_inst, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'auto' variable template instantiation is not allowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_var_deduction_failure, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable %0 with type %1 has incompatible initializer of type %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_var_deduction_failure_from_init_list, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot deduce actual type for variable %0 with type %1 from initializer list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_var_init_multiple_expressions, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initializer for variable %0 with type %1 contains multiple expressions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_var_init_no_expression, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initializer for variable %0 with type %1 is empty"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_var_init_paren_braces, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot deduce type for variable %1 with type %2 from %select{parenthesized|nested}0 initializer list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_var_requires_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration of variable %0 with type %1 requires an initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_auto_variable_cannot_appear_in_own_initializer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable %0 declared with %select{'auto'|'decltype(auto)'|'__auto_type'}1 type cannot appear in its own initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_const_cast_dest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{const_cast||||C-style cast|functional-style cast}0 to %2, which is not a reference, pointer-to-object, or pointer-to-data-member"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_cstyle_cast_overload, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address of overloaded function %0 cannot be cast to type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_cxx_cast_bitfield, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from bit-field lvalue to reference type %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_cxx_cast_generic, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2 is not allowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_cxx_cast_member_pointer_size, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot %select{||reinterpret_cast||C-style cast|}0 from member pointer type %1 to member pointer type %2 of different size"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_cxx_cast_qualifiers_away, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2 casts away qualifiers"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_cxx_cast_rvalue, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from rvalue to reference type %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_cxx_cast_scalar_to_vector_different_size, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{||reinterpret_cast||C-style cast|}0 from scalar %1 to vector %2 of different size"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_cxx_cast_unrelated_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2, which are not related by inheritance, is not allowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_cxx_cast_vector_to_scalar_different_size, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{||reinterpret_cast||C-style cast|}0 from vector %1 to scalar %2 of different size"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_cxx_cast_vector_to_vector_different_size, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{||reinterpret_cast||C-style cast|}0 from vector %1 to vector %2 of different size"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_dynamic_cast_incomplete, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is an incomplete type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_dynamic_cast_not_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is not a class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_dynamic_cast_not_polymorphic, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is not polymorphic"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_dynamic_cast_not_ptr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is not a pointer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_dynamic_cast_not_ref_or_ptr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is not a reference or pointer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_kernel_param_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 cannot be used as the type of a kernel parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_lvalue_to_rvalue_cast, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot cast from lvalue of type %1 to rvalue reference type %2; types are not compatible"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_memptr_lhs, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"left hand operand to %0 must be a %select{|pointer to }1class compatible with the right hand operand, but is %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_memptr_rhs, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"right hand operand to %0 has non-pointer-to-member type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_new_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot allocate %select{function|reference}1 type %0 with new"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_parameter_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 cannot be the name of a parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_receiver_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"bad receiver type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_reinterpret_cast_overload, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reinterpret_cast cannot resolve overloaded function %0 to type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_reinterpret_cast_reference, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reinterpret_cast of a %0 to %1 needs its address, which is not allowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_reinterpret_cast_small_int, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cast from pointer to smaller type %2 loses information"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_static_cast_member_pointer_nonmp, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot cast from type %1 to member pointer type %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_static_cast_overload, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address of overloaded function %0 cannot be static_cast to type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_static_cast_pointer_nonpointer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot cast from type %1 to pointer type %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bad_variable_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 cannot be the name of a variable or data member"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_base_class_has_flexible_array_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"base class %0 has a flexible array member"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_base_clause_on_union, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unions cannot have base classes"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_base_init_direct_and_virtual, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"base class initializer %0 names both a direct base class and an inherited virtual base class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_base_init_does_not_name_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constructor initializer %0 does not name a class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_base_must_be_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"base specifier must name a class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_base_specifier_attribute, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute cannot be applied to a base specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bitfield_has_negative_width, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"bit-field %0 has negative width (%1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bitfield_has_zero_width, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"named bit-field %0 has zero width"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bitfield_width_exceeds_type_width, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"width of bit-field %0 (%1 bits) exceeds %select{width|size}2 of its type (%3 bit%s3)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_block_decl_ref_not_modifiable_lvalue, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable is not assignable (missing __block type specifier)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_block_extern_cant_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'extern' variable cannot have an initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_block_on_nonlocal, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"__block attribute not allowed, only allowed on local variables"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_block_on_vm, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"__block attribute not allowed on declaration with a variably modified type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_block_return_missing_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-void block should return a value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_block_returning_array_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"block cannot return %select{array|function}0 type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_blocks_disable, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"blocks support disabled - compile with -fblocks or %select{pick a deployment target that supports them|for OpenCL 2.0 or above}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_bound_member_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reference to non-static member function must be called%select{|; did you mean to call it with no arguments?}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_box_literal_collection, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{string|character|boolean|numeric}0 literal must be prefixed by '@' in a collection"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_break_not_in_loop_or_switch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'break' statement not in loop or switch statement"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_builtin_annotation_first_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"first argument to __builtin_annotation must be an integer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_builtin_annotation_second_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"second argument to __builtin_annotation must be a non-wide string constant"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_builtin_definition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"definition of builtin function %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_builtin_fn_use, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"builtin functions must be directly called"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_builtin_func_cast_more_than_one_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function-style cast to a builtin type can only take one argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_builtin_longjmp_invalid_val, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"argument to __builtin_longjmp must be a constant 1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_builtin_longjmp_unsupported, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"__builtin_longjmp is not supported for the current target"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_builtin_needs_feature, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 needs target feature %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_builtin_requires_language, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' is only available in %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_builtin_setjmp_unsupported, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"__builtin_setjmp is not supported for the current target"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_c99_array_usage_cxx, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature, not permitted in C++"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_call_function_incomplete_return, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"calling %0 with incomplete return type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_call_incomplete_argument, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"argument type %0 is incomplete"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_call_incomplete_return, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"calling function with incomplete return type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_cannot_form_pointer_to_member_of_reference_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot form a pointer-to-member to member %0 of reference type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_cannot_pass_objc_interface_to_vararg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot pass object with interface type %0 by value through variadic %select{function|block|method|constructor}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_cannot_pass_objc_interface_to_vararg_format, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot pass object with interface type %1 by value to variadic %select{function|block|method|constructor}2; expected type from format string was %3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_cannot_pass_to_vararg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_cannot_pass_to_vararg_format, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2; expected type from format string was %3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_capture_block_variable, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"__block variable %0 cannot be captured in a %select{lambda expression|captured statement}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_capture_default_non_local, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-local lambda expression cannot have a capture-default"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_capture_does_not_name_variable, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 in capture list does not name a variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_capture_more_than_once, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 can appear only once in a capture list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_capture_non_automatic_variable, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 cannot be captured because it does not have automatic storage duration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_capture_of_abstract_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"by-copy capture of value of abstract type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_capture_of_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"by-copy capture of variable %0 with incomplete type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_carries_dependency_missing_on_first_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{function|parameter}0 declared '[[carries_dependency]]' after its first declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_carries_dependency_param_not_function_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'[[carries_dependency]]' attribute only allowed on parameter in a function declaration or lambda"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_case_not_in_switch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'case' statement not in switch statement"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_cast_pointer_from_non_pointer_int, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"operand of type %0 cannot be cast to a pointer type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_cast_pointer_to_non_pointer_int, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"pointer cannot be cast to type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_cast_selector_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot type cast @selector expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_catch_incomplete, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot catch incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_catch_incomplete_ptr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot catch pointer to incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_catch_incomplete_ref, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot catch reference to incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_catch_param_not_objc_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"@catch parameter is not a pointer to an interface type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_catch_rvalue_ref, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot catch exceptions by rvalue reference"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_catch_variably_modified, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot catch variably modified type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_category_forward_interface, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot define %select{category|class extension}0 for undefined class %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_cconv_change, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function declared '%0' here was previously declared %select{'%2'|without calling convention}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_cconv_knr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function with no prototype cannot use the %0 calling convention"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_cconv_varargs, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variadic function cannot use %0 calling convention"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_cfstring_literal_not_string_constant, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"CFString literal is not a string constant"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_circular_inheritance, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"circular inheritance between %0 and %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_class_extension_after_impl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot declare class extension for %0 after class implementation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_class_marked_final_used_as_base, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"base %0 is marked '%select{final|sealed}1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_class_property_found, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property %0 is a class property; did you mean to access it with class '%1'?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_class_redeclared_with_different_access, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 redeclared with '%1' access"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_cocoa_naming_owned_rule, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property follows Cocoa naming convention for returning 'owned' objects"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_collection_expr_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the type %0 is not a pointer to a fast-enumerable object"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_complex_mode_vector_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type of machine mode does not support base vector types"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_compound_qualified_function_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{block pointer|pointer|reference}0 to function type %select{%2 |}1cannot have '%3' qualifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_concept_decl_invalid_specifiers, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{variable|function}0 concept cannot be declared '%select{thread_local|inline|friend|constexpr}1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_concept_decls_may_only_appear_in_namespace_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"concept declarations may only appear in namespace scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_concept_specialized, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{function|variable}0 concept cannot be %select{explicitly instantiated|explicitly specialized|partially specialized}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_concept_specified_specialization, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'concept' cannot be applied on an %select{explicit instantiation|explicit specialization|partial specialization}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_concept_wrong_decl_kind, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'concept' can only appear on the definition of a function template or variable template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_cond_voidptr_arc, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"operands to conditional of types%diff{ $ and $|}0,1 are incompatible in ARC mode"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_conditional_ambiguous, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conditional expression is ambiguous; %diff{$ can be converted to $ and vice versa|types can be convert to each other}0,1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_conditional_ambiguous_ovl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conditional expression is ambiguous; %diff{$ and $|types}0,1 can be converted to several common types"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_conditional_vector_element_size, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"vector condition type %0 and result type %1 do not have elements of the same size"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_conditional_vector_size, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"vector condition type %0 and result type %1 do not have the same number of elements"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_conditional_void_nonvoid, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{left|right}1 operand to ? is void, but %select{right|left}1 operand is of type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_config_scalar_return, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"CUDA special function 'cudaConfigureCall' must have scalar return type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_conflicting_aliasing_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting types for alias %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_conflicting_ivar_bitwidth, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"instance variable %0 has conflicting bit-field width"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_conflicting_ivar_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting instance variable names: %0 vs %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_conflicting_ivar_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"instance variable %0 has conflicting type%diff{: $ vs $|}1,2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_conflicting_overriding_cc_attributes, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"virtual function %0 has different calling convention attributes %diff{($) than the function it overrides (which has calling convention $)|than the function it overrides}1,2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_conflicting_super_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting super class name %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_conflicting_types, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting types for %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constant_integer_arg_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"argument to %0 must be a constant integer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_body_invalid_stmt, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"statement not allowed in constexpr %select{function|constructor}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_body_no_return, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no return statement in constexpr function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_ctor_missing_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constexpr constructor must initialize all members"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_dtor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"destructor cannot be marked constexpr"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_function_try_block, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function try block not allowed in constexpr %select{function|constructor}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_local_var_no_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variables defined in a constexpr %select{function|constructor}0 must be initialized"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_local_var_non_literal_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable of non-literal type %1 cannot be defined in a constexpr %select{function|constructor}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_local_var_static, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{static|thread_local}1 variable not permitted in a constexpr %select{function|constructor}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_main, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'main' is not allowed to be declared constexpr"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_no_declarators, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constexpr can only be used in variable and function declarations"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_non_literal_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constexpr %select{function|constructor}1's %ordinal0 parameter type %2 is not a literal type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_non_literal_return, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constexpr function's return type %0 is not a literal type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_redecl_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{non-constexpr declaration of %0 follows constexpr declaration|constexpr declaration of %0 follows non-constexpr declaration}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_return_missing_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-void constexpr function %0 should return a value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_static_mem_var_requires_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration of constexpr static data member %0 requires an initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_tag, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{class|struct|interface|union|enum}0 cannot be marked constexpr"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_union_ctor_no_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constexpr union constructor does not initialize any member"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_var_non_literal, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constexpr variable cannot have non-literal type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_var_requires_const_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constexpr variable %0 must be initialized by a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_virtual, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"virtual function cannot be constexpr"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_virtual_base, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constexpr %select{member function|constructor}0 not allowed in %select{struct|interface|class}1 with virtual base %plural{1:class|:classes}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constexpr_vla, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variably-modified type %0 cannot be used in a constexpr %select{function|constructor}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constructor_byvalue_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"copy constructor must pass its first argument by reference"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constructor_cannot_be, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constructor cannot be declared '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constructor_redeclared, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constructor cannot be redeclared"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_constructor_return_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constructor cannot have a return type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_continuation_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"class extension has no primary class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_continue_not_in_loop, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'continue' statement not in loop statement"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_conv_function_not_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conversion function must be a non-static member function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_conv_function_redeclared, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conversion function cannot be redeclared"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_conv_function_return_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conversion function cannot have a return type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_conv_function_to_array, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conversion function cannot convert to an array type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_conv_function_to_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conversion function cannot convert to a function type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_conv_function_variadic, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conversion function cannot be variadic"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_conv_function_with_complex_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot specify any part of a return type in the declaration of a conversion function%select{; put the complete type after 'operator'|; use a typedef to declare a conversion to %1|; use an alias template to declare a conversion to %1|}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_conv_function_with_params, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conversion function cannot have any parameters"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_convertvector_incompatible_vector, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"first two arguments to __builtin_convertvector must have the same number of elements"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_convertvector_non_vector, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"first argument to __builtin_convertvector must be a vector"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_convertvector_non_vector_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"second argument to __builtin_convertvector must be a vector type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_copy_capture_with_copy_default, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'&' must precede a capture when the capture default is '='"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_coroutine_constexpr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 13, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' cannot be used in a constexpr function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_coroutine_ctor_dtor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 13, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%1' cannot be used in a %select{constructor|destructor}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_coroutine_objc_method, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 13, 0/*, SKIP_ARG*/, /*KEEP_STR*/"Objective-C methods as coroutines are not yet supported"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_coroutine_outside_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 13, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' cannot be used outside a function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_coroutine_traits_missing_specialization, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 13, 0/*, SKIP_ARG*/, /*KEEP_STR*/"this function cannot be a coroutine: missing definition of specialization %q0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_coroutine_unevaluated_context, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 13, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' cannot be used in an unevaluated context"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_coroutine_varargs, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 13, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' cannot be used in a varargs function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_covariant_return_ambiguous_derived_to_base_conv, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"return type of virtual function %3 is not covariant with the return type of the function it overrides (ambiguous conversion from derived class %0 to base class %1:%2)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_covariant_return_inaccessible_base, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_AccessControl, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid covariant return for virtual function: %1 is a %select{private|protected}2 base class of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_covariant_return_incomplete, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is incomplete)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_covariant_return_not_derived, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is not derived from %2)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_covariant_return_type_class_type_more_qualified, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"return type of virtual function %0 is not covariant with the return type of the function it overrides (class type %1 is more qualified than class type %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_covariant_return_type_different_qualifications, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 has different qualifiers than %2)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ctor_dtor_returns_void, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{constructor|destructor}1 %0 must not return void expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_cuda_unattributed_constexpr_cannot_overload_device, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constexpr function '%0' without __host__ or __device__ attributes cannot overload __device__ function with same signature.  Add a __host__ attribute, or build with -fno-cuda-host-device-constexpr."), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_cyclic_alias, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{alias|ifunc}0 definition is part of a cycle"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_decimal_unsupported, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"GNU decimal type extension not supported"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_decl_attribute_invalid_on_stmt, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute cannot be applied to a statement"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_decl_negative_array_size, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' declared as an array with a negative size"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_declarator_need_ident, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declarator requires an identifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_declspec_thread_on_thread_variable, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'__declspec(thread)' applied to variable that already has a thread-local storage specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_decltype_auto_cannot_be_combined, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'decltype(auto)' cannot be combined with other type specifiers"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_decltype_auto_compound_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot form %select{pointer to|reference to|array of}0 'decltype(auto)'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_decltype_auto_function_declarator_not_declaration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'decltype(auto)' can only be used as a return type in a function declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_decltype_auto_initializer_list, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot deduce 'decltype(auto)' from initializer list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_decltype_in_declarator, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'decltype' cannot be used to name a declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_decrement_bool, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot decrement expression of type bool"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_deduced_non_type_template_arg_type_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"deduced non-type template argument does not have the same type as the its corresponding template parameter%diff{ ($ vs $)|}0,1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_deduced_return_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"deduced return types are a C++14 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_deep_exception_specs_differ, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"exception specifications of %select{return|argument}0 types differ"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_default_arg_in_partial_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"default template argument in a class template partial specialization"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_default_arg_makes_ctor_special, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"addition of default argument on redeclaration makes this constructor a %select{default|copy|move}0 constructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_default_init_const, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"default initialization of an object of const type %0%select{| without a user-provided default constructor}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_default_not_in_switch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'default' statement not in switch statement"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_defaulted_copy_assign_not_ref, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the parameter for an explicitly-defaulted copy assignment operator must be an lvalue reference type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_defaulted_special_member_copy_const_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the parameter for this explicitly-defaulted copy %select{constructor|assignment operator}0 is const, but a member or base requires it to be non-const"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_defaulted_special_member_move_const_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the parameter for an explicitly-defaulted move %select{constructor|assignment operator}0 may not be const"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_defaulted_special_member_params, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"an explicitly-defaulted %select{|copy |move }0constructor cannot have default arguments"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_defaulted_special_member_quals, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"an explicitly-defaulted %select{copy|move}0 assignment operator may not have 'const'%select{, 'constexpr'|}1 or 'volatile' qualifiers"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_defaulted_special_member_return_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicitly-defaulted %select{copy|move}0 assignment operator must return %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_defaulted_special_member_variadic, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"an explicitly-defaulted %select{|copy |move }0constructor cannot be variadic"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_defaulted_special_member_volatile_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the parameter for an explicitly-defaulted %select{<<ERROR>>|copy constructor|move constructor|copy assignment operator|move assignment operator|<<ERROR>>}0 may not be volatile"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_definition_of_explicitly_defaulted_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"definition of explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_definition_of_implicitly_declared_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"definition of implicitly declared %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_delegating_ctor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"delegating constructors are permitted only in C++11"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_delegating_initializer_alone, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"an initializer for a delegating constructor must appear alone"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_delete_explicit_conversion, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"converting delete expression from type %0 to type %1 invokes an explicit conversion function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_delete_incomplete_class_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"deleting incomplete class type %0; no conversions to pointer type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_delete_operand, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot delete expression of type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_deleted_decl_not_first, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"deleted definition must be first declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_deleted_function_use, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"attempt to use a deleted function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_deleted_inherited_ctor_use, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constructor inherited by %0 from base class %1 is implicitly deleted"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_deleted_main, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'main' is not allowed to be deleted"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_deleted_override, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"deleted function %0 cannot override a non-deleted function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_dependent_nested_name_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"nested name specifier for a declaration cannot depend on a template parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_dependent_non_type_arg_in_partial_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument depends on a template parameter of the partial specialization"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_dependent_tag_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{declaration|definition}0 of %select{struct|interface|union|class|enum}1 in a dependent scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_dependent_typed_non_type_arg_in_partial_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument specializes a template parameter with dependent type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_dereference_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"dereference of pointer to incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_designator_for_scalar_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"designator in initializer for scalar type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_designator_into_flexible_array_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"designator into flexible array member subobject"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_destructor_cannot_be, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"destructor cannot be declared '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_destructor_class_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected the class name after '~' to name a destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_destructor_expr_type_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"destructor type %0 in object destruction expression does not match the type %1 of the object being destroyed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_destructor_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected the class name after '~' to name the enclosing class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_destructor_not_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"destructor must be a non-static member function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_destructor_redeclared, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"destructor cannot be redeclared"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_destructor_return_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"destructor cannot have a return type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_destructor_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"destructor cannot be declared as a template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_destructor_typedef_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"destructor cannot be declared using a %select{typedef|type alias}1 %0 of the class name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_destructor_variadic, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"destructor cannot be variadic"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_destructor_with_params, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"destructor cannot have any parameters"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_device_static_local_var, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"Within a __device__/__global__ function, only __shared__ variables may be marked \"static\""), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_different_asm_label, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting asm label"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_different_language_linkage, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration of %0 has a different language linkage"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_different_pass_object_size_params, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting pass_object_size attributes on parameters"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_different_return_type_for_overriding_virtual_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"virtual function %0 has a different return type %diff{($) than the function it overrides (which has return type $)|than the function it overrides}1,2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_dimension_expr_not_constant_integer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"dimension expression does not evaluate to a constant unsigned int"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_distant_exception_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"exception specifications are not allowed beyond a single level of indirection"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_downcast_from_inaccessible_base, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot cast %select{private|protected}2 base class %1 to %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_dtor_expr_without_call, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reference to %select{destructor|pseudo-destructor}0 must be called%select{|; did you mean to call it with no arguments?}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_dup_implementation_category, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reimplementation of category %1 for class %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_dup_implementation_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reimplementation of class %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_duplicate_base_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"base class %0 specified more than once as a direct base class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_duplicate_case, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"duplicate case value '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_duplicate_case_differing_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"duplicate case value: '%0' and '%1' both equal '%2'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_duplicate_class_def, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"duplicate interface definition for class %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_duplicate_ivar_declaration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"instance variable is already declared"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_duplicate_mangled_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"definition with same mangled name as another definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_duplicate_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"duplicate member %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_duplicate_method_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"duplicate declaration of method %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_duplicate_property, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property has a previous declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_dynamic_var_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"dynamic initialization is not supported for __device__, __constant__, and __shared__ variables."), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_early_catch_all, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"catch-all handler must come last"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ellipsis_first_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ISO C requires a named parameter before '...'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ellipsis_in_declarator_not_parameter, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"only function and template parameters can be parameter packs"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_empty_scalar_initializer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"scalar initializer cannot be empty"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_enable_if_never_constant_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'enable_if' attribute expression never produces a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_enum_class_reference, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reference to %select{|scoped }0enumeration must use 'enum' not 'enum class'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_enum_invalid_underlying, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-integral type %0 is an invalid underlying type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_enum_mode_vector_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"mode %0 is not supported for enumeration types"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_enum_redeclare_fixed_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"enumeration previously declared with %select{non|}0fixed underlying type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_enum_redeclare_scoped_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"enumeration previously declared as %select{un|}0scoped"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_enum_redeclare_type_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"enumeration redeclared with different underlying type %0 (was %1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_enumerator_does_not_exist, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"enumerator %0 does not exist in instantiation of %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_enumerator_too_large, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"enumerator value is not representable in the underlying type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_enumerator_wrapped, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"enumerator value %0 is not representable in the underlying type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_event_t_addr_space_qual, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the event_t type can only be used with __private address space qualifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_event_t_global_var, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the event_t type cannot be used to declare a program scope variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_exception_spec_in_typedef, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"exception specifications are not allowed in %select{typedefs|type aliases}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_exception_spec_not_parsed, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"exception specification is not available until end of class definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_exceptions_disabled, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot use '%0' with exceptions disabled"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_excess_initializers, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"excess elements in %select{array|vector|scalar|union|struct}0 initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_excess_initializers_in_char_array_initializer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"excess elements in char array initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_class_or_namespace, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is not a class%select{ or namespace|, namespace, or enumeration}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expected_kernel_void_return_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"kernel must have void return type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_ambiguous, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"partial ordering for explicit instantiation of %0 is ambiguous"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_constexpr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation cannot be 'constexpr'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_data_member_not_instantiated, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation refers to static data member %q0 that is not an instantiation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_declaration_after_definition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation declaration (with 'extern') follows explicit instantiation definition (without 'extern')"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_duplicate, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"duplicate explicit instantiation of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_in_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation of %0 in class scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_inline, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation cannot be 'inline'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_member_function_not_instantiated, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation refers to member function %q0 that is not an instantiation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_must_be_global, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation of %0 must occur at global scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_nontemplate_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation of non-templated type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_not_known, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation of %0 does not refer to a function template, variable template, member function, member class, or static data member"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_of_typedef, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation of typedef %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_out_of_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation of %0 not in a namespace enclosing %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_requires_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation declaration requires a name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_storage_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation cannot have a storage class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_undefined_func_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation of undefined function template %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_undefined_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation of undefined %select{member class|member function|static data member}0 %1 of class template %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_undefined_var_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation of undefined variable template %q0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_unqualified_wrong_namespace, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation of %q0 must occur in namespace %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_instantiation_without_template_id, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation of %q0 must specify a template argument list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_non_ctor_or_conv_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'explicit' can only be applied to a constructor or conversion function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_non_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'explicit' can only appear on non-static member functions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_out_of_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'explicit' can only be specified inside the class definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_explicit_specialization_inconsistent_storage_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit specialization has extraneous, inconsistent storage class '%select{none|extern|static|__private_extern__|auto|register}0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expr_not_cce, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{case value|enumerator value|non-type template argument|array size|constexpr if condition}0 is not a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expr_not_ice, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expression is not an %select{integer|integral}0 constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_expr_not_string_literal, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expression is not a string literal"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ext_vector_component_exceeds_length, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"vector component access exceeds type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ext_vector_component_name_illegal, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"illegal vector component name '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_extern_c_global_conflict, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration of %1 %select{with C language linkage|in global scope}0 conflicts with declaration %select{in global scope|with C language linkage}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_extern_non_extern, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"extern declaration of %0 follows non-extern declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_falloff_nonvoid_block, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"control reaches end of non-void block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fallthrough_attr_invalid_placement, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"fallthrough annotation does not directly precede switch label"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fallthrough_attr_outside_switch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"fallthrough annotation is outside switch statement"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fallthrough_attr_wrong_target, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute is only allowed on empty statements"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_field_declared_as_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"field %0 declared as a function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_field_designator_non_aggr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"field designator cannot initialize a %select{non-struct, non-union|non-class}0 type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_field_designator_nonfield, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"field designator %0 does not refer to a non-static data member"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_field_designator_unknown, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"field designator %0 does not refer to any field in type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_field_designator_unknown_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"field designator %0 does not refer to any field in type %1; did you mean %2?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_field_incomplete, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"field has incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_field_instantiates_to_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"data member instantiated with function type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_field_with_address_space, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"field may not be qualified with an address space"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_filter_expression_integral, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"filter expression type should be an integral value not %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_final_function_overridden, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration of %0 overrides a '%select{final|sealed}1' function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_first_argument_to_cwsc_block_call, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"first argument to __builtin_call_with_static_chain must not be a block call"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_first_argument_to_cwsc_builtin_call, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"first argument to __builtin_call_with_static_chain must not be a builtin call"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_first_argument_to_cwsc_not_call, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"first argument to __builtin_call_with_static_chain must be a non-member call expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_first_argument_to_cwsc_pdtor_call, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"first argument to __builtin_call_with_static_chain must not be a pseudo-destructor call"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_first_argument_to_va_arg_not_of_type_va_list, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"first argument to 'va_arg' is of type %0 and not 'va_list'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_flexible_array_empty_aggregate, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"flexible array member %0 not allowed in otherwise empty %select{struct|interface|union|class|enum}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_flexible_array_has_nontrivial_dtor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"flexible array member %0 of type %1 with non-trivial destruction"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_flexible_array_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initialization of flexible array member is not allowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_flexible_array_init_needs_braces, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"flexible array requires brace-enclosed initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_flexible_array_union, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"flexible array member %0 in a union is not allowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_flexible_array_virtual_base, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"flexible array member %0 not allowed in %select{struct|interface|union|class|enum}1 which has a virtual base class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fold_expression_bad_operand, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expression not permitted as operand of fold expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fold_expression_empty, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unary fold expression has empty expansion for operator '%0' with no fallback value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_fold_expression_packs_both_sides, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"binary fold expression has unexpanded parameter packs in both operands"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_for_range_decl_must_be_var, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"for range declaration must declare a variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_for_range_deduction_failure, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot use type %0 as a range"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_for_range_dereference, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid range expression of type %0; did you mean to dereference it with '*'?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_for_range_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot use incomplete type %0 as a range"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_for_range_invalid, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid range expression of type %0; no viable '%select{begin|end}1' function available"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_for_range_iter_deduction_failure, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot use type %0 as an iterator"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_for_range_member_begin_end_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"range type %0 has '%select{begin|end}1' member but no '%select{end|begin}1' member"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_for_range_storage_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"loop variable %0 may not be declared %select{'extern'|'static'|'__private_extern__'|'auto'|'register'|'constexpr'}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_format_attribute_implicit_this_format_string, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"format attribute cannot specify the implicit this argument as the format string"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_format_attribute_not, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"format argument not %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_format_attribute_requires_variadic, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"format attribute requires variadic function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_format_attribute_result_not, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function does not return %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_format_strftime_third_parameter, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"strftime format attribute requires 3rd parameter to be 0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_forward_ref_enum, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ISO C++ forbids forward references to 'enum' types"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_forward_superclass, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"attempting to use the forward class %0 as superclass of %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_friend_decl_does_not_match, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"friend declaration of %0 does not match any declaration in %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_friend_decl_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' is invalid in friend declarations"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_friend_decl_with_def_arg_must_be_def, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"friend declaration specifying a default argument must be a definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_friend_decl_with_def_arg_redeclared, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"friend declaration specifying a default argument must be the only declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_friend_def_in_local_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"friend function cannot be defined in a local class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_friend_is_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"friends cannot be members of the declaring class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_friend_not_first_in_declaration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'friend' must appear first in a non-function declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_func_def_incomplete_result, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incomplete result type %0 in function definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_func_returning_array_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function cannot return %select{array|function}0 type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_func_returning_qualified_void, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 470/*, SKIP_ARG*/, /*KEEP_STR*/"function cannot return qualified void type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_function_concept_bool_ret, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declared return type of function concept must be 'bool'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_function_concept_exception_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function concept cannot have exception specification"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_function_concept_not_defined, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function concept declaration must be a definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_function_concept_with_params, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function concept cannot have any parameters"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_function_marked_override_not_overriding, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 marked 'override' but does not override any member functions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_function_needs_feature, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"always_inline function %1 requires target feature '%2', but would be inlined into function %0 that is compiled without support for '%2'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_function_parameter_pack_without_parameter_packs, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type %0 of function parameter pack does not contain any unexpanded parameter packs"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_function_specialization_in_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot specialize a function %0 within class scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_function_template_partial_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function template partial specialization is not allowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_function_template_spec_ambiguous, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function template specialization %0 ambiguously refers to more than one function template; explicitly specify%select{| additional}1 template arguments to identify a particular function template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_function_template_spec_no_match, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no function template matches function template specialization %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_gc_weak_property_strong_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"weak attribute declared on a __strong type property in GC mode"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_generic_sel_multi_match, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"controlling expression type %0 compatible with %1 generic association types"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_generic_sel_no_match, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"controlling expression type %0 not compatible with any generic association type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_getter_not_found, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no getter method for read from property"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_global_call_not_config, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"call to global function %0 not configured"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_goto_into_protected_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot jump from this goto statement to its label"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_goto_ms_asm_label, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot jump from this goto statement to label %0 inside an inline assembly block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_half_const_requires_fp16, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"half precision constant requires cl_khr_fp16"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_iboutletcollection_builtintype, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type argument of iboutletcollection attribute cannot be a builtin type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_iboutletcollection_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid type %0 as argument of iboutletcollection attribute"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ice_ambiguous_conversion, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ambiguous conversion from type %0 to an integral or unscoped enumeration type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ice_explicit_conversion, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"integral constant expression requires explicit conversion from %0 to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ice_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"integral constant expression has incomplete class type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ice_not_integral, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"integral constant expression must have integral or unscoped enumeration type, not %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ice_too_large, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"integer constant expression evaluates to value %0 that cannot be represented in a %1-bit %select{signed|unsigned}2 integer type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ident_in_dtor_not_a_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"identifier %0 in object destruction expression does not name a type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ident_list_in_fn_declaration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"a parameter list without types is only allowed in a function definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ifunc_resolver_params, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ifunc resolver function must have no parameters"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ifunc_resolver_return, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ifunc resolver function must return a pointer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_illegal_container_subscripting_op, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"illegal operation on Objective-C container subscripting"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_illegal_decl_array_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array has incomplete element type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_illegal_decl_array_of_auto, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' declared as array of %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_illegal_decl_array_of_functions, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' declared as array of functions of type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_illegal_decl_array_of_references, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' declared as array of references of type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_illegal_decl_mempointer_in_nonclass, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' does not point into a class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_illegal_decl_mempointer_to_reference, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' declared as a member pointer to a reference of type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_illegal_decl_mempointer_to_void, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' declared as a member pointer to void"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_illegal_decl_pointer_to_reference, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' declared as a pointer to a reference of type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_illegal_initializer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"illegal initializer (only variables can be initialized)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_illegal_initializer_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"illegal initializer type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_illegal_message_expr_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"Objective-C message has incomplete result type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_illegal_qualifiers_on_catch_parm, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"illegal qualifiers on @catch parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_illegal_union_or_anon_struct_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{anonymous struct|union}0 member %1 has a non-trivial %select{constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_imaginary_not_supported, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"imaginary types are not supported"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_implicit_empty_initializer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initializer for aggregate with no elements requires explicit braces"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_implicit_instantiate_member_undefined, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"implicit instantiation of undefined member %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_implicit_object_parameter_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot initialize object parameter of type %0 with an expression of type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_implied_std_coroutine_traits_not_found, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 13, 0/*, SKIP_ARG*/, /*KEEP_STR*/"you need to include <coroutine> before defining a coroutine"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_implied_std_coroutine_traits_promise_type_not_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 13, 0/*, SKIP_ARG*/, /*KEEP_STR*/"this function cannot be a coroutine: %0 is not a class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_implied_std_coroutine_traits_promise_type_not_found, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 13, 0/*, SKIP_ARG*/, /*KEEP_STR*/"this function cannot be a coroutine: %q0 has no member named 'promise_type'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_implied_std_initializer_list_not_found, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot deduce type of initializer list because std::initializer_list was not found; include <initializer_list>"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_in_class_initializer_bad_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"static data member of type %0 must be initialized out of line"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_in_class_initializer_literal_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"in-class initializer for static data member of type %0 requires 'constexpr' specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_in_class_initializer_non_const, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-const static data member must be initialized out of line"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_in_class_initializer_non_constant, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"in-class initializer for static data member is not a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_in_class_initializer_not_yet_parsed, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot use defaulted default constructor of %0 within the class outside of member functions because %1 has an initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_in_class_initializer_not_yet_parsed_outer_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot use defaulted default constructor of %0 within %1 outside of member functions because %2 has an initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_in_class_initializer_volatile, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"static const volatile data member must be initialized out of line"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_incompatible_exception_specs, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"target exception specification is not superset of source"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_incomplete_base_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"base class has incomplete type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_incomplete_in_exception_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{|pointer to |reference to }0incomplete type %1 is not allowed in exception specification"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_incomplete_member_access, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"member access into incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_incomplete_nested_name_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incomplete type %0 named in nested name specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_incomplete_object_call, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incomplete type in call to object of type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_incomplete_receiver_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incomplete receiver type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_incomplete_synthesized_property, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot synthesize property %0 with incomplete type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incomplete type %0 where a complete type is required"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_incomplete_type_objc_at_encode, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'@encode' of incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_incomplete_type_used_in_type_trait_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incomplete type %0 used in type trait expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_incomplete_typeid, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'typeid' of incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_inconsistent_ivar_count, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"inconsistent number of instance variables specified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_incorrect_defaulted_constexpr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"defaulted definition of %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator}0 is not constexpr"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_incorrect_defaulted_exception_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"exception specification of explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 does not match the calculated one"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_incorrect_number_of_vector_initializers, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"number of elements must be either one or match the size of the vector"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_increment_decrement_enum, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot %select{decrement|increment}0 expression of enum type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_indirect_goto_in_protected_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot jump from this indirect goto statement to one of its possible targets"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_indirect_goto_without_addrlabel, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"indirect goto in function with no address-of-label expressions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_init_capture_deduction_failure, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot deduce type for lambda capture %0 from initializer of type %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_init_capture_deduction_failure_from_init_list, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot deduce type for lambda capture %0 from initializer list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_init_capture_multiple_expressions, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initializer for lambda capture %0 contains multiple expressions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_init_capture_no_expression, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initializer missing for lambda capture %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_init_capture_paren_braces, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot deduce type for lambda capture %1 from %select{parenthesized|nested}0 initializer list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_init_conversion_failed, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot initialize %select{a variable|a parameter|return object|an exception object|a member subobject|an array element|a new value|a value|a base class|a constructor delegation|a vector element|a block element|a complex element|a lambda capture|a compound literal initializer|a related result|a parameter of CF audited function}0 %diff{of type $ with an %select{rvalue|lvalue}2 of type $|with an %select{rvalue|lvalue}2 of incompatible type}1,3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}5 vs %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}6)}4"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_init_element_not_constant, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initializer element is not a compile-time constant"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_init_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initialization of incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_init_list_bad_dest_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{|non-aggregate }0type %1 cannot be initialized with an initializer list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_init_method_bad_return_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"init methods must return an object pointer type, not %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_init_non_aggr_init_list, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initialization of non-aggregate type %0 with an initializer list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_init_objc_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot initialize Objective-C class type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_init_priority_object_attr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"can only use 'init_priority' attribute on file-scope definitions of objects of class type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_init_reference_member_uninitialized, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reference member of type %0 uninitialized"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_initializer_string_for_char_array_too_long, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initializer-string for char array is too long"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_inline_decl_follows_def, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"inline declaration of %0 follows non-inline definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_inline_declaration_block_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"inline declaration of %0 not allowed in block scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_inline_main, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'main' is not allowed to be declared inline"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_inline_namespace_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{|non-}0inline namespace cannot be reopened as %select{non-|}0inline"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_inline_non_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'inline' can only appear on functions%select{| and non-local variables}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_int_to_block_pointer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid block pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_integer_sequence_integral_element_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"integer sequences must have integral element type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_integer_sequence_negative_length, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"integer sequences must have non-negative sequence length"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_internal_linkage_redeclaration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'internal_linkage' attribute does not appear on the first declaration of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_introducing_special_friend, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"must use a qualified name when declaring a %select{constructor|destructor|conversion operator}0 as a friend"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_asm_cast_lvalue, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid use of a cast in a inline asm context requiring an l-value: remove the cast or build with -fheinous-gnu-extensions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_asm_value_for_constraint, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"value '%0' out of range for constraint '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_astype_of_different_size, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid reinterpretation: sizes of %0 and %1 must match"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_attribute_on_virtual_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute cannot be applied to virtual functions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_base_in_interface, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"interface type cannot inherit from %select{'struct|non-public 'interface|'class}0 %1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_collection_element, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"collection element of type %0 is not an Objective-C object"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_complex_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'_Complex %0' is invalid"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_constexpr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{function parameter|typedef|non-static data member}0 cannot be constexpr"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_constexpr_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-static data member cannot be constexpr%select{; did you intend to make it %select{const|static}0?|}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_constexpr_var_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constexpr variable declaration must be a definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_conversion_between_ext_vectors, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid conversion between ext-vector type %0 and %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_conversion_between_vector_and_integer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid conversion between vector type %0 and integer type %1 of different size"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_conversion_between_vector_and_scalar, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid conversion between vector type %0 and scalar type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_conversion_between_vectors, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid conversion between vector type%diff{ $ and $|}0,1 of different size"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_cpu_supports, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid cpu feature string for builtin"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_decl_spec_combination, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot combine with previous '%0' declaration specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_declarator_global_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"definition or redeclaration of %0 cannot name the global scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_declarator_in_block, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"definition or redeclaration of %0 not allowed inside a block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_declarator_in_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"definition or redeclaration of %0 not allowed inside a function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_declarator_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot define or redeclare %0 here because namespace %1 does not enclose namespace %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_form_pointer_member_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot create a non-constant pointer to member function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_incomplete_type_use, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid use of incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_member_in_interface, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{data member |non-public member function |static member function |user-declared constructor|user-declared destructor|operator |nested class }0%1 is not permitted within an interface type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_member_use_in_static_method, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid use of member %0 in static member function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_neon_type_code, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incompatible constant for this __builtin_neon function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_non_static_member_use, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid use of non-static data member %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_nsnumber_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is not a valid literal type for NSNumber"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_pcs, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid PCS type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_pixel_decl_spec_combination, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'__pixel' must be preceded by '__vector'.  '%0' declaration specifier not allowed here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_property_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is not a valid property name (accessing an object of type %1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_protocol_qualifiers, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid protocol qualifiers on non-ObjC type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_qualified_constructor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' qualifier is not allowed on a constructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_qualified_destructor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' qualifier is not allowed on a destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_qualified_function_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{static |non-}0member function %select{of type %2 |}1cannot have '%3' qualifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_receiver_class_message, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"receiver type %0 is not an Objective-C class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_receiver_to_message_super, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'super' is only valid in a method body"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_sign_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' cannot be signed or unsigned"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_super_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid use of '__super', this keyword can only be used inside class or member function scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_this_use, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid use of 'this' outside of a non-static member function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_thread, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' is only allowed on variable declarations"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_use_of_array_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"an array type is not allowed here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_use_of_function_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"a function type is not allowed here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_var_template_spec_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type %2 of %select{explicit instantiation|explicit specialization|partial specialization|redeclaration}0 of %1 does not match expected type %3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_vector_bool_decl_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot use '%0' with '__vector bool'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_vector_decl_spec_combination, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot combine with previous '%0' declaration specifier. '__vector' must be first"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_vector_double_decl_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of 'double' with '__vector' requires VSX support to be enabled (available on POWER7 or later)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_vector_float_decl_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot use 'float' with '__vector'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_vector_long_decl_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot use 'long' with '__vector'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_vector_long_double_decl_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot use 'long double' with '__vector'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_vector_long_long_decl_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of 'long long' with '__vector bool' requires VSX support (available on POWER7 or later) or extended Altivec support (available on POWER8 or later) to be enabled"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_invalid_width_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%select{|short|long|long long}0 %1' is invalid"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ivar_access_using_property_syntax_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property %0 not found on object of type %1; did you mean to access instance variable %2?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ivar_reference_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"instance variables cannot be of reference type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_kern_call_not_global_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"kernel call to non-global function %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_kern_is_nonstatic_method, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"kernel function %0 must be a free function or static member function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_kern_type_not_void_return, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"kernel function type %0 must have void return type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_lambda_capture_anonymous_var, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unnamed variable cannot be implicitly captured in a lambda expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_lambda_capture_default_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"lambda expression in default argument cannot capture any entity"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_lambda_capture_flexarray_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable %0 with flexible array member cannot be captured in a lambda expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_lambda_decl_ref_not_modifiable_lvalue, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot assign to a variable captured by copy in a non-mutable lambda"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_lambda_impcap, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable %0 cannot be implicitly captured in a lambda with no capture-default specified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_lambda_in_constant_expression, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"a lambda expression may not appear inside of a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_lambda_incomplete_result, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incomplete result type %0 in lambda expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_lambda_return_init_list, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot deduce lambda return type from initializer list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_lambda_unevaluated_operand, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"lambda expression in an unevaluated operand"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_language_linkage_spec_not_ascii, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"string literal in language linkage specifier cannot have an encoding-prefix"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_language_linkage_spec_unknown, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unknown linkage language"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_late_asm_label_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot apply asm label to %select{variable|function}0 after its first use"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_literal_operator_bad_param_count, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-template literal operator must have one or two parameters"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_literal_operator_default_argument, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"literal operator cannot have a default argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_literal_operator_extern_c, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"literal operator must have C++ linkage"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_literal_operator_id_outside_namespace, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-namespace scope '%0' cannot have a literal operator member"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_literal_operator_invalid_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"parameter of literal operator must have type 'unsigned long long', 'long double', 'char', 'wchar_t', 'char16_t', 'char32_t', or 'const char *'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_literal_operator_outside_namespace, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"literal operator %0 must be in a namespace or global scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_literal_operator_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid literal operator parameter type %0, did you mean %1?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_literal_operator_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template parameter list for literal operator must be either 'char...' or 'typename T, T...'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_literal_operator_template_with_params, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"literal operator template cannot have any parameters"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_local_cant_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'__local' variable cannot have an initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_lvalue_reference_bind_to_initlist, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{non-const|volatile}0 lvalue reference to type %1 cannot bind to an initializer list temporary"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_lvalue_reference_bind_to_temporary, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a temporary of type $|cannot bind to incompatible temporary}1,2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_lvalue_reference_bind_to_unrelated, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a value of unrelated type $|cannot bind to a value of unrelated type}1,2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_lvalue_to_rvalue_ref, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"rvalue reference %diff{to type $ cannot bind to lvalue of type $|cannot bind to incompatible lvalue}0,1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_machine_mode, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{unknown|unsupported}0 machine mode %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_main_arg_wrong, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{first|second|third|fourth}0 parameter of 'main' (%select{argument count|argument array|environment|platform-specific data}0) must be of type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_main_global_variable, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"main cannot be declared as global variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_main_returns_nonint, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'main' must return 'int'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_main_surplus_args, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"too many parameters (%0) for 'main': must be 0, 2, or 3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mainlike_template_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 cannot be a template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_malformed_std_coroutine_traits, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 13, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'std::coroutine_traits' must be a class template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_malformed_std_initializer_list, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"std::initializer_list must be a class template with a single type parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_maybe_falloff_nonvoid_block, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"control may reach end of non-void block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mem_init_not_member_or_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"member initializer %0 does not name a non-static data member or base class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mem_init_not_member_or_class_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initializer %0 does not name a non-static data member or base class; did you mean the %select{base class|member}1 %2?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_member_call_without_object, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"call to non-static member function without an object argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_member_decl_does_not_match, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_member_decl_does_not_match_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1; did you mean %3?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_member_def_does_not_match_ret_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"return type of out-of-line definition of %q0 differs from that in the declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_member_def_undefined_record, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"out-of-line definition of %0 from class %1 without definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_member_extra_qualification, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"extra qualification on member %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_member_function_call_bad_cvr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"member function %0 not viable: 'this' argument has type %1, but function is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_member_function_initialization, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initializer on function does not look like a pure-specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_member_name_of_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"member %0 has the same name as its class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_member_not_yet_instantiated, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no member %0 in %1; it has not yet been instantiated"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_member_qualification, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-friend class member %0 cannot have a qualified name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_member_redeclared, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"class member cannot be redeclared"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_member_redeclared_in_instantiation, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"multiple overloads of %0 instantiate to the same signature %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_member_reference_needs_call, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"base of member reference is a function; perhaps you meant to call it%select{| with no arguments}0?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mempointer_in_nonclass_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"member pointer refers into non-class type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_memptr_conv_via_virtual, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conversion from pointer to member of class %0 to pointer to member of class %1 via virtual base %2 is not allowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mismatched_exception_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"exception specification in declaration does not match previous declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mismatched_exception_spec_explicit_instantiation, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"exception specification in explicit instantiation does not match instantiated one"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mismatched_ms_inheritance, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"inheritance model does not match %select{definition|previous declaration}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mismatched_visibility, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"visibility does not match previous declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_misplaced_ivar, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"instance variables may not be placed in %select{categories|class extension}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_missing_actual_pipe_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing actual type specifier for pipe"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_missing_atsign_prefix, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"string literal must be prefixed by '@' "), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_missing_default_ctor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{constructor for %1 must explicitly initialize the|implicit default constructor for %1 must explicitly initialize the|cannot use constructor inherited from base class %4;}0 %select{base class|member}2 %3 %select{which|which|of %1}0 does not have a default constructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_missing_exception_specification, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is missing exception specification '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_missing_open_square_message_send, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing '[' at start of message send expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_missing_type_specifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"C++ requires a type specifier for all declarations"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mixing_cxx_try_seh_try, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot use C++ 'try' in the same function as SEH '__try'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mode_not_primitive, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"mode attribute only supported for integer and floating-point types"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mode_wrong_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type of machine mode does not match type of base type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_import_in_implementation, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 16, 0/*, SKIP_ARG*/, /*KEEP_STR*/"@import of module '%0' in implementation of '%1'; use #import"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_import_not_at_top_level_fatal, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 16, 0/*, SKIP_ARG*/, /*KEEP_STR*/"import of module '%0' appears within %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_private_local, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 16, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{local variable|parameter|typedef}0 %1 cannot be declared __module_private__"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_private_local_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 16, 0/*, SKIP_ARG*/, /*KEEP_STR*/"local %select{struct|interface|union|class|enum}0 cannot be declared __module_private__"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_private_specialization, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 16, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{template|partial|member}0 specialization cannot be declared __module_private__"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_self_import, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 16, 0/*, SKIP_ARG*/, /*KEEP_STR*/"import of module '%0' appears within same top-level module '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_unimported_use, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 16, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from module '%2' before it is required"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_unimported_use_header, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 16, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing '#include %3'; %select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from module '%2' before it is required"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_module_unimported_use_multiple, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 16, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from one of the following modules before it is required:%2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ms___leave_not_in___try, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'__leave' statement not in __try block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ms_va_start_used_in_sysv_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'__builtin_ms_va_start' used in System V ABI function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_multiple_base_initialization, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"multiple initializations given for base %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_multiple_default_labels_defined, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"multiple default labels in one switch"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_multiple_final_overriders, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"virtual function %q0 has more than one final overrider in %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_multiple_mem_initialization, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"multiple initializations given for non-static member %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_multiple_mem_union_initialization, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initializing multiple members of union"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mutable_const, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'mutable' and 'const' cannot be mixed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mutable_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'mutable' cannot be applied to functions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mutable_nonmember, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'mutable' can only be applied to member variables"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_mutable_reference, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'mutable' cannot be applied to references"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_need_header_before_ms_uuidof, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"you need to include <guiddef.h> before using the '__uuidof' operator"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_need_header_before_typeid, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"you need to include <typeinfo> before using the 'typeid' operator"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_nested_name_member_ref_lookup_ambiguous, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"lookup of %0 in member access expression is ambiguous"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_nested_name_spec_is_not_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 cannot appear before '::' because it is not a class%select{ or namespace|, namespace, or enumeration}1; did you mean ':'?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_nested_name_spec_non_tag, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type %0 cannot be used prior to '::' because it has no members"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_nested_non_static_member_use, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{call to non-static member function|use of non-static data member}0 %2 of %1 from nested type %3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_nested_redefinition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"nested redefinition of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_new_abi_tag_on_redeclaration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'abi_tag' %0 missing in original declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_new_array_init_args, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array 'new' cannot have initialization arguments"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_new_array_nonconst, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"only the first dimension of an allocated array may have dynamic size"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_new_array_of_auto, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot allocate array of 'auto'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_new_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"allocation of incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_no_accessor_for_property, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no %select{getter|setter}0 defined for property %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_no_base_classes, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid use of '__super', %0 has no base classes"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_no_dynamic_cast_with_fno_rtti, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot use dynamic_cast with -fno-rtti"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_no_matching_local_friend, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no matching function found in local scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_no_matching_local_friend_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no matching function %0 found in local scope; did you mean %3?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_no_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no member named %0 in %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_no_member_overloaded_arrow, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no member named %0 in %1; did you mean to use '->' instead of '.'?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_no_member_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no member named %0 in %1; did you mean %select{|simply }2%3?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_no_member_template_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no template named %0 in %1; did you mean %select{|simply }2%3?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_no_nsconstant_string_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot find interface declaration for %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_no_suitable_delete_member_function_found, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no suitable member %0 in %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_no_template_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no template named %0; did you mean %1?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_no_typeid_with_fno_rtti, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot use typeid with -fno-rtti"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_noexcept_needs_constant_expression, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"argument to noexcept specifier must be a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_nogetter_property_compound_assignment, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"a getter method is needed to perform a compound assignment on a property"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_nogetter_property_incdec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no getter method %1 for %select{increment|decrement}0 of property"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_non_asm_stmt_in_naked_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-ASM statement in naked function is not supported"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_non_deleted_override, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-deleted function %0 cannot override a deleted function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_non_extern_extern, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-extern declaration of %0 follows extern declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_non_local_variable_decl_in_for, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration of non-local variable in 'for' loop"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_non_static_static, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-static declaration of %0 follows static declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_non_thread_thread, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-thread-local declaration of %0 follows thread-local declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_non_type_template_arg_addr_label_diff, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template argument / label address difference / what did you expect?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_non_type_template_arg_subobject, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument refers to subobject '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_non_type_template_in_nested_name_specifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"qualified name refers into a specialization of %select{function|variable}0 template %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_non_variable_decl_in_for, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-variable declaration in 'for' loop"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_non_virtual_pure, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is not virtual and cannot be declared pure"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_nonfunction_block_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"block pointer to non-function type is invalid"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_nonstatic_member_out_of_line, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-static data member defined out-of-line"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_nontemporal_builtin_must_be_pointer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address argument to nontemporal builtin must be a pointer (%0 invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_nontemporal_builtin_must_be_pointer_intfltptr_or_vector, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address argument to nontemporal builtin must be a pointer to integer, float, pointer, or a vector of such types (%0 invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_noreturn_block_has_return_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"block declared 'noreturn' should not return"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_noreturn_lambda_has_return_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"lambda declared 'noreturn' should not return"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_noreturn_missing_on_first_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function declared '[[noreturn]]' after its first declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_noreturn_non_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'_Noreturn' can only appear on functions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_nosetter_property_assignment, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{assignment to readonly property|no setter method %1 for assignment to property}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_nosetter_property_incdec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{%select{increment|decrement}1 of readonly property|no setter method %2 for %select{increment|decrement}1 of property}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_not_class_template_specialization, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot specialize a %select{dependent template|template template parameter}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_not_direct_base_or_virtual, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type %0 is not a direct or virtual base of %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_not_found_by_two_phase_lookup, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"call to function %0 that is neither visible in the template definition nor found by argument-dependent lookup"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_not_integral_type_anon_bitfield, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"anonymous bit-field has non-integral type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_not_integral_type_bitfield, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"bit-field %0 has non-integral type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_not_tag_in_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no %select{struct|interface|union|class|enum}0 named %1 in %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ns_attribute_wrong_parameter_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute only applies to %select{Objective-C object|pointer|pointer-to-CF-pointer}1 parameters"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_nsconsumed_attribute_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"overriding method has mismatched ns_consumed attribute on its parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_nsobject_attribute, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'NSObject' attribute is for pointer types only"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_nsreturns_retained_attribute_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"overriding method has mismatched ns_returns_%select{not_retained|retained}0 attributes"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_nullability_cs_multilevel, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 17, 0/*, SKIP_ARG*/, /*KEEP_STR*/"nullability keyword %0 cannot be applied to multi-level pointer type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_nullability_nonpointer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 17, 0/*, SKIP_ARG*/, /*KEEP_STR*/"nullability specifier %0 cannot be applied to non-pointer type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_array_of_interfaces, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array of interface %0 is invalid (probably should be an array of pointers)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_attr_not_id, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"parameter of %0 attribute must be a single name of an Objective-C %select{class|protocol}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_attr_protocol_requires_definition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"attribute %0 can only be applied to @protocol definitions, not forward declarations"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_attr_typedef_not_id, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"parameter of %0 attribute must be 'id' when used on a typedef"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_attr_typedef_not_void_pointer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'objc_bridge(id)' is only allowed on structs and typedefs of void pointers"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_bridged_related_invalid_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"could not find Objective-C class %0 to convert %1 to %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_bridged_related_invalid_class_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 must be name of an Objective-C class to be able to convert %1 to %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_bridged_related_known_method, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 must be explicitly converted to %1; use %select{%objcclass2|%objcinstance2}3 method for this conversion"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_cf_bridged_not_interface, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"CF object of type %0 is bridged to %1, which is not an Objective-C class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_decls_may_only_appear_in_global_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"Objective-C declarations may only appear in global scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_exceptions_disabled, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot use '%0' with Objective-C exceptions disabled"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_illegal_boxed_expression_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"illegal type %0 used in a boxed expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_incomplete_boxed_expression_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incomplete type %0 used in a boxed expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_index_incomplete_class_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"Objective-C index expression has incomplete class type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_indexing_method_result_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"method for accessing %select{dictionary|array}1 element must have Objective-C object return type instead of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_kindof_nonobject, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'__kindof' specifier cannot be applied to non-object type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_kindof_wrong_position, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'__kindof' type specifier must precede the declarator"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_literal_method_sig, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"literal construction method %0 has incompatible signature"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_multiple_subscript_type_conversion, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"indexing expression is invalid because subscript type %0 has multiple type conversion functions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_non_trivially_copyable_boxed_expression_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-trivially copyable type %0 cannot be used in a boxed expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_ns_bridged_invalid_cfobject, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ObjectiveC object of type %0 is bridged to %1, which is not valid CF object"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_object_assignment, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot assign to class object (%0 invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_object_catch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot catch an Objective-C object by value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_parameterized_category_nonclass, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{extension|category}0 of non-parameterized class %1 cannot have type parameters"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_parameterized_forward_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"forward declaration of non-parameterized class %0 cannot have type parameters"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_parameterized_forward_class_first, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"class %0 previously declared with type parameters"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_precise_lifetime_bad_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"objc_precise_lifetime only applies to retainable types; type here is %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_property_attr_mutually_exclusive, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property attributes '%0' and '%1' are mutually exclusive"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_property_requires_object, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property with '%0' attribute must be of object type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_root_class_subclass, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"objc_root_class attribute may only be specified on a root class declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_runtime_visible_category, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot implement a category for class %0 that is only visible via the Objective-C runtime"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_runtime_visible_subclass, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot implement subclass %0 of a superclass %1 that is only visible via the Objective-C runtime"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_subscript_base_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{dictionary|array}1 subscript base type %0 is not an Objective-C object"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_subscript_dic_object_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"method object parameter type %0 is not object type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_subscript_index_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"method index parameter type %0 is not integral type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_subscript_key_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"method key parameter type %0 is not object type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_subscript_method_not_found, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected method to %select{read|write}1 %select{dictionary|array}2 element not found on object of type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_subscript_object_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot assign to this %select{dictionary|array}1 because assigning method's 2nd parameter of type %0 is not an Objective-C pointer type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_subscript_pointer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"indexing expression is invalid because subscript type %0 is not an Objective-C pointer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_subscript_type_conversion, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"indexing expression is invalid because subscript type %0 is not an integral or Objective-C pointer type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_type_arg_does_not_match_bound, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type argument %0 does not satisfy the bound (%1) of type parameter %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_type_arg_explicit_nullability, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 17, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type argument %0 cannot explicitly specify nullability"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_type_arg_missing, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no type or protocol named %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_type_arg_missing_star, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type argument %0 must be a pointer (requires a '*')"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_type_arg_not_id_compatible, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 0, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type argument %0 is neither an Objective-C object nor a block type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_type_arg_qualified, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type argument %0 cannot be qualified with '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_type_args_and_protocols, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"angle brackets contain both a %select{type|protocol}0 (%1) and a %select{protocol|type}0 (%2)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_type_args_non_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type arguments cannot be applied to non-class type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_type_args_non_parameterized_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type arguments cannot be applied to non-parameterized class %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_type_args_specialized_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type arguments cannot be applied to already-specialized class type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_type_args_wrong_arity, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"too %select{many|few}0 type arguments for class %1 (have %2, expected %3)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_type_param_arity_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{forward class declaration|class definition|category|extension}0 has too %select{few|many}1 type parameters (expected %2, have %3)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_type_param_bound_conflict, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type bound %0 for type parameter %1 conflicts with %select{implicit|previous}2 bound %3%select{for type parameter %5|}4"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_type_param_bound_explicit_nullability, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 17, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type parameter %0 bound %1 cannot explicitly specify nullability"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_type_param_bound_missing, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing type bound %0 for type parameter %1 in %select{@interface|@class}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_type_param_bound_missing_pointer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing '*' in type bound %0 for type parameter %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_type_param_bound_nonobject, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type bound %0 for type parameter %1 is not an Objective-C pointer type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_type_param_bound_qualified, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type bound %1 for type parameter %0 cannot be qualified with '%2'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_type_param_redecl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"redeclaration of type parameter %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_type_param_variance_conflict, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{in|co|contra}0variant type parameter %1 conflicts with previous %select{in|co|contra}2variant type parameter %3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_objc_var_decl_inclass, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot declare variable inside @interface or @protocol"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_object_cannot_be_passed_returned_by_value, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"interface type %1 cannot be %select{returned|passed}0 by value; did you forget * in %1?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_offsetof_array_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"offsetof requires array type, %0 invalid"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_offsetof_bitfield, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot compute offset of bit-field %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_offsetof_field_of_virtual_base, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid application of 'offsetof' to a field of a virtual base"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_offsetof_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"offsetof of incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_offsetof_record_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"offsetof requires struct, union, or class type, %0 invalid"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_aligned_expected_array_or_ptr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"argument of aligned clause should be array%select{ or pointer|, pointer, reference to array or reference to pointer}1, not %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_aligned_twice, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{a variable|a parameter|'this'}0 cannot appear in more than one aligned clause"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_ambiguous_conversion, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ambiguous conversion from type %0 to an integral or unscoped enumeration type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_argument_type_isdeviceptr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected pointer, array, reference to pointer, or reference to array in 'is_device_ptr clause'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_array_section_use, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"OpenMP array section is not allowed here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_at_least_one_motion_clause_required, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected at least one 'to' clause or 'from' clause specified to '#pragma omp target update'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_atomic_capture_not_compound_statement, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the statement for 'atomic capture' must be a compound statement of form '{v = x; x binop= expr;}', '{x binop= expr; v = x;}', '{v = x; x = x binop expr;}', '{v = x; x = expr binop x;}', '{x = x binop expr; v = x;}', '{x = expr binop x; v = x;}' or '{v = x; x = expr;}', '{v = x; x++;}', '{v = x; ++x;}', '{++x; v = x;}', '{x++; v = x;}', '{v = x; x--;}', '{v = x; --x;}', '{--x; v = x;}', '{x--; v = x;}' where x is an l-value expression with scalar type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_atomic_capture_not_expression_statement, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the statement for 'atomic capture' must be an expression statement of form 'v = ++x;', 'v = --x;', 'v = x++;', 'v = x--;', 'v = x binop= expr;', 'v = x = x binop expr' or 'v = x = expr binop x', where x and v are both l-value expressions with scalar type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_atomic_not_expression_statement, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the statement for 'atomic' must be an expression statement of form '++x;', '--x;', 'x++;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an l-value expression with scalar type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_atomic_read_not_expression_statement, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the statement for 'atomic read' must be an expression statement of form 'v = x;', where v and x are both lvalue expressions with scalar type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_atomic_several_clauses, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"directive '#pragma omp atomic' cannot contain more than one 'read', 'write', 'update' or 'capture' clause"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_atomic_update_not_expression_statement, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the statement for 'atomic update' must be an expression statement of form '++x;', '--x;', 'x++;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an l-value expression with scalar type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_atomic_write_not_expression_statement, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the statement for 'atomic write' must be an expression statement of form 'x = expr;', where x is a lvalue expression with scalar type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_bit_fields_forbidden_in_clause, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"bit fields cannot be used to specify storage in a '%0' clause"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_clause_floating_type_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"arguments of OpenMP clause 'reduction' with bitwise operators cannot be of floating type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_clause_not_arithmetic_type_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"arguments of OpenMP clause 'reduction' for 'min' or 'max' must be of %select{scalar|arithmetic}0 type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_const_reduction_list_item, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"const-qualified list item cannot be reduction"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_const_variable, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"const-qualified variable cannot be %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_critical_with_hint, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constructs with the same name must have a 'hint' clause with the same value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_declare_reduction_redefinition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"redefinition of user-defined reduction for type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_declare_target_multiple, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 appears multiple times in clauses on the same declare target directive"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_declare_target_to_and_link, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 must not appear in both clauses 'to' and 'link'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_depend_clause_thread_simd, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'depend' clauses cannot be mixed with '%0' clause"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_depend_sink_expected_loop_iteration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected %0 loop iteration variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_depend_sink_expected_plus_minus, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected '+' or '-' operation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_depend_sink_source_not_allowed, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'depend(%select{source|sink:vec}0)' clause%select{|s}0 cannot be mixed with 'depend(%select{sink:vec|source}0)' clause%select{s|}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_depend_sink_unexpected_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected expression: number of expressions is larger than the number of associated loops"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_enclosed_declare_target, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declare target region may not be enclosed within another declare target region"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_expected_access_to_data_field, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected access to data field"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_expected_base_var_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected variable name as a base of the array %select{subscript|section}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_expected_int_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a reference to an integer-typed parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_expected_named_var_member_or_array_expression, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected expression containing only member accesses and/or array sections based on named variables"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_expected_uniform_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a reference to a parameter specified in a 'uniform' clause"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_expected_var_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is not a global variable, static local variable or static data member"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_expected_var_arg_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is not a global variable, static local variable or static data member; did you mean %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_expected_var_name_member_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected variable name%select{| or data member of current class}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_expected_var_name_member_expr_or_array_item, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected variable name%select{|, data member of current class}0, array element or array section"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_explicit_conversion, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expression requires explicit conversion from %0 to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_firstprivate_and_lastprivate_in_distribute, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"lastprivate variable cannot be firstprivate in '#pragma omp distribute'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_firstprivate_distribute_in_teams_reduction, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reduction variable in '#pragma omp teams' cannot be firstprivate in '#pragma omp distribute'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_firstprivate_distribute_private_teams, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"private variable in '#pragma omp teams' cannot be firstprivate in '#pragma omp distribute'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_firstprivate_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"a firstprivate variable with incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_function_expected, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'#pragma omp declare simd' can only be applied to functions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_global_var_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"arguments of '#pragma omp %0' must have %select{global storage|static storage duration}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_grainsize_num_tasks_mutually_exclusive, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' and '%1' clause are mutually exclusive and may not appear on the same directive"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_hint_clause_no_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the name of the construct must be specified in presence of 'hint' clause"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expression has incomplete class type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_invalid_map_type_for_directive, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{map type '%1' is not allowed|map type must be specified}0 for '#pragma omp %2'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_invalid_target_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 used in declare target directive is not a variable or a function name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_lastprivate_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"a lastprivate variable with incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_linear_expected_int_or_ptr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"argument of a linear clause should be of integral or pointer type, not %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_linear_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"a linear variable with incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_linear_ordered, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'linear' clause cannot be specified along with 'ordered' clause with a parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_local_var_in_threadprivate_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable with local storage in initial value of threadprivate variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_loop_cannot_use_stmt, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' statement cannot be used in OpenMP for loop"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_loop_diff_cxx, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"could not calculate number of iterations calling 'operator-' with upper and lower loop bounds"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_loop_incr_not_compatible, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"increment expression must cause %0 to %select{decrease|increase}1 on each iteration of OpenMP for loop"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_loop_not_canonical_cond, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"condition of OpenMP for loop must be a relational comparison ('<', '<=', '>', or '>=') of loop variable %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_loop_not_canonical_incr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"increment clause of OpenMP for loop must perform simple addition or subtraction on loop variable %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_loop_not_canonical_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initialization clause of OpenMP for loop is not in canonical form ('var = init' or 'T var = init')"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_loop_var_dsa, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"loop iteration variable in the associated loop of 'omp %1' directive may not be %0, predetermined as %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_loop_variable_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable must be of integer or %select{pointer|random access iterator}0 type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_map_shared_storage, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable already marked as mapped in current construct"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_multiple_array_items_in_map_clause, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"multiple array elements associated with the same variable are not allowed in map clauses of the same construct"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_negative_expression_in_clause, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"argument to '%0' clause must be a %select{non-negative|strictly positive}1 integer value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_no_dsa_for_variable, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable %0 must have explicitly specified data sharing attributes"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_no_map_for_directive, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected at least one map clause for '#pragma omp %0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_no_more_if_clause, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no more 'if' clause is allowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_not_for, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{statement after '#pragma omp %1' must be a for loop|expected %2 for loops after '#pragma omp %1'%select{|, but found only %4}3}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_not_integral, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expression must have integral or unscoped enumeration type, not %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_not_mappable_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type %0 is not mappable to target"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_not_resolved_reduction_identifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unable to resolve declare reduction construct for type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_once_referenced, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable can appear only once in OpenMP '%0' clause"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_once_referenced_in_target_update, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable can appear only once in OpenMP 'target update' construct"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_ordered_directive_with_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'ordered' directive %select{without any clauses|with 'threads' clause}0 cannot be closely nested inside ordered region with specified parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_ordered_directive_without_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'ordered' directive with 'depend' clause cannot be closely nested inside ordered region without specified parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_ordered_simd, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'ordered' clause with a parameter can not be specified in '#pragma omp %0' directive"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_original_storage_is_shared_and_does_not_contain, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"original storage of expression in data environment is shared but data environment do not fully contain mapped expression storage"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_orphaned_section_directive, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{orphaned 'omp section' directives are prohibited, it|'omp section' directive}0 must be closely nested to a sections region%select{|, not a %1 region}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_parallel_reduction_in_task_firstprivate, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"argument of a reduction clause of a %0 construct must not appear in a firstprivate clause on a task construct"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_parallel_sections_not_compound_stmt, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the statement for '#pragma omp parallel sections' must be a compound statement"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_parallel_sections_substmt_not_section, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"statement in 'omp parallel sections' directive must be enclosed into a section region"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_param_or_this_in_clause, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected reference to one of the parameters of function %0%select{| or 'this'}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_parent_cancel_region_nowait, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"parent region for 'omp %select{cancellation point/cancel}0' construct cannot be nowait"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_parent_cancel_region_ordered, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"parent region for 'omp %select{cancellation point/cancel}0' construct cannot be ordered"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_pointer_mapped_along_with_derived_section, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"pointer cannot be mapped along with a section derived from itself"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_private_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"a private variable with incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_prohibited_region, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"region cannot be%select{| closely}0 nested inside '%1' region%select{|; perhaps you forget to enclose 'omp %3' directive into a parallel region?|; perhaps you forget to enclose 'omp %3' directive into a for or a parallel for region with 'ordered' clause?|; perhaps you forget to enclose 'omp %3' directive into a target region?|; perhaps you forget to enclose 'omp %3' directive into a teams region?}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_prohibited_region_atomic, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"OpenMP constructs may not be nested inside an atomic region"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_prohibited_region_critical_same_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot nest 'critical' regions having the same name %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_prohibited_region_simd, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"OpenMP constructs may not be nested inside a simd region"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_reduction_id_not_compatible, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"list item of type %0 is not valid for specified reduction operation: unable to provide default initialization value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_reduction_in_task, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reduction variables may not be accessed in an explicit task"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_reduction_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"a reduction list item with incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_reduction_ref_type_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"argument of OpenMP clause 'reduction' must reference the same object in all threads"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_reduction_wrong_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reduction type cannot be %select{qualified with 'const', 'volatile' or 'restrict'|a function|a reference|an array}0 type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_ref_type_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"arguments of '#pragma omp %0' cannot be of reference type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_region_not_file_context, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"directive must be at file or namespace scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_required_access, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 variable must be %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_same_pointer_derreferenced, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"same pointer derreferenced in multiple different ways in map clause expressions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_schedule_nonmonotonic_ordered, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'schedule' clause with 'nonmonotonic' modifier cannot be specified if an 'ordered' clause is specified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_schedule_nonmonotonic_static, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'nonmonotonic' modifier can only be specified with 'dynamic' or 'guided' schedule kind"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_section_function_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"section of pointer to function type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_section_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"section of pointer to incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_section_length_undefined, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"section length is unspecified and cannot be inferred because subscripted value is %select{not an array|an array of unknown bound}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_section_negative, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"section %select{lower bound|length}0 is evaluated to a negative value %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_sections_not_compound_stmt, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the statement for '#pragma omp sections' must be a compound statement"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_sections_substmt_not_section, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"statement in 'omp sections' directive must be enclosed into a section region"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_simd_region_cannot_use_stmt, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' statement cannot be used in OpenMP simd region"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_single_copyprivate_with_nowait, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the 'copyprivate' clause must not be used with the 'nowait' clause"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_single_decl_in_declare_simd, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"single declaration is expected after 'declare simd' directive"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_target_contains_not_only_teams, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"target construct with nested teams region contains statements outside of the teams construct"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_threadprivate_in_clause, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"threadprivate variables are not allowed in '%0' clause"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_threadprivate_in_target, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"threadprivate variables cannot be used in target constructs"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_threadprivate_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"threadprivate variable with incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_typecheck_section_not_integer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array section %select{lower bound|length}0 is not an integer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_typecheck_section_value, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"subscripted value is not an array or pointer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_unexpected_clause_value, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected %0 in OpenMP clause '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_unexpected_schedule_modifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"modifier '%0' cannot be used along with modifier '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_union_type_not_allowed, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"mapped storage cannot be derived from a union"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_unknown_reduction_identifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incorrect reduction identifier, expected one of '+', '-', '*', '&', '|', '^', '&&', '||', 'min' or 'max' or declare reduction for type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_unnamed_if_clause, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected %select{|one of}0 %1 directive name modifier%select{|s}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_usedeviceptr_not_a_pointer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected pointer or reference to pointer in 'use_device_ptr' clause"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_var_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'#pragma omp %0' must appear in the scope of the %q1 variable declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_var_thread_local, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable %0 cannot be threadprivate because it is %select{thread-local|a global named register variable}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_var_used, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'#pragma omp %0' must precede all references to variable %q1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_variable_in_map_and_dsa, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 variable cannot be in a map clause in '#pragma omp %1' directive"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_variably_modified_type_not_supported, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"arguments of OpenMP clause '%0' in '#pragma omp %2' directive cannot be of variably-modified type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_wrong_cancel_region, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"one of 'for', 'parallel', 'sections' or 'taskgroup' is expected"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_wrong_dsa, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 variable cannot be %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_wrong_if_directive_name_modifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"directive name modifier '%0' is not allowed for '#pragma omp %1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_wrong_linear_modifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected %select{'val' modifier|one of 'ref', val' or 'uval' modifiers}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_wrong_linear_modifier_non_reference, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable of non-reference type %0 can be used only with 'val' modifier, but used with '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_wrong_ordered_loop_count, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the parameter of the 'ordered' clause must be greater than or equal to the parameter of the 'collapse' clause"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_wrong_simdlen_safelen_values, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the value of 'simdlen' parameter must be less than or equal to the value of the 'safelen' parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_omp_wrong_var_in_declare_reduction, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"only %select{'omp_priv' or 'omp_orig'|'omp_in' or 'omp_out'}0 variables are allowed in %select{initializer|combiner}0 expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_only_annotate_after_access_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"access specifier can only have annotation attributes"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_only_constructors_take_base_inits, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"only constructors take base initializers"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_only_enums_have_underlying_types, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"only enumeration types have underlying types"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_bitfields, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"bitfields are not supported in OpenCL"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_block_proto_variadic, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid block prototype, variadic arguments are not allowed in OpenCL"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_block_storage_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the __block storage type is not permitted"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_builtin_pipe_arg_num, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid number of arguments to function: %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_builtin_pipe_first_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"first argument to %0 must be a pipe type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_builtin_pipe_invalid_access_modifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid pipe access modifier (expecting %0)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_builtin_pipe_invalid_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid argument type to function %0 (expecting %1 having %2)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_builtin_to_addr_arg_num, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid number of arguments to function: %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_builtin_to_addr_invalid_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid argument %0 to function: %1, expecting a generic pointer argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_cast_to_half, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"casting to type %0 is not allowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_constant_no_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable in constant address space must be initialized"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_enqueue_kernel_blocks_no_args, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"blocks in this form of device side enqueue call are expected to have have no parameters"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_enqueue_kernel_blocks_non_local_void_args, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"blocks used in device side enqueue are expected to have parameters of type 'local void*'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_enqueue_kernel_expected_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"illegal call to enqueue_kernel, expected %0 argument type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_enqueue_kernel_incorrect_args, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"illegal call to enqueue_kernel, incorrect argument types"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_enqueue_kernel_invalid_local_size_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"local memory sizes need to be specified as uint"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_enqueue_kernel_local_size_args, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"mismatch in number of block parameters and local size arguments passed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_extern_block_declaration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid block variable declaration - using 'extern' storage class is disallowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_function_pointer_variable, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"pointers to functions are not allowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_function_variable, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{non-kernel function|function scope}0 variable cannot be declared in %1 address space"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_global_invalid_addr_space, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{program scope|static local|extern}0 variable must reside in %1 address space"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_half_declaration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaring variable of type %0 is not allowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_half_load_store, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{loading directly from|assigning directly to}0 pointer to type %1 is not allowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_half_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaring function parameter of type %0 is not allowed; did you forget * ?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_implicit_vector_conversion, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"implicit conversions between vector types (%0 and %1) are not permitted"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_invalid_access_qualifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"access qualifier can only be used for pipe and image type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_invalid_block_declaration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid block variable declaration - must be %select{const qualified|initialized}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_invalid_read_write, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"access qualifier %0 can not be used for %1 %select{|prior to OpenCL version 2.0}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_invalid_return, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaring function return value of type %0 is not allowed %select{; did you forget * ?|}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_invalid_type_array, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array of %0 type is invalid in OpenCL"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_kernel_attr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"attribute %0 can only be applied to a kernel function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_multiple_access_qualifiers, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"multiple access qualifiers"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_no_main, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{function|kernel}0 cannot be called 'main'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_pointer_to_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"pointer to type %0 is invalid in OpenCL"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_private_ptr_kernel_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"kernel parameter cannot be declared as a pointer to the __private address space"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_ptrptr_kernel_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"kernel parameter cannot be declared as a pointer to a pointer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_return_value_with_address_space, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"return value cannot be qualified with address space"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_sizeof_alignof_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid application of '%select{sizeof|alignof|vec_step|__builtin_omp_required_simd_align}0' to a void type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_taking_function_address, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"taking address of function is not allowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_ternary_with_block, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"block type cannot be used as expression in ternary expression in OpenCL"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_type_can_only_be_used_as_function_parameter, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type %0 can only be used as a function parameter in OpenCL"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_type_struct_or_union_field, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the %0 type cannot be used to declare a structure or union field"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_unknown_type_specifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"OpenCL version %0 does not support the '%1' %select{type qualifier|storage class specifier}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_opencl_vla, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable length arrays are not supported in OpenCL"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_openmp_default_simd_align_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid application of '__builtin_omp_required_simd_align' to an expression, only type is allowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_operator_arrow_circular, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"circular pointer delegation detected"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_operator_arrow_depth_exceeded, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of 'operator->' on type %0 would invoke a sequence of more than %1 'operator->' calls"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_operator_delete_dependent_param_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 cannot take a dependent type as first parameter; use %1 instead"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_operator_delete_param_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"first parameter of %0 must have type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_operator_new_default_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"parameter of %0 cannot have a default argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_operator_new_delete_declared_in_namespace, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 cannot be declared inside a namespace"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_operator_new_delete_declared_static, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 cannot be declared static in global scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_operator_new_delete_dependent_result_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 cannot have a dependent return type; use %1 instead"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_operator_new_delete_invalid_result_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 must return type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_operator_new_delete_template_too_few_parameters, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 template must have at least two parameters"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_operator_new_delete_too_few_parameters, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 must have at least one parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_operator_new_dependent_param_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 cannot take a dependent type as first parameter; use size_t (%1) instead"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_operator_new_param_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 takes type size_t (%1) as first parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_operator_overload_default_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"parameter of overloaded %0 cannot have a default argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_operator_overload_must_be, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"overloaded %0 must be a %select{unary|binary|unary or binary}2 operator (has %1 parameter%s1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_operator_overload_must_be_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"overloaded %0 must be a non-static member function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_operator_overload_needs_class_or_enum, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"overloaded %0 must have at least one parameter of class or enumeration type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_operator_overload_post_incdec_must_be_int, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"parameter of overloaded post-%select{increment|decrement}1 operator must have type 'int' (not %0)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_operator_overload_static, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"overloaded %0 cannot be a static member function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_operator_overload_variadic, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"overloaded %0 cannot be variadic"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_out_of_line_default_deletes, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"defaulting this %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 would delete it after its first declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_overflow_builtin_must_be_int, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"operand argument to overflow builtin must be an integer (%0 invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_overflow_builtin_must_be_ptr_int, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"result argument to overflow builtin must be a pointer to a non-const integer (%0 invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_override_exception_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"exception specification of overriding function is more lax than base version"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_ambiguous_call, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"call to %0 is ambiguous"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_ambiguous_conversion_in_cast, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ambiguous conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_ambiguous_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"call to constructor of %0 is ambiguous"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_ambiguous_member_call, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"call to member function %0 is ambiguous"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_ambiguous_object_call, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"call to object of type %0 is ambiguous"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_ambiguous_oper_binary, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of overloaded operator '%0' is ambiguous (with operand types %1 and %2)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_ambiguous_oper_unary, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of overloaded operator '%0' is ambiguous (operand type %1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_deleted_call, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"call to %select{unavailable|deleted}0 function %1%2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_deleted_conversion_in_cast, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2 uses deleted function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_deleted_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"call to %select{unavailable|deleted}0 constructor of %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_deleted_member_call, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"call to %select{unavailable|deleted}0 member function %1%2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_deleted_object_call, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"call to %select{unavailable|deleted}0 function call operator in type %1%2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_deleted_oper, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"overload resolution selected %select{unavailable|deleted}0 operator '%1'%2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_deleted_special_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"call to implicitly-deleted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}0 of %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_deleted_special_oper, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"object of type %0 cannot be %select{constructed|copied|moved|assigned|assigned|destroyed}1 because its %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 is implicitly deleted"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_diff_return_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"functions that differ only in their return type cannot be overloaded"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_no_conversion_in_cast, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot convert %1 to %2 without a conversion operator"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_no_oper, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type %0 does not provide a %select{subscript|call}1 operator"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_no_viable_conversion_in_cast, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no matching conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_no_viable_function_in_call, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no matching function for call to %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_no_viable_function_in_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no matching constructor for initialization of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_no_viable_literal_operator, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no matching literal operator for call to %0%select{| with argument of type %2| with arguments of types %2 and %3}1%select{| or 'const char *'}4%select{|, and no matching literal operator template}5"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_no_viable_member_function_in_call, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no matching member function for call to %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_no_viable_object_call, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no matching function for call to object of type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_no_viable_oper, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no viable overloaded '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_no_viable_subscript, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no viable overloaded operator[] for type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_static_nonstatic_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"static and non-static member functions with the same parameter types cannot be overloaded"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ovl_unresolvable, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reference to overloaded function could not be resolved; did you mean to call it%select{| with no arguments}0?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ownership_returns_index_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'ownership_returns' attribute index does not match; here it is %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ownership_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute only applies to %select{pointer|integer}1 arguments"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pack_expansion_length_conflict, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"pack expansion contains parameter packs %0 and %1 that have different lengths (%2 vs. %3)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pack_expansion_length_conflict_multilevel, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"pack expansion contains parameter pack %0 that has a different length (%1 vs. %2) from outer parameter packs"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pack_expansion_member_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"pack expansion for initialization of member %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pack_expansion_without_parameter_packs, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"pack expansion does not contain any unexpanded parameter packs"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_param_default_argument, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"C does not support default arguments"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_param_default_argument_member_template_redecl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"default arguments cannot be added to an out-of-line definition of a member of a %select{class template|class template partial specialization|nested class in a template}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_param_default_argument_missing, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing default argument on parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_param_default_argument_missing_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing default argument on parameter %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_param_default_argument_nonfunc, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"default arguments can only be specified for parameters in a function declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_param_default_argument_on_parameter_pack, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"parameter pack cannot have a default argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_param_default_argument_redefinition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"redefinition of default argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_param_default_argument_references_local, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"default argument references local variable %0 of enclosing function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_param_default_argument_references_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"default argument references parameter %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_param_default_argument_references_this, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"default argument references 'this'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_param_default_argument_template_redecl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"default arguments cannot be added to a function template that has already been declared"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_param_with_void_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"argument may not have 'void' type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_parameter_name_omitted, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"parameter name omitted"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_parameters_retval_cannot_have_fp16_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{parameters|function return value}0 cannot have __fp16 type; did you forget * ?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_parens_pointer_member_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot parenthesize the name of a method when forming a member pointer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_partial_spec_args_match_primary_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{class|variable}0 template partial specialization does not specialize any template argument; to %select{declare|define}1 the primary template, remove the template argument list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_partial_spec_fully_specialized, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"partial specialization of %0 does not use any of its template parameters"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_partial_spec_ordering_ambiguous, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ambiguous partial specializations of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_partial_spec_redeclared, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"class template partial specialization %0 cannot be redeclared"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_partial_specialization_friend, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"partial specialization cannot be declared as a friend"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_placement_new_non_placement_delete, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'new' expression with placement arguments refers to non-placement 'operator delete'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pointer_to_member_call_drops_quals, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"call to pointer to member function of type %0 drops '%1' qualifier%s2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pointer_to_member_oper_value_classify, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"pointer-to-member function type %0 can only be called on an %select{rvalue|lvalue}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pointer_to_member_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid use of pointer to member type after %select{.*|->*}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ppc_builtin_only_on_pwr7, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"this builtin is only valid on POWER7 or later CPUs"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pragma_loop_compatibility, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{incompatible|duplicate}0 directives '%1' and '%2'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pragma_loop_invalid_argument_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid argument of type %0; expected an integer type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pragma_loop_invalid_argument_value, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{invalid value '%0'; must be positive|value '%0' is too large}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pragma_loop_precedes_nonloop, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expected a for, while, or do-while loop to follow '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pragma_options_align_mac68k_target_unsupported, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"mac68k alignment pragma is not supported on this target"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pragma_pop_visibility_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"#pragma visibility pop with no matching #pragma visibility push"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pragma_push_visibility_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"#pragma visibility push with no matching #pragma visibility pop"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_property_found_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property %0 found on object of type %1; did you mean to access it with the \".\" operator?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_property_function_in_objc_container, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of Objective-C property in function nested in Objective-C container not supported, move function outside its container"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_property_is_variably_modified, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property %0 has a variably modified type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_property_method_unavailable, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property access is using %0 method which is unavailable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_property_not_as_forward_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property %0 refers to an incomplete Objective-C class %1 (with no @interface available)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_property_not_found, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property %0 not found on object of type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_property_not_found_forward_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property %0 cannot be found in forward class object %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_property_not_found_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property %0 not found on object of type %1; did you mean %2?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_property_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property cannot have array or function type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_protocol_has_circular_dependency, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"protocol has circular dependency"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pseudo_dtor_base_not_scalar, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"object expression of non-scalar type %0 cannot be used in a pseudo-destructor expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pseudo_dtor_call_with_args, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"call to pseudo-destructor cannot have any arguments"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pseudo_dtor_destructor_non_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 does not refer to a type name in pseudo-destructor expression; expected the name of type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pseudo_dtor_type_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the type of object expression %diff{($) does not match the type being destroyed ($)|does not match the type being destroyed}0,1 in pseudo-destructor expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_pure_friend, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"friend declaration cannot have a pure-specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_qualified_catch_declarator, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"exception declarator cannot be qualified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_qualified_friend_def, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"friend function definition cannot be qualified with '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_qualified_friend_not_found, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no function named %0 with type %1 was found in the specified scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_qualified_member_nonclass, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"qualified member access refers to a member in %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_qualified_member_of_unrelated, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%q0 is not a member of class %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_qualified_objc_access, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{property|instance variable}0 access cannot be qualified with '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_qualified_objc_catch_parm, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"@catch parameter declarator cannot be qualified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_qualified_param_declarator, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"parameter declarator cannot be qualified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_qualified_typedef_declarator, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"typedef declarator cannot be qualified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_range_on_array_parameter, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot build range expression with array function parameter %0 since parameter with array type %1 is treated as pointer type %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_realimag_invalid_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid type %0 to %1 operator"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_record_with_pointers_kernel_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{struct|union}0 kernel parameters may not contain pointers"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_recursive_default_argument, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"recursive evaluation of default argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_recursive_superclass, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"trying to recursively use %0 as superclass of %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_redeclaration_different_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"redeclaration of %0 with a different type%diff{: $ vs $|}1,2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_redefinition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"redefinition of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_redefinition_different_kind, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"redefinition of %0 as different kind of symbol"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_redefinition_different_namespace_alias, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"redefinition of %0 as an alias for a different namespace"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_redefinition_different_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"redefinition of %0 with a different type%diff{: $ vs $|}1,2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_redefinition_different_typedef, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{typedef|type alias|type alias template}0 redefinition with different types%diff{ ($ vs $)|}1,2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_redefinition_extern_inline, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"redefinition of a 'extern inline' function %0 is not supported in %select{C99 mode|C++}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_redefinition_of_enumerator, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"redefinition of enumerator %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_redefinition_of_label, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"redefinition of label %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_redefinition_variably_modified_typedef, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"redefinition of %select{typedef|type alias}0 for variably-modified type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ref_array_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot refer to declaration with an array type inside block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ref_bad_target, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reference to %select{__device__|__global__|__host__|__host__ __device__}0 function %1 in %select{__device__|__global__|__host__|__host__ __device__}2 function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ref_flexarray_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot refer to declaration of structure variable with flexible array member inside block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ref_init_ambiguous, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reference initialization of type %0 with initializer of type %1 is ambiguous"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ref_non_value, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 does not refer to a value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ref_qualifier_constructor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ref-qualifier '%select{&&|&}0' is not allowed on a constructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ref_qualifier_destructor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ref-qualifier '%select{&&|&}0' is not allowed on a destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ref_qualifier_overload, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot overload a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}0 with a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ref_vm_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot refer to declaration with a variably modified type inside block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_reference_bind_drops_quals, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"binding value %diff{of type $ to reference to type $|to reference}0,1 drops %select{<<ERROR>>|'const'|'restrict'|'const' and 'restrict'|'volatile'|'const' and 'volatile'|'restrict' and 'volatile'|'const', 'restrict', and 'volatile'}2 qualifier%plural{1:|2:|4:|:s}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_reference_bind_failed, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reference %diff{to type $ could not bind to an %select{rvalue|lvalue}1 of type $|could not bind to %select{rvalue|lvalue}1 of incompatible type}0,2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_reference_bind_init_list, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reference to type %0 cannot bind to an initializer list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_reference_bind_to_bitfield, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{non-const|volatile}0 reference cannot bind to bit-field%select{| %1}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_reference_bind_to_vector_element, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{non-const|volatile}0 reference cannot bind to vector element"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_reference_capture_with_reference_default, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'&' cannot precede a capture when the capture default is '&'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_reference_has_multiple_inits, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reference cannot be initialized with multiple values"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_reference_pipe_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"pipes packet types cannot be of reference type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_reference_to_local_var_in_enclosing_block, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reference to local variable %0 declared in enclosing block literal"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_reference_to_local_var_in_enclosing_context, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reference to local variable %0 declared in enclosing context"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_reference_to_local_var_in_enclosing_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reference to local variable %0 declared in enclosing function %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_reference_to_local_var_in_enclosing_lambda, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reference to local variable %0 declared in enclosing lambda expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_reference_to_void, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot form a reference to 'void'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_reference_var_requires_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration of reference variable %0 requires an initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_reference_without_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reference to type %0 requires an initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_regparm_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function declared with regparm(%0) attribute was previously declared %plural{0:without the regparm|:with the regparm(%1)}1 attribute"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_repeat_attribute, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute cannot be repeated"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_ret_local_block, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"returning block that lives on the local stack"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_return_block_has_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"void block should not return a value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_return_in_captured_stmt, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot return from %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_return_in_constructor_handler, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"return in the catch of a function try block of a constructor is illegal"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_return_in_coroutine, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 13, 0/*, SKIP_ARG*/, /*KEEP_STR*/"return statement not allowed in coroutine; did you mean 'co_return'?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_return_init_list, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{void function|void method|constructor|destructor}1 %0 must not return a value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_returns_retained_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function declared with the ns_returns_retained attribute was previously declared without the ns_returns_retained attribute"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_rref_in_exception_spec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"rvalue reference type %0 is not allowed in exception specification"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_sampler_argument_required, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"sampler_t variable required - got %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_second_argument_to_cwsc_not_pointer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"second argument to __builtin_call_with_static_chain must be of pointer type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_second_parameter_to_va_arg_abstract, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"second argument to 'va_arg' is of abstract type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_second_parameter_to_va_arg_incomplete, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"second argument to 'va_arg' is of incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_section_conflict, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 causes a section type conflict with %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_seh_try_outside_functions, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot use SEH '__try' in blocks, captured regions, or Obj-C method decls"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_seh_try_unsupported, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"SEH '__try' is not supported on this target"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_selected_explicit_constructor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"chosen constructor is explicit in copy-initialization"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_selector_element_const_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"selector element of type %0 cannot be a constant l-value expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_selector_element_not_lvalue, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"selector element is not a valid lvalue"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_selector_element_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"selector element type %0 is not a valid object"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_setter_type_void, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type of setter must be void"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_shared_var_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initialization is not supported for __shared__ variables."), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_shift_rhs_only_vector, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"requested shift is a vector of type %0 but the first operand is not a vector (%1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_shufflevector_argument_too_large, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"index for __builtin_shufflevector must be less than the total number of vector elements"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_shufflevector_incompatible_vector, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"first two arguments to __builtin_shufflevector must have the same type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_shufflevector_non_vector, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"first two arguments to __builtin_shufflevector must be vectors"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_shufflevector_nonconstant_argument, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"index for __builtin_shufflevector must be a constant integer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_sizeof_alignof_function_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid application of '%select{sizeof|alignof|vec_step|__builtin_omp_required_simd_align}0' to a function type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_sizeof_alignof_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid application of '%select{sizeof|alignof|vec_step|__builtin_omp_required_simd_align}0' to an incomplete type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_sizeof_alignof_typeof_bitfield, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid application of '%select{sizeof|alignof|typeof}0' to bit-field"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_sizeof_nonfragile_interface, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"application of '%select{alignof|sizeof}1' to interface %0 is not supported on this architecture and platform"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_sizeof_pack_no_pack_name, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 does not refer to the name of a parameter pack"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_sizeof_pack_no_pack_name_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 does not refer to the name of a parameter pack; did you mean %1?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_spec_member_not_instantiated, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"specialization of member %q0 does not specialize an instantiated member"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_specialization_after_instantiation, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit specialization of %0 after instantiation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_specialize_member_of_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot specialize %select{|(with 'template<>') }0a member of an unspecialized template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_standalone_class_nested_name_specifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"forward declaration of %select{class|struct|interface|union|enum}0 cannot have a nested name specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_static_assert_expression_is_not_constant, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"static_assert expression is not an integral constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_static_assert_failed, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"static_assert failed%select{ %1|}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_static_block_func, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function declared in block scope cannot have 'static' storage class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_static_data_member_not_allowed_in_anon_struct, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"static data member %0 not allowed in anonymous struct"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_static_data_member_not_allowed_in_local_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"static data member %0 not allowed in local class %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_static_data_member_reinitialization, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"static data member %0 already has an initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_static_downcast_via_virtual, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot cast %0 to %1 via virtual base %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_static_function_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variables in function scope cannot be declared static"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_static_illegal_in_new, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the 'static' modifier for the array size is not legal in new expressions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_static_kernel, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"kernel functions cannot be declared static"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_static_main, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'main' is not allowed to be declared static"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_static_non_static, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"static declaration of %0 follows non-static declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_static_not_bitfield, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"static member %0 cannot be a bit-field"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_static_out_of_line, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'static' can only be specified inside the class definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_static_overrides_virtual, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'static' member function %0 overrides a virtual function in a base class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_statically_allocated_object, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"interface type cannot be statically allocated"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_stmt_attribute_invalid_on_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute cannot be applied to a declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_storage_class_for_static_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"static data member definition cannot specify a storage class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_storage_spec_on_catch_parm, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"@catch parameter cannot have storage specifier '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_storageclass_invalid_for_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"storage class specified for a member declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_subscript_function_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"subscript of pointer to function type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_subscript_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"subscript of pointer to incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_subscript_nonfragile_interface, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"subscript requires size of interface %0, which is not constant for this architecture and platform"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_super_in_lambda_unsupported, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of '__super' inside a lambda is unsupported"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_swift_abi_parameter_wrong_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' parameter must have pointer%select{| to unqualified pointer}1 type; type here is %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_swift_context_not_before_swift_error_result, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'swift_context' parameter can only be followed by 'swift_error_result' parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_swift_error_result_not_after_swift_context, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'swift_error_result' parameter must follow 'swift_context' parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_swift_error_result_not_last, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'swift_error_result' parameter must be last parameter of function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_swift_indirect_result_not_first, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'swift_indirect_result' parameters must be first parameters of function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_swift_param_attr_not_swiftcall, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' parameter can only be used with swiftcall calling convention"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_switch_explicit_conversion, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"switch condition type %0 requires explicit conversion to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_switch_incomplete_class_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"switch condition has incomplete class type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_switch_into_protected_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot jump from switch statement to this case label"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_switch_multiple_conversions, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"multiple conversions from switch condition type %0 to an integral or enumeration type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_synthesizing_arc_weak_property_disabled, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 9, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot synthesize weak property in file using manual reference counting"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_synthesizing_arc_weak_property_no_runtime, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 9, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot synthesize weak property because the current deployment target does not support weak references"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_systemz_invalid_tabort_code, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid transaction abort code"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_tag_definition_of_typedef, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"definition of type %0 conflicts with %select{typedef|type alias}1 of the same name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_tag_reference_conflict, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"implicit declaration introduced by elaborated type conflicts with %select{a declaration|a typedef|a type alias|a template}0 of the same name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_tag_reference_non_tag, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"elaborated type refers to %select{a non-tag type|a typedef|a type alias|a template|a type alias template|a template template argument}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_tagless_friend_type_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"friend type templates must use an elaborated type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_temp_copy_ambiguous, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ambiguous constructor call when %select{copying variable|copying parameter|returning object|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_temp_copy_deleted, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{copying variable|copying parameter|returning object|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1 invokes deleted constructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_temp_copy_incomplete, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"copying a temporary object of incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_temp_copy_no_viable, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no viable constructor %select{copying variable|copying parameter|returning object|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_address_of_non_pointer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address taken in non-type template argument for template parameter of reference type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_field, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument refers to non-static data member %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_list_different_arity, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{too few|too many}0 template arguments for %select{class template|function template|template template parameter|template}1 %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_member_ptr_base_derived_not_supported, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"sorry, non-type template argument of pointer-to-member type %1 that refers to member %q0 of a different class is not supported yet"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_method, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument refers to non-static member function %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_must_be_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template argument for non-type template parameter must be an expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_must_be_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template argument for template template parameter must be a class template%select{| or type alias template}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_must_be_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template argument for template type parameter must be a type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_must_be_type_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template argument for template type parameter must be a type; did you forget 'typename'?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_no_ref_bind, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template parameter of reference type %diff{$ cannot bind to template argument of type $|cannot bind to template of incompatible argument type}0,1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_nontype_ambig, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template argument for non-type template parameter is treated as function type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_not_address_constant, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument of type %0 is not a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_not_address_of, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument for template parameter of pointer type %0 must have its address taken"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_not_convertible, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument of type %0 cannot be converted to a value of type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_not_decl_ref, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument does not refer to any declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_not_ice, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument of type %0 is not an integral constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_not_integral_or_enumeral, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument of type %0 must have an integral or enumeration type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_not_object_or_func, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument does not refer to an object or function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_not_pointer_to_member_form, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument is not a pointer to member constant"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_not_valid_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template argument does not refer to a class or alias template, or template template parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_object_no_linkage, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument refers to %select{function|object}0 %1 that does not have linkage"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_overload_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template argument is the type of an unresolved overloaded function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_ref_bind_ignores_quals, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"reference binding of non-type template parameter %diff{of type $ to template argument of type $|to template argument}0,1 ignores qualifiers"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_reference_var, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument of reference type %0 is not an object"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_template_params_mismatch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template template argument has different template parameters than its corresponding template template parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_thread_local, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument refers to thread-local object"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_untyped_null_constant, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"null non-type template argument must be cast to template parameter type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_arg_wrongtype_null_constant, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"null non-type template argument of type %0 does not match template parameter of type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_decl_ref, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot refer to %select{class|variable}0 template %1 without a template argument list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_id_not_a_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template name refers to non-type template %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_inside_local_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"templates cannot be declared inside of a local class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_instantiate_undefined, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{implicit|explicit}0 instantiation of undefined template %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_instantiate_within_definition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{implicit|explicit}0 instantiation of template %1 within its own definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_kw_missing, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing 'template' keyword prior to dependent template name '%0%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_kw_refers_to_class_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0%1' instantiated to a class template, not a function template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_kw_refers_to_non_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 following the 'template' keyword does not refer to a template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_linkage, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"templates must have C++ linkage"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"member %0 declared as a template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_member_noparams, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"extraneous 'template<>' in declaration of member %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_missing_args, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of class template %0 requires template arguments"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_nontype_parm_bad_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"a non-type template parameter cannot have type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_nontype_parm_different_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template non-type parameter has a different type %0 in template %select{|template parameter }1redeclaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_outside_namespace_or_class_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"templates can only be declared in namespace or class scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_param_default_arg_missing, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template parameter missing a default argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_param_default_arg_redefinition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template parameter redefines default argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_param_different_kind, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template parameter has a different kind in template %select{|template parameter }0redeclaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_param_list_different_arity, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{too few|too many}0 template parameters in template %select{|template parameter }1redeclaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_param_list_matches_nontemplate, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template parameter list matching the non-templated nested type %0 should be empty ('template<>')"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_param_pack_default_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template parameter pack cannot have a default argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_param_pack_must_be_last_template_parameter, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template parameter pack must be the last template parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_param_shadow, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration of %0 shadows template parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_parameter_default_friend_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"default template argument not permitted on a friend template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_parameter_default_template_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot add a default template argument to the definition of a member of a class template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_parameter_pack_non_pack, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{template type|non-type template|template template}0 parameter%select{| pack}1 conflicts with previous %select{template type|non-type template|template template}0 parameter%select{ pack|}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_qualified_declarator_no_match, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"nested name specifier '%0' for declaration does not refer into a class, class template or class template partial specialization"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_recursion_depth_exceeded, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Report, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"recursive template instantiation exceeded maximum depth of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_spec_decl_class_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit specialization of %0 in class scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_spec_decl_friend, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot declare an explicit specialization in a friend"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_spec_decl_function_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit specialization of %0 in function scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_spec_decl_out_of_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 must originally be declared in namespace %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_spec_decl_out_of_scope_global, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 must originally be declared in the global scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_spec_default_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"default argument not permitted on an explicit %select{instantiation|specialization}0 of function %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_spec_extra_headers, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"extraneous template parameter list in template specialization or out-of-line template definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_spec_friend, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template specialization declaration cannot be a friend"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_spec_needs_header, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template specialization requires 'template<>'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_spec_needs_template_parameters, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template specialization or definition requires a template parameter list corresponding to the nested type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_spec_redecl_global_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 must occur at global scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_spec_redecl_out_of_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 not in a namespace enclosing %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_spec_unknown_kind, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"can only provide an explicit specialization for a class template, function template, variable template, or a member function, static data member, %select{or member class|member class, or member enumeration}0 of a class template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_tag_noparams, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"extraneous 'template<>' in declaration of %0 %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_template_parm_no_parms, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template template parameter must have its own template parameters"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_typedef, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"a typedef cannot be a template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_unnamed_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot declare a class template with no name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_template_variable_noparams, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"extraneous 'template<>' in declaration of variable %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_tentative_def_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"tentative definition has type %0 that is never completed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_this_capture, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'this' cannot be %select{implicitly |}0captured in this context"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_this_capture_with_copy_default, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'this' cannot be explicitly captured when the capture default is '='"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_this_static_member_func, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'this' cannot be%select{| implicitly}0 used in a static member function declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_thread_dynamic_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initializer for thread-local variable must be a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_thread_non_global, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' variables must have global storage"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_thread_non_thread, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"thread-local declaration of %0 follows non-thread-local declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_thread_nontrivial_dtor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type of thread-local variable has non-trivial destruction"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_thread_thread_different_kind, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"thread-local declaration of %0 with %select{static|dynamic}1 initialization follows declaration with %select{dynamic|static}1 initialization"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_thread_unsupported, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"thread-local storage is not supported for the current target"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_throw_abstract_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot throw an object of abstract type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_throw_incomplete, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot throw object of incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_throw_incomplete_ptr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot throw pointer to object of incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_tls_var_aligned_over_maximum, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"alignment (%0) of thread-local variable %1 is greater than the maximum supported alignment (%2) for a thread-local variable on this target"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_toomany_element_decls, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"only one element declaration is allowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_trailing_return_in_parens, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"trailing return type may not be nested within parentheses"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_trailing_return_without_auto, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function with trailing return type must specify return type 'auto', not %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_type_defined_in_alias_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 cannot be defined in a type alias template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_type_defined_in_condition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 cannot be defined in a condition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_type_defined_in_for_range, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"types may not be defined in a for range declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_type_defined_in_param_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 cannot be defined in a parameter type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_type_defined_in_result_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 cannot be defined in the result type of a function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_type_defined_in_type_specifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 cannot be defined in a type specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_type_mismatch_continuation_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type of property %0 in class extension does not match property type in primary class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_type_pack_element_out_of_bounds, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"a parameter pack may not be accessed at an out of bounds index"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_type_requires_extension, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of type %0 requires %1 extension to be enabled"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_type_tag_for_datatype_not_ice, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_type_tag_for_datatype_too_large, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression that can be represented by a 64 bit integer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_type_unsupported, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is not supported on this target"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_address_of, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address of %select{bit-field|vector element|property expression|register variable}0 requested"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_addrof_dtor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"taking the address of a destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_addrof_temporary, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"taking the address of a temporary object of type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_ambiguous_condition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conversion %diff{from $ to $|between types}0,1 is ambiguous"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_arc_assign_self, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot assign to 'self' outside of a method in the init family"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_arc_assign_self_class_method, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot assign to 'self' in a class method"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_arithmetic_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"arithmetic on a pointer to an incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_arr_assign_enumeration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"fast enumeration variables cannot be modified in ARC by default; declare the variable __strong to allow this"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_array_not_modifiable_lvalue, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array type %0 is not assignable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_assign_const, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{cannot assign to return value because function %1 returns a const value|cannot assign to variable %1 with const-qualified type %2|cannot assign to %select{non-|}1static data member %2 with const-qualified type %3|cannot assign to non-static data member within const member function %1|read-only variable is not assignable}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_bool_condition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"value of type %0 is not contextually convertible to 'bool'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_call_invalid_ordered_compare, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ordered compare requires two args of floating point type%diff{ ($ and $)|}0,1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_call_invalid_unary_fp, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"floating point classification requires argument of floating point type (passed in %0)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_call_not_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"called object type %0 is not a function or function pointer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_call_too_few_args, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_call_too_few_args_at_least, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_call_too_few_args_at_least_one, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, at least argument %1 must be specified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_call_too_few_args_at_least_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2; did you mean %3?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_call_too_few_args_one, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, single argument %1 was not specified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_call_too_few_args_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_call_too_many_args, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_call_too_many_args_at_most, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_call_too_many_args_at_most_one, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most single argument %1, have %2 arguments"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_call_too_many_args_at_most_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2; did you mean %3?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_call_too_many_args_one, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected single argument %1, have %2 arguments"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_call_too_many_args_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_cast_to_incomplete, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cast to incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_cast_to_union_no_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cast to union type from type %0 not present in union"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_choose_expr_requires_constant, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'__builtin_choose_expr' requires a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_comparison_of_distinct_blocks, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"comparison of distinct block types%diff{ ($ and $)|}0,1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_comparison_of_distinct_pointers, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"comparison of distinct pointer types%diff{ ($ and $)|}0,1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_comparison_of_fptr_to_void, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"equality comparison between function pointer and void pointer (%0 and %1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_comparison_of_pointer_integer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"comparison between pointer and integer (%0 and %1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_cond_expect_int_float, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"used type %0 where integer or floating point type is required"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_cond_expect_nonfloat, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"used type %0 where floating point type is not allowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_cond_expect_scalar, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"used type %0 where arithmetic or pointer type is required"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_cond_incompatible_operands, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incompatible operand types%diff{ ($ and $)|}0,1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_cond_incompatible_operands_null, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-pointer operand type %0 incompatible with %select{NULL|nullptr}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_convert_incompatible, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}5 vs %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}6)}4"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_convert_incompatible_block_pointer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incompatible block pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_converted_constant_expression, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"value of type %0 is not implicitly convertible to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_converted_constant_expression_disallowed, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conversion from %0 to %1 is not allowed in a converted constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_converted_constant_expression_indirect, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conversion from %0 to %1 in converted constant expression would bind reference to a temporary"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_decl_incomplete_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable has incomplete type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_deleted_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conversion function %diff{from $ to $|between types}0,1 invokes a deleted function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_duplicate_vector_components_not_mlvalue, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"vector is not assignable (contains duplicate components)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_expect_int, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"used type %0 where integer is required"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_expect_scalar_operand, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"operand of type %0 where arithmetic or pointer type is required"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_expression_not_modifiable_lvalue, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expression is not assignable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_field_variable_size, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"fields must have a constant size: 'variable length array in structure' extension will never be supported"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_illegal_increment_decrement, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot %select{decrement|increment}1 value of type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_incompatible_address_space, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes address space of pointer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_incompatible_ownership, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes retain/release properties of pointer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_incomplete_array_needs_initializer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"definition of variable with array type needs an explicit size or an initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_incomplete_tag, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incomplete definition of type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_incomplete_type_not_modifiable_lvalue, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incomplete type %0 is not assignable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_indirection_requires_pointer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"indirection requires pointer operand (%0 invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_invalid_lvalue_addrof, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot take the address of an rvalue of type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_invalid_lvalue_addrof_addrof_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"extra '&' taking address of overloaded function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_invalid_operands, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid operands to binary expression (%0 and %1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_invalid_restrict_invalid_pointee, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"pointer to function type %0 may not be 'restrict' qualified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_invalid_restrict_not_pointer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"restrict requires a pointer or reference (%0 is invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_invalid_restrict_not_pointer_noarg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"restrict requires a pointer or reference"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_ivar_variable_size, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"instance variables must have a constant size"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_lvalue_casts_not_supported, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"assignment to cast is illegal, lvalue casts are not supported"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_member_reference_arrow, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"member reference type %0 is not a pointer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_member_reference_ivar, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 does not have a member named %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_member_reference_ivar_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 does not have a member named %1; did you mean %2?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_member_reference_struct_union, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"member reference base type %0 is not a structure or union"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_member_reference_suggestion, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"member reference type %0 is %select{a|not a}1 pointer; did you mean to use '%select{->|.}1'?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_member_reference_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot refer to type member %0 in %1 with '%select{.|->}2'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_member_reference_unknown, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot refer to member %0 in %1 with '%select{.|->}2'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_missing_return_type_incompatible, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%diff{return type $ must match previous return type $|return type must match previous return type}0,1 when %select{block literal|lambda expression}2 has unspecified explicit return type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_negative_array_size, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array size is negative"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_non_object_not_modifiable_lvalue, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-object type %0 is not assignable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_nonviable_condition, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no viable conversion%select{%diff{ from $ to $|}1,2|%diff{ from returned value of type $ to function return type $|}1,2}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_nonviable_condition_incomplete, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no viable conversion%diff{ from $ to incomplete type $|}0,1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_op_on_nonoverlapping_address_space_pointers, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{comparison between %diff{ ($ and $)|}0,1|arithmetic operation with operands of type %diff{ ($ and $)|}0,1|conditional operator with the second and third operands of type %diff{ ($ and $)|}0,1}2 which are pointers to non-overlapping address spaces"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_pointer_arith_function_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_pointer_arith_void_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"arithmetic on%select{ a|}0 pointer%select{|s}0 to void"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_sclass_fscope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"illegal storage class on file-scoped variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_sclass_func, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"illegal storage class on function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_statement_requires_integer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"statement requires expression of integer type (%0 invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_statement_requires_scalar, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"statement requires expression of scalar type (%0 invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_sub_ptr_compatible, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%diff{$ and $ are not pointers to compatible types|pointers to incompatible types}0,1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_subscript_not_integer, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array subscript is not an integer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_subscript_value, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"subscripted value is not an array, pointer, or vector"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_unary_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid argument type %0 to unary expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_vector_lengths_not_equal, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"vector operands do not have the same number of elements (%0 and %1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_vector_not_convertable, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot convert between vector values of different size (%0 and %1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_vector_not_convertable_non_scalar, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot convert between vector and non-scalar values (%0 and %1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typecheck_zero_array_size, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"zero-length arrays are not permitted in C++"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typedef_changes_linkage, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unsupported: typedef changes linkage of anonymous type, but linkage was already computed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typedef_not_bitfield, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"typedef member %0 cannot be a bit-field"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typedef_not_identifier, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"typedef name must be an identifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typename_missing, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing 'typename' prior to dependent type name '%0%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typename_nested_not_found, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no type named %0 in %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typename_nested_not_found_enable_if, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no type named 'type' in %0; 'enable_if' cannot be used to disable this declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typename_nested_not_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"typename specifier refers to non-type member %0 in %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_typename_refers_to_using_value_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"typename specifier refers to a dependent using declaration for a value %0 in %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unavailable, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is unavailable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unavailable_in_arc, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 10, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is unavailable in ARC"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unavailable_message, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is unavailable: %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_uncasted_call_of_unknown_any, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 has unknown return type; cast the call to its declared return type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_uncasted_send_to_unknown_any_method, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no known method %select{%objcinstance1|%objcclass1}0; cast the message send to the method's return type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_uncasted_use_of_unknown_any, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 has unknown type; cast it to its declared type to use it"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_undeclared_boxing_method, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration of %0 is missing in %1 class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_undeclared_label_use, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of undeclared label %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_undeclared_objc_literal_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"definition of class %0 must be available to use Objective-C %select{array literals|dictionary literals|numeric literals|boxed expressions|string literals}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_undeclared_protocol, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot find protocol declaration for %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_undeclared_protocol_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot find protocol declaration for %0; did you mean %1?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_undeclared_use, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of undeclared %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_undeclared_use_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of undeclared %0; did you mean %1?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_undeclared_var_use, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of undeclared identifier %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_undeclared_var_use_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of undeclared identifier %0; did you mean %1?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_undef_interface, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot find interface declaration for %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_undef_interface_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot find interface declaration for %0; did you mean %1?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_undef_superclass, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot find interface declaration for %0, superclass of %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_undef_superclass_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot find interface declaration for %0, superclass of %1; did you mean %2?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_undefined_inline_var, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"inline variable %q0 is not defined"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_underlying_type_of_incomplete_enum, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot determine underlying type of incomplete enumeration type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unexpanded_parameter_pack, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{expression|base type|declaration type|data member type|bit-field size|static assertion|fixed underlying type|enumerator value|using declaration|friend declaration|qualifier|initializer|default argument|non-type template parameter type|exception type|partial specialization|__if_exists name|__if_not_exists name|lambda|block}0 contains%plural{0: an|:}1 unexpanded parameter pack%plural{0:|1: %2|2:s %2 and %3|:s %2, %3, ...}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unexpected_friend, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"friends can only be classes or functions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unexpected_interface, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected interface name %0: expected expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unexpected_namespace, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected namespace name %0: expected expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unexpected_typedef, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unexpected type name %0: expected expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_uninitialized_member_for_assign, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot define the implicit copy assignment operator for %0, because non-static %select{reference|const}1 member %2 cannot use copy assignment operator"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_uninitialized_member_in_ctor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{constructor for %1|implicit default constructor for %1|cannot use constructor inherited from %1:}0 must explicitly initialize the %select{reference|const}2 member %3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_union_as_base_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unions cannot be base classes"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_union_member_of_reference_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"union member %0 has reference type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unknown_any_addrof, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the address of a declaration with unknown type can only be cast to a pointer type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unknown_any_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function %0 with unknown type must be given a function type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unknown_any_var_function_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable %0 with unknown type cannot be given a function type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unknown_nested_typename_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no type named %0 in %1; did you mean %select{|simply }2%3?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unknown_receiver_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unknown receiver %0; did you mean %1?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unknown_type_or_class_name_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unknown %select{type|class}1 name %0; did you mean %2?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unknown_typename, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unknown type name %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unknown_typename_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unknown type name %0; did you mean %1?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unqualified_pointer_member_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"must explicitly qualify name of member function when taking its address"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unsupported_unknown_any_call, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"call to unsupported expression with unknown type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unsupported_unknown_any_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 has unknown type, which is not supported for this kind of declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_unsupported_unknown_any_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unsupported expression with unknown type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_upcast_to_inaccessible_base, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot cast %0 to its %select{private|protected}2 base class %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_use_continuation_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"illegal redeclaration of property in class extension %0 (attribute must be 'readwrite', while its primary must be 'readonly')"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_use_continuation_class_redeclaration_readwrite, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"illegal redeclaration of 'readwrite' property in class extension %0 (perhaps you intended this to be a 'readwrite' redeclaration of a 'readonly' public property?)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_use_of_default_argument_to_function_declared_later, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of default argument to function %0 that is declared later in class %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_use_of_tag_name_without_tag, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"must use '%1' tag to refer to type %0%select{| in this scope}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_use_with_wrong_tag, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of %0 with tag type that does not match previous declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_using_decl_can_not_refer_to_class_member, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"using declaration cannot refer to class member"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_using_decl_can_not_refer_to_namespace, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"using declaration cannot refer to a namespace"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_using_decl_can_not_refer_to_scoped_enum, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"using declaration cannot refer to a scoped enumerator"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_using_decl_conflict, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"target of using declaration conflicts with declaration already in scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_using_decl_conflict_reverse, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration conflicts with target of using declaration already in scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_using_decl_constructor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"using declaration cannot refer to a constructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_using_decl_constructor_not_in_direct_base, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is not a direct base of %1, cannot inherit constructors"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_using_decl_destructor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"using declaration cannot refer to a destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_using_decl_friend, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot befriend target of using declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_using_decl_nested_name_specifier_is_current_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"using declaration refers to its own class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_using_decl_nested_name_specifier_is_not_base_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"using declaration refers into '%0', which is not a base class of %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_using_decl_nested_name_specifier_is_not_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"using declaration in class refers into '%0', which is not a class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_using_decl_redeclaration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"redeclaration of using declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_using_decl_template_id, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"using declaration cannot refer to a template specialization"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_using_dependent_value_is_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"dependent using declaration resolved to type without 'typename'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_using_directive_member_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no namespace named %0 in %1; did you mean %select{|simply }2%3?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_using_directive_suggest, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no namespace named %0; did you mean %1?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_using_requires_qualname, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"using declaration requires a qualified name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_using_typename_non_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'typename' keyword used on a non-type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_uuidof_with_multiple_guids, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot call operator __uuidof on a type with multiple GUIDs"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_uuidof_without_guid, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot call operator __uuidof on a type with no GUID"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_va_arg_in_device, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"CUDA device code does not support va_arg"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_va_start_used_in_non_variadic_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'va_start' used in function with fixed args"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_va_start_used_in_wrong_abi_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'va_start' used in %select{System V|Win64}0 ABI function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_value_init_for_array_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array types cannot be value-initialized"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_value_init_for_function_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function types cannot be value-initialized"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_var_concept_not_initialized, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable concept declaration must be initialized"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_var_partial_spec_redeclared, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable template partial specialization %0 cannot be redefined"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_var_spec_no_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no variable template matches%select{| partial}0 specialization"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_var_spec_no_template_but_method, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no variable template matches specialization; did you mean to use %0 as function template instead?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_variable_concept_bool_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declared type of variable concept must be 'bool'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_variable_instantiates_to_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{variable|static data member}0 instantiated with function type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_variable_object_no_init, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable-sized object may not be initialized"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_variably_modified_new_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'new' cannot allocate object of variably modified type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_variably_modified_nontype_template_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template parameter of variably modified type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_variably_modified_template_arg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variably modified type %0 cannot be used as a template argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_variably_modified_typeid, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'typeid' of variably modified type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_variadic_device_fn, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"CUDA device code does not support variadic functions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_vecstep_non_scalar_vector_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'vec_step' requires built-in scalar or vector type, %0 invalid"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_vector_incorrect_num_initializers, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{too many|too few}0 elements in vector initialization (expected %1 elements, have %2)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_virtual_in_union, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unions cannot have virtual functions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_virtual_member_function_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'virtual' cannot be specified on member function templates"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_virtual_non_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'virtual' can only appear on non-static member functions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_virtual_out_of_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'virtual' can only be specified inside the class definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_vla_decl_has_extern_linkage, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable length array declaration cannot have 'extern' linkage"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_vla_decl_has_static_storage, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable length array declaration cannot have 'static' storage duration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_vla_decl_in_file_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable length array declaration not allowed at file scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_vla_in_sfinae, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable length array cannot be formed during template argument deduction"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_vm_decl_has_extern_linkage, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variably modified type declaration cannot have 'extern' linkage"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_vm_decl_in_file_scope, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variably modified type declaration not allowed at file scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_vm_func_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function declaration cannot have variably modified type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_void_only_param, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'void' must be the first and only parameter if specified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_void_param_qualified, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'void' as parameter must not have type qualifiers"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_wrong_sampler_addressspace, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"sampler type cannot be used with the __local and __global address space qualifiers"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.err_x86_builtin_32_bit_tgt, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"this builtin is only available on x86-64 targets"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_arc_weak_ivar_access, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"dereferencing a __weak pointer is not allowed due to possible null value caused by race condition, assign it to strong variable first"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_bad_category_property_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property implementation must have its declaration in the category %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_bad_property_context, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property implementation must be in a class or category implementation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_bad_property_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property implementation must have its declaration in interface %0 or one of its extensions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_cannot_find_suitable_accessor, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot find suitable %select{getter|setter}0 for property %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_category_property, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property declared in category %0 cannot be implemented in class implementation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_dealloc_bad_result_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"dealloc return type must be correctly specified as 'void' under ARC, instead of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_duplicate_ivar_use, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"synthesized properties %0 and %1 both claim instance variable %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_dynamic_property_ivar_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"dynamic property cannot have instance variable specification"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_implicit_ivar_access, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"instance variable %0 cannot be accessed because 'self' has been redeclared"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_ivar_in_superclass_use, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property %0 attempting to use instance variable %1 declared in super class %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_ivar_use_in_class_method, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"instance variable %0 accessed in class method"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_method_not_found_with_typo, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{instance|class}1 method %0 not found ; did you mean %2?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_missing_method_context, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing context for method declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_missing_property_context, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"missing context for property implementation declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_missing_property_interface, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property implementation in a category with no category declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_missing_property_ivar_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"synthesized property %0 must either be named the same as a compatible instance variable or must explicitly name an instance variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_no_subobject_property_setting, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"expression is not assignable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_no_super_class_message, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no @interface declaration found in class messaging of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_objc_synchronized_expects_object, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"@synchronized requires an Objective-C object type (%0 invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_objc_throw_expects_object, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"@throw requires an Objective-C object type (%0 invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_opencl_cast_non_zero_to_event_t, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot cast non-zero value '%0' to 'event_t'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_private_ivar_access, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_AccessControl, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"instance variable %0 is private"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_property_accessor_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type of property %0 (%1) does not match type of accessor %2 (%3)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_property_implemented, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property %0 is already implemented"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_property_ivar_type, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type of property %0 (%1) does not match type of instance variable %2 (%3)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_property_setter_ambiguous_use, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"synthesized properties %0 and %1 both claim setter %2 - use of this setter will cause unexpected behavior"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_protected_ivar_access, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_AccessControl, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"instance variable %0 is protected"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_readonly_message_assignment, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"assigning to 'readonly' return result of an Objective-C message not allowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_reference_property, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property of reference type is not supported"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_rethrow_used_outside_catch, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"@throw (rethrow) used outside of a @catch block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_root_class_cannot_use_super, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 cannot use 'super' because it is a root class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_strong_property, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"existing instance variable %1 for strong property %0 may not be __weak"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_synthesize_category_decl, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"@synthesize not allowed in a category's implementation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_synthesize_on_class_property, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"@synthesize not allowed on a class property %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.error_weak_property, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"existing instance variable %1 for __weak property %0 must be __weak"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_aggregate_init_not_constant, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 92/*, SKIP_ARG*/, /*KEEP_STR*/"initializer for aggregate is not a compile-time constant"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_anonymous_record_with_anonymous_type, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 370/*, SKIP_ARG*/, /*KEEP_STR*/"anonymous types declared in an anonymous %select{struct|union}0 are an extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_anonymous_record_with_type, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 313/*, SKIP_ARG*/, /*KEEP_STR*/"types declared in an anonymous %select{struct|union}0 are a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_anonymous_struct_union_qualified, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 449/*, SKIP_ARG*/, /*KEEP_STR*/"anonymous %select{struct|union}0 cannot be '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_anonymous_union, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 90/*, SKIP_ARG*/, /*KEEP_STR*/"anonymous unions are a C11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_array_init_copy, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 216/*, SKIP_ARG*/, /*KEEP_STR*/"initialization of an array %diff{of type $ from a compound literal of type $|from a compound literal}0,1 is a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_array_init_parens, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 211/*, SKIP_ARG*/, /*KEEP_STR*/"parenthesized initialization of a member array is a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_array_size_conversion, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 69/*, SKIP_ARG*/, /*KEEP_STR*/"implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_auto_type_specifier, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 69/*, SKIP_ARG*/, /*KEEP_STR*/"'auto' type specifier is a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_c11_anonymous_struct, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 90/*, SKIP_ARG*/, /*KEEP_STR*/"anonymous structs are a C11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_c99_array_usage, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 92/*, SKIP_ARG*/, /*KEEP_STR*/"%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_c99_flexible_array_member, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 92/*, SKIP_ARG*/, /*KEEP_STR*/"flexible array members are a C99 feature"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_cast_fn_obj, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 449/*, SKIP_ARG*/, /*KEEP_STR*/"cast between pointer-to-function and pointer-to-object is an extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_cce_narrowing, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 73/*, SKIP_ARG*/, /*KEEP_STR*/"%select{case value|enumerator value|non-type template argument|array size|constexpr if condition}0 %select{cannot be narrowed from type %2 to %3|evaluates to %2, which cannot be narrowed to type %3}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_complex_component_init, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 105/*, SKIP_ARG*/, /*KEEP_STR*/"complex initialization specifying real and imaginary components is an extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_constexpr_body_invalid_stmt, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 77/*, SKIP_ARG*/, /*KEEP_STR*/"use of this statement in a constexpr %select{function|constructor}0 is a C++14 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_constexpr_body_multiple_return, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 77/*, SKIP_ARG*/, /*KEEP_STR*/"multiple return statements in constexpr function is a C++14 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_constexpr_function_never_constant_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 281/*, SKIP_ARG*/, /*KEEP_STR*/"constexpr %select{function|constructor}0 never produces a constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_constexpr_local_var, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 77/*, SKIP_ARG*/, /*KEEP_STR*/"variable declaration in a constexpr %select{function|constructor}0 is a C++14 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_constexpr_type_definition, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 77/*, SKIP_ARG*/, /*KEEP_STR*/"type definition in a constexpr %select{function|constructor}0 is a C++14 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_coroutine_without_co_await_co_yield, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 13, 115/*, SKIP_ARG*/, /*KEEP_STR*/"'co_return' used in a function that uses neither 'co_await' nor 'co_yield'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_cxx14_attr, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 77/*, SKIP_ARG*/, /*KEEP_STR*/"use of the %0 attribute is a C++14 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_cxx1z_attr, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 80/*, SKIP_ARG*/, /*KEEP_STR*/"use of the %0 attribute is a C++1z extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_default_init_const, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 317/*, SKIP_ARG*/, /*KEEP_STR*/"default initialization of an object of const type %0%select{| without a user-provided default constructor}1 is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_delete_void_ptr_operand, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 129/*, SKIP_ARG*/, /*KEEP_STR*/"cannot delete expression with pointer-to-'void' type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_deprecated_string_literal_conversion, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 640/*, SKIP_ARG*/, /*KEEP_STR*/"ISO C++11 does not allow conversion from string literal to %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_designated_init, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 92/*, SKIP_ARG*/, /*KEEP_STR*/"designated initializers are a C99 feature"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_duplicate_declspec, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 158/*, SKIP_ARG*/, /*KEEP_STR*/"duplicate '%0' declaration specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_empty_struct_union, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 220/*, SKIP_ARG*/, /*KEEP_STR*/"empty %select{struct|union}0 is a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_enum_friend, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 69/*, SKIP_ARG*/, /*KEEP_STR*/"befriending enumeration type %0 is a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_enum_too_large, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 171/*, SKIP_ARG*/, /*KEEP_STR*/"enumeration values exceed range of largest integer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_enum_value_not_int, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 449/*, SKIP_ARG*/, /*KEEP_STR*/"ISO C restricts enumerator values to range of 'int' (%0 is too %select{small|large}1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_enumerator_increment_too_large, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 171/*, SKIP_ARG*/, /*KEEP_STR*/"incremented enumerator value %0 is not representable in the largest integer type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_enumerator_too_large, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 322/*, SKIP_ARG*/, /*KEEP_STR*/"enumerator value is not representable in the underlying type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_equivalent_internal_linkage_decl_in_modules, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 16, 362/*, SKIP_ARG*/, /*KEEP_STR*/"ambiguous use of internal linkage declaration %0 defined in multiple modules"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_excess_initializers, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"excess elements in %select{array|vector|scalar|union|struct}0 initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_excess_initializers_in_char_array_initializer, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"excess elements in char array initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_explicit_conversion_functions, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 69/*, SKIP_ARG*/, /*KEEP_STR*/"explicit conversion functions are a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_explicit_instantiation_after_specialization, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 69/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation of %0 that occurs after an explicit specialization will be ignored (C++11 extension)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_explicit_instantiation_duplicate, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 335/*, SKIP_ARG*/, /*KEEP_STR*/"duplicate explicit instantiation of %0 ignored as a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_explicit_instantiation_without_qualified_id, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 449/*, SKIP_ARG*/, /*KEEP_STR*/"qualifier in explicit instantiation of %q0 requires a template-id (a typedef is not permitted)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_explicit_specialization_storage_class, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit specialization cannot have a storage class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_expr_not_ice, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 223/*, SKIP_ARG*/, /*KEEP_STR*/"expression is not an %select{integer|integral}0 constant expression; folding it to a constant is a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_flexible_array_empty_aggregate_gnu, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 220/*, SKIP_ARG*/, /*KEEP_STR*/"flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_flexible_array_empty_aggregate_ms, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 328/*, SKIP_ARG*/, /*KEEP_STR*/"flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_flexible_array_in_array, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 186/*, SKIP_ARG*/, /*KEEP_STR*/"%0 may not be used as an array element due to flexible array member"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_flexible_array_in_struct, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 186/*, SKIP_ARG*/, /*KEEP_STR*/"%0 may not be nested in a struct due to flexible array member"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_flexible_array_init, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 221/*, SKIP_ARG*/, /*KEEP_STR*/"flexible array initialization is a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_flexible_array_union_gnu, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 222/*, SKIP_ARG*/, /*KEEP_STR*/"flexible array member %0 in a union is a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_flexible_array_union_ms, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 328/*, SKIP_ARG*/, /*KEEP_STR*/"flexible array member %0 in a union is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_for_range_begin_end_types_differ, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 80/*, SKIP_ARG*/, /*KEEP_STR*/"'begin' and 'end' returning different types (%0 and %1) is a C++1z extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_forward_ref_enum, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 449/*, SKIP_ARG*/, /*KEEP_STR*/"ISO C forbids forward references to 'enum' types"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_forward_ref_enum_def, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 227/*, SKIP_ARG*/, /*KEEP_STR*/"redeclaration of already-defined enum %0 is a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_found_via_dependent_bases_lookup, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 335/*, SKIP_ARG*/, /*KEEP_STR*/"use of identifier %0 found via unqualified lookup into dependent bases of class templates is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_freestanding_complex, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 449/*, SKIP_ARG*/, /*KEEP_STR*/"complex numbers are an extension in a freestanding C99 implementation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_friend_tag_redecl_outside_namespace, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 337/*, SKIP_ARG*/, /*KEEP_STR*/"unqualified friend declaration referring to type outside of the nearest enclosing namespace is a Microsoft extension; add a nested name specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_function_specialization_in_class, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 335/*, SKIP_ARG*/, /*KEEP_STR*/"explicit specialization of %0 within class scope is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_gnu_anonymous_struct, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 210/*, SKIP_ARG*/, /*KEEP_STR*/"anonymous structs are a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_gnu_ptr_func_arith, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 452/*, SKIP_ARG*/, /*KEEP_STR*/"arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2 is a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_gnu_subscript_void_type, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 452/*, SKIP_ARG*/, /*KEEP_STR*/"subscript of a pointer to void is a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_gnu_void_ptr, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 452/*, SKIP_ARG*/, /*KEEP_STR*/"arithmetic on%select{ a|}0 pointer%select{|s}0 to void is a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_goto_into_protected_scope, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 329/*, SKIP_ARG*/, /*KEEP_STR*/"jump from this goto statement to its label is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_implicit_exception_spec_mismatch, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 245/*, SKIP_ARG*/, /*KEEP_STR*/"function previously declared with an %select{explicit|implicit}0 exception specification redeclared with an %select{implicit|explicit}0 exception specification"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_implicit_function_decl, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 248/*, SKIP_ARG*/, /*KEEP_STR*/"implicit declaration of function %0 is invalid in C99"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_implicit_lib_function_decl, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 248/*, SKIP_ARG*/, /*KEEP_STR*/"implicitly declaring library function '%0' with type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_in_class_initializer_float_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 229/*, SKIP_ARG*/, /*KEEP_STR*/"in-class initializer for static data member of type %0 is a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_in_class_initializer_float_type_cxx11, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 522/*, SKIP_ARG*/, /*KEEP_STR*/"in-class initializer for static data member of type %0 requires 'constexpr' specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_in_class_initializer_non_constant, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 223/*, SKIP_ARG*/, /*KEEP_STR*/"in-class initializer for static data member is not a constant expression; folding it to a constant is a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_incomplete_in_exception_spec, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 323/*, SKIP_ARG*/, /*KEEP_STR*/"%select{|pointer to |reference to }0incomplete type %1 is not allowed in exception specification"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_increment_bool, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 268/*, SKIP_ARG*/, /*KEEP_STR*/"ISO C++1z does not allow incrementing expression of type bool"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_init_capture, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 3, 77/*, SKIP_ARG*/, /*KEEP_STR*/"initialized lambda captures are a C++14 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_init_list_constant_narrowing, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 73/*, SKIP_ARG*/, /*KEEP_STR*/"constant expression evaluates to %0 which cannot be narrowed to type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_init_list_type_narrowing, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 73/*, SKIP_ARG*/, /*KEEP_STR*/"type %0 cannot be narrowed to %1 in initializer list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_init_list_variable_narrowing, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 73/*, SKIP_ARG*/, /*KEEP_STR*/"non-constant-expression cannot be narrowed from type %0 to %1 in initializer list"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_initializer_string_for_char_array_too_long, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initializer-string for char array is too long"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_inline_variable, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 80/*, SKIP_ARG*/, /*KEEP_STR*/"inline variables are a C++1z extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_integer_complement_complex, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 449/*, SKIP_ARG*/, /*KEEP_STR*/"ISO C does not support '~' for complex conjugation of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_integer_complex, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 215/*, SKIP_ARG*/, /*KEEP_STR*/"complex integer types are a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_integer_increment_complex, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 449/*, SKIP_ARG*/, /*KEEP_STR*/"ISO C does not support '++'/'--' on complex integer type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_internal_in_extern_inline, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 523/*, SKIP_ARG*/, /*KEEP_STR*/"static %select{function|variable}0 %1 is used in an inline function with external linkage"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_internal_in_extern_inline_quiet, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 523/*, SKIP_ARG*/, /*KEEP_STR*/"static %select{function|variable}0 %1 is used in an inline function with external linkage"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_invalid_sign_spec, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 449/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' cannot be signed or unsigned"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_main_returns_nonint, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 307/*, SKIP_ARG*/, /*KEEP_STR*/"return type of 'main' is not 'int'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_main_used, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 306/*, SKIP_ARG*/, /*KEEP_STR*/"ISO C++ does not allow 'main' to be used by a program"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_many_braces_around_scalar_init, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 309/*, SKIP_ARG*/, /*KEEP_STR*/"too many braces around scalar initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_member_redeclared, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 475/*, SKIP_ARG*/, /*KEEP_STR*/"class member cannot be redeclared"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_mismatched_exception_spec, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 323/*, SKIP_ARG*/, /*KEEP_STR*/"exception specification in declaration does not match previous declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_mismatched_exception_spec_explicit_instantiation, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 323/*, SKIP_ARG*/, /*KEEP_STR*/"exception specification in explicit instantiation does not match instantiated one"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_missing_declspec, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration specifier missing, defaulting to 'int'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_missing_exception_specification, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 346/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is missing exception specification '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_missing_type_specifier, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 249/*, SKIP_ARG*/, /*KEEP_STR*/"type specifier missing, defaults to 'int'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_mixed_decls_code, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 127/*, SKIP_ARG*/, /*KEEP_STR*/"ISO C90 forbids mixing declarations and code"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_module_import_in_extern_c, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 16, 361/*, SKIP_ARG*/, /*KEEP_STR*/"import of C++ module '%0' appears within extern \"C\" language linkage specification"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_module_import_not_at_top_level_noop, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 16, 363/*, SKIP_ARG*/, /*KEEP_STR*/"redundant #include of module '%0' appears within %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_ms_anonymous_record, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 313/*, SKIP_ARG*/, /*KEEP_STR*/"anonymous %select{structs|unions}0 are a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_ms_cast_fn_obj, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 314/*, SKIP_ARG*/, /*KEEP_STR*/"static_cast between pointer-to-function and pointer-to-object is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_ms_delayed_template_argument, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 335/*, SKIP_ARG*/, /*KEEP_STR*/"using the undeclared type %0 as a default template argument is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_ms_deref_template_argument, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 335/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument containing a dereference operation is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_ms_explicit_constructor_call, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 325/*, SKIP_ARG*/, /*KEEP_STR*/"explicit constructor calls are a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_ms_forward_ref_enum, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 321/*, SKIP_ARG*/, /*KEEP_STR*/"forward references to 'enum' types are a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_ms_impcast_fn_obj, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 314/*, SKIP_ARG*/, /*KEEP_STR*/"implicit conversion between pointer-to-function and pointer-to-object is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_ms_missing_exception_specification, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 323/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is missing exception specification '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_ms_template_spec_redecl_out_of_scope, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 335/*, SKIP_ARG*/, /*KEEP_STR*/"%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 outside namespace enclosing %2 is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_ms_template_type_arg_missing_typename, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 335/*, SKIP_ARG*/, /*KEEP_STR*/"template argument for template type parameter must be a type; omitted 'typename' is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_ms_using_declaration_inaccessible, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_AccessControl, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 338/*, SKIP_ARG*/, /*KEEP_STR*/"using declaration referring to inaccessible member '%0' (which refers to accessible member '%1') is a Microsoft compatibility extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_mutable_reference, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 331/*, SKIP_ARG*/, /*KEEP_STR*/"'mutable' on a reference type is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_nested_name_member_ref_lookup_ambiguous, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 18/*, SKIP_ARG*/, /*KEEP_STR*/"lookup of %0 in member access expression is ambiguous; using member of %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_nested_name_spec_is_enum, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 69/*, SKIP_ARG*/, /*KEEP_STR*/"use of enumeration in a nested name specifier is a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_nested_pointer_qualifier_mismatch, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 260/*, SKIP_ARG*/, /*KEEP_STR*/"%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers in nested pointer types"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_new_paren_array_nonconst, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"when type is in parentheses, array cannot have dynamic size"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_no_declarators, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 345/*, SKIP_ARG*/, /*KEEP_STR*/"declaration does not declare anything"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_no_named_members_in_struct_union, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 220/*, SKIP_ARG*/, /*KEEP_STR*/"%select{struct|union}0 without named members is a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_nonclass_type_friend, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 69/*, SKIP_ARG*/, /*KEEP_STR*/"non-class friend type %0 is a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_noreturn_main, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 306/*, SKIP_ARG*/, /*KEEP_STR*/"'main' is not allowed to be declared _Noreturn"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_offsetof_extended_field_designator, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 177/*, SKIP_ARG*/, /*KEEP_STR*/"using extended field designator is an extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_offsetof_non_pod_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 285/*, SKIP_ARG*/, /*KEEP_STR*/"offset of on non-POD type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_offsetof_non_standardlayout_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 285/*, SKIP_ARG*/, /*KEEP_STR*/"offset of on non-standard-layout type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_omp_loop_not_canonical_init, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 427/*, SKIP_ARG*/, /*KEEP_STR*/"initialization clause of OpenMP for loop is not in canonical form ('var = init' or 'T var = init')"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_operator_new_delete_declared_inline, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 274/*, SKIP_ARG*/, /*KEEP_STR*/"replacement function %0 cannot be declared 'inline'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_out_of_line_declaration, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 430/*, SKIP_ARG*/, /*KEEP_STR*/"out-of-line declaration of a member must be a definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_override_exception_spec, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 323/*, SKIP_ARG*/, /*KEEP_STR*/"exception specification of overriding function is more lax than base version"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_param_default_argument_redefinition, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 319/*, SKIP_ARG*/, /*KEEP_STR*/"redefinition of default argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_param_not_declared, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 449/*, SKIP_ARG*/, /*KEEP_STR*/"parameter %0 was not declared, defaulting to type 'int'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_param_promoted_not_compatible_with_prototype, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 294/*, SKIP_ARG*/, /*KEEP_STR*/"%diff{promoted type $ of K&R function parameter is not compatible with the parameter type $|promoted type of K&R function parameter is not compatible with parameter type}0,1 declared in a previous prototype"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_plain_complex, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"plain '_Complex' requires a type specifier; assuming '_Complex double'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_predef_outside_function, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 461/*, SKIP_ARG*/, /*KEEP_STR*/"predefined identifier is only valid inside function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_pseudo_dtor_on_void, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 339/*, SKIP_ARG*/, /*KEEP_STR*/"pseudo-destructors on type void are a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_pure_function_definition, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 332/*, SKIP_ARG*/, /*KEEP_STR*/"function definition with pure-specifier is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_redefinition_of_typedef, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 570/*, SKIP_ARG*/, /*KEEP_STR*/"redefinition of typedef %0 is a C11 feature"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_register_storage_class, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 478/*, SKIP_ARG*/, /*KEEP_STR*/"ISO C++1z does not allow 'register' storage class specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_retained_language_linkage, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 485/*, SKIP_ARG*/, /*KEEP_STR*/"friend function %0 retaining previous language linkage is an extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_return_has_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 487/*, SKIP_ARG*/, /*KEEP_STR*/"%select{void function|void method|constructor|destructor}1 %0 should not return a value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_return_has_void_expr, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 449/*, SKIP_ARG*/, /*KEEP_STR*/"void %select{function|method|block}1 %0 should not return void expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_return_missing_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 487/*, SKIP_ARG*/, /*KEEP_STR*/"non-void %select{function|method}1 %0 should return a value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_rvalue_to_reference_access_ctor, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_AccessControl, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 50/*, SKIP_ARG*/, /*KEEP_STR*/"C++98 requires an accessible copy constructor for class %2 when binding a reference to a temporary; was %select{private|protected}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_rvalue_to_reference_temp_copy_no_viable, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 50/*, SKIP_ARG*/, /*KEEP_STR*/"no viable constructor %select{copying variable|copying parameter|returning object|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1; C++98 requires a copy constructor when binding a reference to a temporary"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_sizeof_alignof_function_type, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 452/*, SKIP_ARG*/, /*KEEP_STR*/"invalid application of '%select{sizeof|alignof|vec_step}0' to a function type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_sizeof_alignof_void_type, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 452/*, SKIP_ARG*/, /*KEEP_STR*/"invalid application of '%select{sizeof|alignof|vec_step}0' to a void type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_standalone_specifier, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 345/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' is not permitted on a declaration of a type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_star_this_lambda_capture_cxx1z, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 3, 80/*, SKIP_ARG*/, /*KEEP_STR*/"capture of '*this' by copy is a C++1z extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_static_assert_no_message, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 80/*, SKIP_ARG*/, /*KEEP_STR*/"static_assert with no message is a C++1z extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_static_data_member_in_union, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 69/*, SKIP_ARG*/, /*KEEP_STR*/"static data member %0 in union is a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_static_non_static, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 333/*, SKIP_ARG*/, /*KEEP_STR*/"redeclaring non-static %0 as static is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_string_literal_operator_template, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 230/*, SKIP_ARG*/, /*KEEP_STR*/"string literal operator templates are a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_subscript_non_lvalue, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 449/*, SKIP_ARG*/, /*KEEP_STR*/"ISO C90 does not allow subscripting non-lvalue array"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_template_arg_extra_parens, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"address non-type template argument cannot be surrounded by parentheses"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_template_arg_local_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 300/*, SKIP_ARG*/, /*KEEP_STR*/"template argument uses local type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_template_arg_object_internal, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 69/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument referring to %select{function|object}0 %1 with internal linkage is a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_template_arg_unnamed_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 592/*, SKIP_ARG*/, /*KEEP_STR*/"template argument uses unnamed type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_template_outside_of_template, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 69/*, SKIP_ARG*/, /*KEEP_STR*/"'template' keyword outside of a template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_template_parameter_default_in_function_template, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 69/*, SKIP_ARG*/, /*KEEP_STR*/"default template arguments for a function template are a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_template_spec_decl_out_of_scope, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 69/*, SKIP_ARG*/, /*KEEP_STR*/"first declaration of %select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 outside namespace %2 is a C++11 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_addrof_temporary, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 13/*, SKIP_ARG*/, /*KEEP_STR*/"taking the address of a temporary object of type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_addrof_void, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 449/*, SKIP_ARG*/, /*KEEP_STR*/"ISO C forbids taking the address of an expression of type 'void'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_base_super, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 546/*, SKIP_ARG*/, /*KEEP_STR*/"method parameter type %diff{$ does not match super class method parameter type $|does not match super class method parameter type}0,1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_cast_nonscalar, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 449/*, SKIP_ARG*/, /*KEEP_STR*/"C99 forbids casting nonscalar type %0 to the same type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_cast_to_union, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 231/*, SKIP_ARG*/, /*KEEP_STR*/"cast to union type is a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_comparison_of_distinct_pointers, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 104/*, SKIP_ARG*/, /*KEEP_STR*/"comparison of distinct pointer types%diff{ ($ and $)|}0,1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_comparison_of_distinct_pointers_nonstandard, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 104/*, SKIP_ARG*/, /*KEEP_STR*/"comparison of distinct pointer types (%0 and %1) uses non-standard composite pointer type %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_comparison_of_fptr_to_void, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 449/*, SKIP_ARG*/, /*KEEP_STR*/"equality comparison between function pointer and void pointer (%0 and %1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_comparison_of_pointer_integer, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"comparison between pointer and integer (%0 and %1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_cond_incompatible_operands, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incompatible operand types (%0 and %1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_cond_incompatible_operands_nonstandard, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incompatible operand types%diff{ ($ and $)|}0,1 use non-standard composite pointer type %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_cond_incompatible_pointers, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 456/*, SKIP_ARG*/, /*KEEP_STR*/"pointer type mismatch%diff{ ($ and $)|}0,1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_cond_one_void, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 449/*, SKIP_ARG*/, /*KEEP_STR*/"C99 forbids conditional expressions with only one void side"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_cond_pointer_integer_mismatch, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 106/*, SKIP_ARG*/, /*KEEP_STR*/"pointer/integer type mismatch in conditional expression%diff{ ($ and $)|}0,1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_convert_discards_qualifiers, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 260/*, SKIP_ARG*/, /*KEEP_STR*/"%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_convert_incompatible_pointer, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 259/*, SKIP_ARG*/, /*KEEP_STR*/"incompatible pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_convert_incompatible_pointer_sign, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 454/*, SKIP_ARG*/, /*KEEP_STR*/"%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between pointers to integer types with different sign"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_convert_int_pointer, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 275/*, SKIP_ARG*/, /*KEEP_STR*/"incompatible integer to pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_convert_pointer_int, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 275/*, SKIP_ARG*/, /*KEEP_STR*/"incompatible pointer to integer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_convert_pointer_void_func, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 449/*, SKIP_ARG*/, /*KEEP_STR*/"%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between void pointer and function pointer"),   
};
}

//<editor-fold defaultstate="collapsed" desc="static Sema End">  
@Converted(kind = Converted.Kind.AUTO, source = "${LLVM_SRC}/llvm/tools/clang/lib/Basic/DiagnosticIDs.cpp", line = 82,
 cmd = "jclank.sh -java-options=${SPUTNIK}/modules/org.clang.basic/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Basic/DiagnosticIDs.cpp -no-enum2int -filter=StaticDiagInfo")
//</editor-fold>
private static StaticDiagInfoRec [] init_DiagnosticSemaKinds_End() {
return new /*const*/StaticDiagInfoRec [] {
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_decl_incomplete_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 558/*, SKIP_ARG*/, /*KEEP_STR*/"tentative definition of variable with internal linkage has incomplete non-array type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_indirection_through_void_pointer, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 636/*, SKIP_ARG*/, /*KEEP_STR*/"ISO C++ does not allow indirection on operand of type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_ordered_comparison_of_function_pointers, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ordered comparison of function pointers (%0 and %1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_ordered_comparison_of_pointer_and_zero, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 449/*, SKIP_ARG*/, /*KEEP_STR*/"ordered comparison between pointer and zero (%0 and %1) is an extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_ordered_comparison_of_pointer_integer, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ordered comparison between pointer and integer (%0 and %1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typecheck_zero_array_size, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 642/*, SKIP_ARG*/, /*KEEP_STR*/"zero size arrays are an extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typedef_without_a_name, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 345/*, SKIP_ARG*/, /*KEEP_STR*/"typedef requires a name"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typename_missing, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 571/*, SKIP_ARG*/, /*KEEP_STR*/"missing 'typename' prior to dependent type name '%0%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_typename_outside_of_template, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 69/*, SKIP_ARG*/, /*KEEP_STR*/"'typename' occurs outside of a template"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_undeclared_unqual_id_with_dependent_base, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 335/*, SKIP_ARG*/, /*KEEP_STR*/"use of undeclared identifier %0; unqualified lookup into dependent bases of class template %1 is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_unelaborated_friend_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 69/*, SKIP_ARG*/, /*KEEP_STR*/"unelaborated friend declaration is a C++11 extension; specify '%select{struct|interface|union|class|enum}0' to befriend %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_union_member_of_reference_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 336/*, SKIP_ARG*/, /*KEEP_STR*/"union member %0 has reference type %1, which is a Microsoft extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_using_undefined_std, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"using directive refers to implicitly-defined namespace 'std'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_variable_sized_type_in_struct, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 232/*, SKIP_ARG*/, /*KEEP_STR*/"field %0 with variable sized type %1 not at the end of a struct or class is a GNU extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_variable_template, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 77/*, SKIP_ARG*/, /*KEEP_STR*/"variable templates are a C++14 extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_variadic_main, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 306/*, SKIP_ARG*/, /*KEEP_STR*/"'main' is not allowed to be declared variadic"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_vla, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 635/*, SKIP_ARG*/, /*KEEP_STR*/"variable length arrays are a C99 feature"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.ext_vla_folded_to_constant, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 223/*, SKIP_ARG*/, /*KEEP_STR*/"variable length array folded to constant array as an extension"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.not_conv_function_declared_at, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type conversion function declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.not_incomplete_class_and_qualified_id, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conformance of forward class %0 to protocol %1 can not be confirmed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_access_constrained_by_path, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constrained by %select{|implicitly }1%select{private|protected}0 inheritance here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_access_natural, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{|implicitly }1declared %select{private|protected}0 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_access_protected_restricted_ctordtor, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"protected %select{constructor|destructor}0 can only be used to %select{construct|destroy}0 a base class subobject"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_access_protected_restricted_noobject, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"must name member using the type of the current context %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_access_protected_restricted_object, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"can only access this member on an object of type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_additional_parens_for_variable_declaration, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"add a pair of parentheses to declare a variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_addrof_ovl_candidate_disabled_by_enable_if_attr, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate function made ineligible by enable_if"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_alignas_on_declaration, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declared with %0 attribute here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_allocated_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"allocated with 'new%select{[]|}0' here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ambig_member_ref_object_type, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"lookup in the object type %0 refers here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ambig_member_ref_scope, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"lookup from the current scope refers here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ambiguous_candidate, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate found by name lookup is %q0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ambiguous_inherited_constructor_using, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"inherited from base class %0 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ambiguous_member_found, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"member found by ambiguous name lookup"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ambiguous_type_conversion, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"because of ambiguity in conversion %diff{of $ to $|between types}0,1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_arc_bridge, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 7, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use __bridge to convert directly (no change in ownership)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_arc_bridge_retained, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 7, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use %select{__bridge_retained|CFBridgingRetain call}1 to make an ARC object available as a +1 %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_arc_bridge_transfer, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 7, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use %select{__bridge_transfer|CFBridgingRelease call}1 to transfer ownership of a +1 %0 into ARC"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_arc_cstyle_bridge, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 7, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use __bridge with C-style cast to convert directly (no change in ownership)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_arc_cstyle_bridge_retained, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 7, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use __bridge_retained with C-style cast to make an ARC object available as a +1 %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_arc_cstyle_bridge_transfer, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 7, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use __bridge_transfer with C-style cast to transfer ownership of a +1 %0 into ARC"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_arc_field_with_ownership, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 10, 0/*, SKIP_ARG*/, /*KEEP_STR*/"field has non-trivial ownership qualification"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_arc_forbidden_type, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 10, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration uses type that is ill-formed in ARC"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_arc_gained_method_convention, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration in interface is not in the '%select{alloc|copy|init|new}0' family because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_arc_init_returns_unrelated, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 10, 0/*, SKIP_ARG*/, /*KEEP_STR*/"init method must return a type related to its receiver type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_arc_lost_method_convention, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 5, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration in interface"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_arc_retain_cycle_owner, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 23, 0/*, SKIP_ARG*/, /*KEEP_STR*/"block will be retained by %select{the captured object|an object strongly retained by the captured object}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_arc_weak_also_accessed_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"also accessed here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_arc_weak_disabled, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 10, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration uses __weak, but ARC is disabled"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_arc_weak_no_runtime, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 10, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration uses __weak, which the current deployment target does not support"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_array_index_out_of_bounds, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"array %0 declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_array_size_conversion, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conversion to %select{integral|enumeration}0 type %1 declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_asm_input_duplicate_first, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constraint '%0' is already present here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_asm_missing_constraint_modifier, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use constraint modifier \"%0\""), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_assign_lhs_incomplete, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type %0 is incomplete"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_atomic_property_fixup_suggest, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"setter and getter must both be synthesized, or both be user defined,or the property must be nonatomic"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_attribute, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"attribute is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_attribute_overloadable_prev_overload, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous overload of function is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_auto_readonly_iboutlet_fixup_suggest, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property should be changed to be readwrite"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_availability_specified_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 has been explicitly marked %select{unavailable|deleted|deprecated|partial}1 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_bad_memaccess_silence, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicitly cast the pointer to silence this warning"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_base_class_specified_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"base class %0 specified here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_bitfield_decl, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"bit-field is declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_block_var_fixit_add_initialization, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"did you mean to use __block %0?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_callee_decl, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_callee_static_array, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"callee declares array parameter as static here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_carries_dependency_missing_first_decl, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration missing '[[carries_dependency]]' attribute is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_cast_to_void, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cast expression to void to silence warning"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_change_calling_conv_fixit, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"consider defining %0 with the '%1' calling convention"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_class_declared, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"class is declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_cocoa_naming_declare_family, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicitly declare getter %objcinstance0 with '%1' to return an 'unowned' object"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_collapse_loop_count, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"parameter of the 'collapse' clause"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_compat_assoc, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"compatible type %0 specified here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_condition_assign_silence, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"place parentheses around the assignment to silence this warning"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_condition_assign_to_comparison, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use '==' to turn this assignment into an equality comparison"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_condition_or_assign_to_comparison, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use '!=' to turn this compound assignment into an inequality comparison"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_conflicting_attribute, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting attribute is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_conflicting_try_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting %0 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_body_previous_return, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous return statement is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_ctor_missing_init, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"member not initialized by constructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constexpr_virtual_base_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"virtual base class declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_constructor_declared_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constructor declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_convert_inline_to_static, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use 'static' to give inline function %0 internal linkage"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_cuda_conflicting_device_function_declared_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting __device__ function declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_declaration_not_a_prototype, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"this declaration is not a prototype; add 'void' to make it a prototype for a zero-parameter function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_declared_coroutine_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 13, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function is a coroutine due to use of '%select{co_await|co_yield|co_return}0' here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_declared_nonnull, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declared %select{'returns_nonnull'|'nonnull'}0 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_default_arg_instantiation_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"in instantiation of default argument for '%0' required here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_default_argument_declared_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"default argument declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_default_function_arg_instantiation_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"in instantiation of default function argument expression for '%0' required here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_defined_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 defined here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_delete_conversion, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conversion to pointer type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_delete_non_virtual, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"qualify call to silence this warning"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_deleted_assign_field, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{copy|move}0 assignment operator of %1 is implicitly deleted because field %2 is of %select{reference|const-qualified}4 type %3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_deleted_copy_ctor_rvalue_reference, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"copy constructor of %0 is implicitly deleted because field %1 is of rvalue reference type %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_deleted_copy_user_declared_move, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"copy %select{constructor|assignment operator}0 is implicitly deleted because %1 has a user-declared move %select{constructor|assignment operator}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_deleted_default_ctor_all_const, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{default constructor of|constructor inherited by}0 %1 is implicitly deleted because all %select{data members|data members of an anonymous union member}2 are const-qualified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_deleted_default_ctor_uninit_field, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{default constructor of|constructor inherited by}0 %1 is implicitly deleted because field %2 of %select{reference|const-qualified}4 type %3 would not be initialized"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_deleted_dtor_no_operator_delete, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"virtual destructor requires an unambiguous, accessible 'operator delete'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_deleted_special_member_class_subobject, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{default constructor of|copy constructor of|move constructor of|copy assignment operator of|move assignment operator of|destructor of|constructor inherited by}0 %1 is implicitly deleted because %select{base class %3|%select{||||variant }4field %3}2 has %select{no|a deleted|multiple|an inaccessible|a non-trivial}4 %select{%select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|%select{default|corresponding|default|default|default}4 constructor}0|destructor}5%select{||s||}4"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_dependent_non_type_default_arg_in_partial_spec, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template parameter is used in default argument declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_dependent_var_use, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"must qualify identifier to find this declaration in dependent base class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_destructor_type_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type %0 is declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_due_to_dllexported_class, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"due to '%0' being dllexported%select{|; try compiling in C++11 mode}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_duplicate_element, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"element %0 also has value %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_empty_body_on_separate_line, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"put the semicolon on a separate line to silence this warning"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_empty_parens_default_ctor, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"remove parentheses to declare a variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_empty_parens_function_call, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"change this ',' to a ';' to call %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_empty_parens_zero_initialize, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"replace parentheses with an initializer to declare a variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_enters_block_captures_cxx_obj, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump enters lifetime of block which captures a destructible C++ object"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_enters_block_captures_strong, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump enters lifetime of block which strongly captures a variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_enters_block_captures_weak, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump enters lifetime of block which weakly captures a variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_entity_declared_at, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_enum_specialized_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"enum %0 was explicitly specialized here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_equality_comparison_silence, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"remove extraneous parentheses around the comparison to silence this warning"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_equality_comparison_to_assign, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use '=' to turn this equality comparison into an assignment"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_equivalent_internal_linkage_decl, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 16, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declared here%select{ in module '%1'|}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_evaluate_comparison_first, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"place parentheses around comparison expression to evaluate it first"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_exception_spec_deprecated, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use '%0' instead"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_exits___block, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump exits scope of __block variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_exits_block_captures_cxx_obj, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump exits lifetime of block which captures a destructible C++ object"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_exits_block_captures_strong, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump exits lifetime of block which strongly captures a variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_exits_block_captures_weak, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump exits lifetime of block which weakly captures a variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_exits_cleanup, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump exits scope of variable with __attribute__((cleanup))"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_exits_cxx_catch, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump exits catch block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_exits_cxx_try, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump exits try block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_exits_dtor, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump exits scope of variable with non-trivial destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_exits_objc_autoreleasepool, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump exits autoreleasepool block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_exits_objc_catch, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump exits @catch block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_exits_objc_finally, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump exits @finally block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_exits_objc_strong, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump exits scope of __strong variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_exits_objc_synchronized, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump exits @synchronized block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_exits_objc_try, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump exits @try block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_exits_objc_weak, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump exits scope of __weak variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_exits_seh_except, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump exits __except block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_exits_seh_finally, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump exits __finally block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_exits_seh_try, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump exits __try block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_exits_temporary_dtor, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump exits scope of lifetime-extended temporary with non-trivial destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_explicit_instantiation_candidate, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation candidate function template here %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_explicit_instantiation_definition_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation definition is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_explicit_instantiation_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation refers here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_explicit_specialization_declared_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit specialization declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_explicit_template_arg_substitution_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"while substituting explicitly-specified template arguments into function template %0 %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_explicit_template_spec_does_not_need_header, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'template<>' header not required for explicitly-specialized class %0 declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_extern_c_global_conflict, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declared %select{in global scope|with C language linkage}0 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_fallthrough_insert_semi_fixit, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"did you forget ';'?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_field_designator_found, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"field designator refers here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_final_overrider, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"final overrider of %q0 in %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_flexible_array_member, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initialized flexible array member %0 is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_for_range_begin_end, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"selected '%select{begin|end}0' %select{function|template }1%2 with iterator type %3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_for_range_invalid_iterator, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"in implicit call to 'operator%select{!=|*|++}0' for iterator of type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_format_fix_specifier, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"did you mean to use '%0'?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_format_security_fixit, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"treat the string as an argument to avoid this"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_format_string_defined, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"format string is defined here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_forward_class, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"forward declaration of class here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_forward_template_decl, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"forward declaration of template entity is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_found_mutex_near_match, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"found near match '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_function_suggestion, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"did you mean %0?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_function_template_deduction_instantiation_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"while substituting deduced template arguments into function template %0 %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_function_template_spec_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"in instantiation of function template specialization %q0 requested here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_function_template_spec_matched, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"function template matches specialization %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_function_to_function_call, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"suffix with parentheses to turn this into a function call"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_function_warning_silence, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"prefix with the address-of operator to silence this warning"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_getter_unavailable, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"or because setter is declared here, but no getter method %0 is found"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_goto_ms_asm_label, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"inline assembly label %0 declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_guarded_by_declared_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"Guarded_by declared here."), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_hidden_overloaded_virtual_declared_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"hidden overloaded virtual function %q0 declared here%select{|: different classes%diff{ ($ vs $)|}2,3|: different number of parameters (%2 vs %3)|: type mismatch at %ordinal2 parameter%diff{ ($ vs $)|}3,4|: different return type%diff{ ($ vs $)|}2,3|: different qualifiers (%select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}2 vs %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}3)}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_hidden_tag, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type declaration hidden"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_hiding_object, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration hides type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ice_conversion_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conversion to %select{integral|enumeration}0 type %1 declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_illegal_field_declared_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"field of illegal %select{type|pointer type}0 %1 declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_implementation_declared, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"class implementation is declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_implemented_by_class, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 9, 0/*, SKIP_ARG*/, /*KEEP_STR*/"when implemented by class %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_implicit_member_target_infer_collision, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 inferred target collision: call to both %select{__device__|__global__|__host__|__host__ __device__}1 and %select{__device__|__global__|__host__|__host__ __device__}2 members"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_implicit_param_decl, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is an implicit parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_implicitly_deleted, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicitly defaulted function was implicitly deleted here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_in_class_initializer_float_type_cxx11, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"add 'constexpr'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_in_for_range, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"when looking up '%select{begin|end}0' function for range expression of type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_in_omitted_aggregate_initializer, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"in implicit initialization of %select{array element %1|field %1}0 with omitted initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_in_reference_temporary_list_initializer, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"in initialization of temporary of type %0 created to list-initialize this reference"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_include_header_or_declare, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"include the header <%0> or explicitly provide a declaration for '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_indirect_goto_target, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"possible target of indirect goto statement"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_indirection_through_null, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"consider using __builtin_trap() or qualifying pointer with 'volatile'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_inequality_comparison_to_or_assign, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use '|=' to turn this inequality comparison into an or-assignment"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_inhctor_synthesized_at, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"inherited constructor for %0 first required here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_inherited_deleted_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"deleted constructor was inherited here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_init_list_narrowing_silence, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"insert an explicit cast to silence this issue"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_insert_break_fixit, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"insert 'break;' to avoid fall-through"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_insert_fallthrough_fixit, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"insert '%0;' to silence this warning"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_inst_declaration_hint, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"add an explicit instantiation declaration to suppress this warning if %q0 is explicitly instantiated in another translation unit"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_instantiation_contexts_suppressed, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"(skipping %0 context%s0 in backtrace; use -ftemplate-backtrace-limit=0 to see all)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_instantiation_required_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{implicit|explicit}0 instantiation first required here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_it_delegates_to, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"it delegates to"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ivar_decl, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"instance variable is declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_lambda_decl, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"lambda expression begins here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_lambda_to_block_conv, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 3, 0/*, SKIP_ARG*/, /*KEEP_STR*/"implicit capture of lambda object due to conversion to block pointer here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_local_decl_close_match, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"local declaration nearly matches"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_local_decl_close_param_match, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type of %ordinal0 parameter of local declaration does not match definition%diff{ ($ vs $)|}1,2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_lock_exclusive_and_shared, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"the other acquisition of %0 '%1' is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_locked_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 acquired here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_logical_instead_of_bitwise_change_operator, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use '%0' for a bitwise operation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_logical_instead_of_bitwise_remove_constant, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"remove constant to silence this warning"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_logical_not_fix, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"add parentheses after the '!' to evaluate the comparison first"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_logical_not_silence_with_parens, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"add parentheses around left hand side expression to silence this warning"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_loop_iteration_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{decremented|incremented}0 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_main_change_return_type, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"change return type to 'int'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_main_remove_noreturn, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"remove '_Noreturn'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_member_declared_at, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"member is declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_member_declared_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"member %0 declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_member_def_close_const_match, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"member declaration does not match because it %select{is|is not}0 const qualified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_member_def_close_match, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"member declaration nearly matches"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_member_def_close_param_match, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type of %ordinal0 parameter of member declaration does not match definition%diff{ ($ vs $)|}1,2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_member_reference_arrow_from_operator_arrow, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'->' applied to return value of the operator->() declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_member_synthesized_at, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 for %1 first required here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_memsize_comparison_cast_silence, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicitly cast the argument to size_t to silence this warning"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_memsize_comparison_paren, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"did you mean to compare the result of %0 instead?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_method_declared_at, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"method %0 declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_method_return_type_change, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"compiler has implicitly changed method %0 return type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_method_sent_forward_class, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"method %0 is used for the forward class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_module_import_in_extern_c, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 16, 0/*, SKIP_ARG*/, /*KEEP_STR*/"extern \"C\" language linkage specification begins here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_module_import_not_at_top_level, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 16, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 begins here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_namespace_defined_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"namespace %0 defined here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_neon_vector_initializer_non_portable, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"consider using vld1_%0%1() to initialize a vector from memory, or vcreate_%0%1() to initialize from an integer constant"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_neon_vector_initializer_non_portable_q, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"consider using vld1q_%0%1() to initialize a vector from memory, or vcombine_%0%1(vcreate_%0%1(), vcreate_%0%1()) to initialize from integer constants"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_non_instantiated_member_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"not-yet-instantiated member is declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_non_literal_base_class, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is not literal because it has base class %1 of non-literal type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_non_literal_field, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is not literal because it has data member %1 of %select{non-literal|volatile}3 type %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_non_literal_incomplete, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"incomplete type %0 is not a literal type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_non_literal_no_constexpr_ctors, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is not literal because it is not an aggregate and has no constexpr constructors other than copy or move constructors"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_non_literal_nontrivial_dtor, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is not literal because it has a non-trivial destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_non_literal_user_provided_dtor, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is not literal because it has a user-provided destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_non_literal_virtual_base, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{struct|interface|class}0 with virtual base %plural{1:class|:classes}1 is not a literal type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_nontemplate_decl_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-templated declaration is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_nontrivial_default_arg, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"because it has a default argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_nontrivial_has_virtual, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"because type %0 has a virtual %select{member function|base class}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_nontrivial_in_class_init, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"because field %0 has an initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_nontrivial_no_copy, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"because no %select{<<ERROR>>|constructor|constructor|assignment operator|assignment operator|<<ERROR>>}2 can be used to %select{<<ERROR>>|copy|move|copy|move|<<ERROR>>}2 %select{base class|field|an object}0 of type %3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_nontrivial_no_def_ctor, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"because %select{base class of |field of |}0type %1 has no default constructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_nontrivial_objc_ownership, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"because type %0 has a member with %select{no|no|__strong|__weak|__autoreleasing}1 ownership"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_nontrivial_param_type, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"because its parameter is %diff{of type $, not $|of the wrong type}2,3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_nontrivial_subobject, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"because the function selected to %select{construct|copy|move|copy|move|destroy}2 %select{base class|field}0 of type %1 is not trivial"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_nontrivial_user_provided, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"because %select{base class of |field of |}0type %1 has a user-provided %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_nontrivial_variadic, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"because it is a variadic function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_nontrivial_virtual_dtor, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"destructor for %0 is not trivial because it is virtual"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_noreturn_missing_first_decl, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declaration missing '[[noreturn]]' attribute is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_not_found_by_two_phase_lookup, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 should be declared prior to the call site%select{| or in %2| or in an associated namespace of one of its arguments}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_nullability_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 17, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 specified here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_nullability_type_specifier, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 17, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use nullability type specifier %0 to affect the innermost pointer type of %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_objc_circular_container_declared_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_objc_designated_init_marked_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"method marked as designated initializer of the class here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_objc_literal_comparison_isequal, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use 'isEqual:' instead"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_objc_literal_method_param, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{first|second|third}0 parameter has unexpected type %1 (should be %2)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_objc_literal_method_return, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"method returns unexpected type %0 (should be an object type)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_objc_needs_superclass, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"add a super class to fix this problem"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_objc_type_param_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 18, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type parameter %0 declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_atomic_capture, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{expected assignment expression|expected compound statement|expected exactly two expression statements|expected in right hand side of the first expression}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_atomic_previous_clause, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' clause used here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_atomic_read_write, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{expected an expression statement|expected built-in assignment operator|expected expression of scalar type|expected lvalue expression}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_atomic_update, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{expected an expression statement|expected built-in binary or unary operator|expected unary decrement/increment operation|expected expression of scalar type|expected assignment expression|expected built-in binary operator|expected one of '+', '*', '-', '/', '&', '^', '%|', '<<', or '>>' built-in operations|expected in right hand side of expression}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_collapse_ordered_expr, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"as specified in %select{'collapse'|'ordered'|'collapse' and 'ordered'}0 clause%select{||s}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_conversion_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conversion to %select{integral|enumeration}0 type %1 declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_critical_hint_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{|previous }0'hint' clause with value '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_critical_no_hint, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{|previous }0directive with no 'hint' clause specified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_explicit_dsa, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"defined as %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_implicit_dsa, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"implicitly determined as %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_loop_cond_requres_compatible_incr, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"loop step is expected to be %select{negative|positive}0 due to this condition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_nested_statement_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{statement|directive}0 outside teams construct here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_nested_teams_construct_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"nested teams construct here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_nowait_clause_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'nowait' clause is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_ordered_param, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'ordered' clause with specified parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_polymorphic_in_target, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"mappable type cannot be polymorphic"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_predetermined_dsa, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{static data member is predetermined as shared|variable with static storage duration is predetermined as shared|loop iteration variable is predetermined as private|loop iteration variable is predetermined as linear|loop iteration variable is predetermined as lastprivate|constant variable is predetermined as shared|global variable is predetermined as shared|non-shared variable in a task construct is predetermined as firstprivate|variable with automatic storage duration is predetermined as private}0%select{|; perhaps you forget to enclose 'omp %2' directive into a parallel or another task region?}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_previous_critical_region, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous 'critical' region starts here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_previous_grainsize_num_tasks, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' clause is specified here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_previous_named_if_clause, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous clause with directive name modifier specified here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_referenced, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previously referenced here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_static_member_in_target, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"mappable type cannot contain static members"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_omp_task_predetermined_firstprivate_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 0/*, SKIP_ARG*/, /*KEEP_STR*/"predetermined as a firstprivate in a task construct here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_opencl_typedef_access_qualifier, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previously declared '%0' here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_operator_arrow_depth, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use -foperator-arrow-depth=N to increase 'operator->' limit"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_operator_arrow_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'operator->' declared here produces an object of type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_operator_arrows_suppressed, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"(skipping %0 'operator->'%s0 in backtrace)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_overridden_method, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"overridden method is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_overridden_virtual_function, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"overridden virtual function is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_builtin_binary_candidate, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"built-in candidate %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_builtin_unary_candidate, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"built-in candidate %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate %select{function|function|constructor|function |function |constructor |is the implicit default constructor|is the implicit copy constructor|is the implicit move constructor|is the implicit copy assignment operator|is the implicit move assignment operator|inherited constructor|inherited constructor }0%1%select{| has different class%diff{ (expected $ but has $)|}3,4| has different number of parameters (expected %3 but has %4)| has type mismatch at %ordinal3 parameter%diff{ (expected $ but has $)|}4,5| has different return type%diff{ ($ expected but has $)|}3,4| has different qualifiers (expected %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}3 but found %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}4)}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_arity, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate %select{function|function|constructor|function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor}0 %select{|template }1not viable: requires%select{ at least| at most|}2 %3 argument%s3, but %4 %plural{1:was|:were}4 provided"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_arity_one, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate %select{function|function|constructor|function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor}0 %select{|template }1not viable: %select{requires at least|allows at most single|requires single}2 argument %3, but %plural{0:no|:%4}4 arguments were provided"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_bad_addrspace, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: %select{%ordinal6|'this'}5 argument (%2) is in address space %3, but parameter must be in address space %4"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_bad_arc_conv, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: cannot implicitly convert argument %diff{of type $ to $|type to parameter type}2,3 for %select{%ordinal5 argument|object argument}4 under ARC"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_bad_base_to_derived_conv, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: cannot %select{convert from|convert from|bind}2 %select{base class pointer|superclass|base class object of type}2 %3 to %select{derived class pointer|subclass|derived class reference}2 %4 for %ordinal5 argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_bad_conv, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: no known conversion %diff{from $ to $|from argument type to parameter type}2,3 for %select{%ordinal5 argument|object argument}4%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}6"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_bad_conv_incomplete, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: cannot convert argument of incomplete type %diff{$ to $|to parameter type}2,3 for %select{%ordinal5 argument|object argument}4%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}6"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_bad_cvr, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: %ordinal4 argument (%2) would lose %select{const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}3 qualifier%select{||s||s|s|s}3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_bad_cvr_this, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate %select{|function|||function|||||function (the implicit copy assignment operator)|function (the implicit move assignment operator)||}0 not viable: 'this' argument has type %2, but method is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_bad_deduction, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate template ignored: failed template argument deduction"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_bad_gc, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: %select{%ordinal6|'this'}5 argument (%2) has %select{no|__weak|__strong}3 ownership, but parameter has %select{no|__weak|__strong}4 ownership"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_bad_list_argument, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: cannot convert initializer list argument to %3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_bad_lvalue, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: expects an l-value for %select{%ordinal3 argument|object argument}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_bad_overload, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: no overload of %3 matching %2 for %ordinal4 argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_bad_ownership, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: %select{%ordinal6|'this'}5 argument (%2) has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}3 ownership, but parameter has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}4 ownership"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_bad_target, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate %select{function|function|constructor|function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor}0 not viable: call to %select{__device__|__global__|__host__|__host__ __device__|invalid}1 function from %select{__device__|__global__|__host__|__host__ __device__|invalid}2 function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_bad_unaligned, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: %ordinal4 argument (%2) would lose __unaligned qualifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_deduced_mismatch, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate template ignored: deduced type %diff{$ of %ordinal0 parameter does not match adjusted type $ of argument|of %ordinal0 parameter does not match adjusted type of argument}1,2%3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_deleted, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 has been %select{explicitly made unavailable|explicitly deleted|implicitly deleted}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_disabled_by_enable_if, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate template ignored: disabled by %0%1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_disabled_by_enable_if_attr, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate disabled: %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_explicit_arg_mismatch_named, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate template ignored: invalid explicitly-specified argument for template parameter %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_explicit_arg_mismatch_unnamed, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate template ignored: invalid explicitly-specified argument for %ordinal0 template parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_failed_overload_resolution, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate template ignored: couldn't resolve reference to overloaded function %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_has_pass_object_size_params, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate address cannot be taken because parameter %0 has pass_object_size attribute"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_illegal_constructor, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate %select{constructor|template}0 ignored: instantiation %select{takes|would take}0 its own class type by value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_incomplete_deduction, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate template ignored: couldn't infer template argument %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_inconsistent_deduction, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate template ignored: deduced conflicting %select{types|values|templates}0 for parameter %1%diff{ ($ vs. $)|}2,3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_inherited_constructor, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"constructor from base class %0 inherited here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_instantiation_depth, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate template ignored: substitution exceeded maximum template instantiation depth"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_non_deduced_mismatch, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate template ignored: could not match %diff{$ against $|types}0,1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_non_deduced_mismatch_qualified, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate template ignored: could not match %q0 against %q1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_substitution_failure, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate template ignored: substitution failure%0%1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_candidate_underqualified, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"candidate template ignored: cannot deduce a type for %0 that would make %2 equal %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_surrogate_cand, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conversion candidate of type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ovl_too_many_candidates, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"remaining %0 candidate%s0 omitted; pass -fshow-overloads=all to show them"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ownership_returns_index_mismatch, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"declared with index %0 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_parameter_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"passing argument to parameter here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_parameter_named_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"passing argument to parameter %0 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_parameter_pack_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"parameter pack %0 declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_parameter_type, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"parameter of type %0 is declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_partial_availability_silence, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicitly redeclare %0 to silence this warning"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_partial_spec_deduct_instantiation_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"during template argument deduction for class template partial specialization %0 %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_partial_spec_match, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"partial specialization matches %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_partial_spec_unused_parameter, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-deducible template parameter %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_partial_specialization_declared_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicit specialization declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_performs_forbidden_arc_conversion, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 10, 0/*, SKIP_ARG*/, /*KEEP_STR*/"inline function performs a conversion which is forbidden in ARC"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_possible_target_of_call, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"possible target for call"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_precedence_bitwise_first, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"place parentheses around the %0 expression to evaluate it first"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_precedence_conditional_first, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"place parentheses around the '?:' expression to evaluate it first"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_precedence_silence, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"place parentheses around the '%0' expression to silence this warning"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_prev_partial_spec_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous declaration of class template partial specialization %0 is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_previous_access_declaration, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previously declared '%1' here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_previous_attribute, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous attribute is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_previous_builtin_declaration, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is a builtin with type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_previous_decl, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_previous_exception_handler, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"for type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_previous_explicit_instantiation, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous explicit instantiation is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_previous_initializer, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous initialization %select{|with side effects }0is here%select{| (side effects may not occur at run time)}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_previous_ms_inheritance, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous inheritance model specified here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_previous_namespace_alias, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previously defined as an alias for %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_previous_template_specialization, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous template specialization is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_printf_c_str, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"did you mean to call the %0 method?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_prior_template_arg_substitution, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"while substituting prior template arguments into %select{non-type|template}0 template parameter%1 %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_private_extern, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use __attribute__((visibility(\"hidden\"))) attribute instead"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_property_attribute, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property %0 is declared %select{deprecated|unavailable|partial}1 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_property_declare, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_property_synthesize, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property synthesized here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protected_by___block, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump bypasses setup of __block variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protected_by_cleanup, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump bypasses initialization of variable with __attribute__((cleanup))"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protected_by_constexpr_if, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump enters controlled statement of constexpr if"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protected_by_cxx_catch, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump bypasses initialization of catch block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protected_by_cxx_try, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump bypasses initialization of try block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protected_by_objc_autoreleasepool, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump bypasses auto release push of @autoreleasepool block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protected_by_objc_catch, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump bypasses initialization of @catch block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protected_by_objc_finally, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump bypasses initialization of @finally block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protected_by_objc_strong_init, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump bypasses initialization of __strong variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protected_by_objc_synchronized, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump bypasses initialization of @synchronized block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protected_by_objc_try, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump bypasses initialization of @try block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protected_by_objc_weak_init, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump bypasses initialization of __weak variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protected_by_seh_except, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump bypasses initialization of __except block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protected_by_seh_finally, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump bypasses initialization of __finally block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protected_by_seh_try, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump bypasses initialization of __try block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protected_by_variable_init, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump bypasses variable initialization"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protected_by_variable_non_pod, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump bypasses initialization of non-POD variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protected_by_variable_nontriv_destructor, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump bypasses variable with a non-trivial destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protected_by_vla, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump bypasses initialization of variable length array"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protected_by_vla_type_alias, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump bypasses initialization of VLA type alias"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protected_by_vla_typedef, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"jump bypasses initialization of VLA typedef"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protocol_decl, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"protocol is declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protocol_decl_undefined, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"protocol %0 has no definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protocol_method, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"protocol method is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_protocol_property_declare, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"it could also be property of type %0 declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_pure_qualified_call_kext, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"qualified call to %0::%1 is treated as a virtual call to %1 due to -fapple-kext"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_pure_virtual_function, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unimplemented pure virtual method %0 in %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_receiver_class_declared, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"receiver is instance of class declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_receiver_expr_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"receiver expression is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_receiver_is_id, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"receiver is treated with 'id' type for purpose of method lookup"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ref_or_ptr_member_declared_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{reference|pointer}0 member declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ref_subobject_of_member_declared_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"member with reference subobject declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_ref_var_local_bind, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"binding reference variable %0 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_refconst_member_not_initialized, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{const|reference}0 member %1 will never be initialized"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_reference_is_return_value, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 returns a reference"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_referenced_class_template, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"class template declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_reinterpret_updowncast_use_static, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use 'static_cast' to adjust the pointer correctly while %select{upcasting|downcasting}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_related_result_type_explicit, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 24, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{overridden|current}0 method is explicitly declared 'instancetype'%select{| and is expected to return an instance of its class type}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_related_result_type_family, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 24, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{overridden|current}0 method is part of the '%select{|alloc|copy|init|mutableCopy|new|autorelease|dealloc|finalize|release|retain|retainCount|self}1' method family%select{| and is expected to return an instance of its class type}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_related_result_type_inferred, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 24, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{class|instance}0 method %1 is assumed to return an instance of its receiver type (%2)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_related_result_type_overridden, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 24, 0/*, SKIP_ARG*/, /*KEEP_STR*/"overridden method returns an instance of its class type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_remove_abs, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"remove the call to '%0' since unsigned values cannot be negative"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_remove_move, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"remove std::move call here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_replace_abs_function, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use function '%0' instead"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_sentinel_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{function|method|block}0 has been explicitly marked sentinel here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_specialized_decl, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"attempt to specialize declaration here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_specialized_entity, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"explicitly specialized declaration is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_string_plus_scalar_silence, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use array indexing to silence this warning"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_strlcpycat_wrong_size, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"change size argument to be the size of the destination"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_strncat_wrong_size, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"change the argument to be the free space in the destination buffer minus the terminating null byte"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_struct_class_suggestion, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"did you mean %select{struct|interface|class}0 here?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_suppressed_class_declare, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"class with specified objc_requires_property_definitions attribute is declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_surrounding_namespace_ends_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"surrounding namespace with visibility attribute ends here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_surrounding_namespace_starts_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"surrounding namespace with visibility attribute starts here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_switch_conversion, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conversion to %select{integral|enumeration}0 type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_arg_internal_object, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument refers to %select{function|object}0 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_arg_refers_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument refers here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_arg_refers_here_func, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template argument refers to function template %0, here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_class_explicit_specialization_was_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"class template %0 was explicitly specialized here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_class_instantiation_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"in instantiation of template class %0 requested here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_class_instantiation_was_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"class template %0 was instantiated here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_decl_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template is declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_declared_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{function template|class template|variable template|type alias template|template template parameter}0 %1 declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_default_arg_checking, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"while checking a default template argument used here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_enum_def_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"in instantiation of enumeration %q0 requested here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_exception_spec_instantiation_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"in instantiation of exception specification for %0 requested here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_member_class_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"in instantiation of member class %0 requested here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_member_function_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"in instantiation of member function %q0 requested here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_nontype_parm_different_type, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template non-type parameter has a different type %0 in template argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_nontype_parm_prev_declaration, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous non-type template parameter with type %0 is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_nsdmi_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"in instantiation of default member initializer %q0 requested here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_param_different_kind, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template parameter has a different kind in template argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_param_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"template parameter is declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_param_list_different_arity, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{too few|too many}0 template parameters in template template argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_param_prev_default_arg, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous default template argument defined here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_parameter_pack_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous %select{template type|non-type template|template template}0 parameter%select{| pack}1 declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_parameter_pack_non_pack, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{template type|non-type template|template template}0 parameter%select{| pack}1 does not match %select{template type|non-type template|template template}0 parameter%select{ pack|}1 in template argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_prev_declaration, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous template %select{declaration|template parameter}0 is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_recursion_depth, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use -ftemplate-depth=N to increase recursive template instantiation depth"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_static_data_member_def_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"in instantiation of static data member %q0 requested here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_type_alias_instantiation_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"in instantiation of template type alias %0 requested here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_unnamed_type_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"unnamed type used in template argument was declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_template_variable_def_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"in instantiation of variable template specialization %q0 requested here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_thread_warning_in_fun, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"Thread warning in function '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_transparent_union_first_field_size_align, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{alignment|size}0 of first field is %1 bits"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_type_incomplete, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is incomplete"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_typecheck_assign_const, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{function %1 which returns const-qualified type %2 declared here|variable %1 declared const here|%select{non-|}1static data member %2 declared const here|member function %q1 is declared const here}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_typecheck_member_reference_suggestion, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"did you mean to use '.' instead?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_typedef_changes_linkage, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use a tag name here to establish linkage prior to definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_typename_refers_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"referenced member %0 is declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_uninit_fixit_remove_cond, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"remove the %select{'%1' if its condition|condition if it}0 is always %select{false|true}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_uninit_in_this_constructor, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"during field initialization in %select{this|the implicit default}0 constructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_uninit_reference_member, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"uninitialized reference member is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_uninit_var_use, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{uninitialized use occurs|variable is captured by block}0 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_unreachable_silence, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"silence by adding parentheses to mark code as explicitly dead"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_use_non_reference_type, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use non-reference type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_use_reference_type, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use reference type %0 to prevent copying"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_use_thread_local, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use 'thread_local' to allow this"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_use_type_or_non_reference, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use non-reference type %0 to keep the copy or type %1 to prevent copying"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_used_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"used here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_used_in_initialization_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"used in initialization here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_user_declared_ctor, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"implicit default constructor suppressed by user-declared constructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_using_decl, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{|previous }0using declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_using_decl_class_member_workaround, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use %select{an alias declaration|a typedef declaration|a reference|a const variable|a constexpr variable}0 instead"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_using_decl_conflict, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_using_decl_target, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"target of using declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_using_value_decl_missing_typename, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"add 'typename' to treat this using declaration as a type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_value_initialization_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"in value-initialization of type %0 here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_var_declared_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"variable %0 is declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_var_fixit_add_initialization, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"initialize the variable %0 to silence this warning"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_var_prev_partial_spec_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"previous declaration of variable template partial specialization is here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_vbase_moved_here, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{%1 is a virtual base class of base class %2 declared here|virtual base class %1 declared here}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_which_delegates_to, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"which delegates to"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_while_in_implementation, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"detected while default synthesizing properties in class implementation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.note_within_field_of_type, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"within field of type %0 declared here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.override_keyword_hides_virtual_member_function, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"non-virtual member function marked '%0' hides virtual member %select{function|functions}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.override_keyword_only_allowed_on_virtual_member_functions, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"only virtual member functions can be marked '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_abs_too_small, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 8/*, SKIP_ARG*/, /*KEEP_STR*/"absolute value function %0 given an argument of type %1 but has parameter of type %2 which may cause truncation of value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_abstract_final_class, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 9/*, SKIP_ARG*/, /*KEEP_STR*/"abstract class is marked '%select{final|sealed}0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_abstract_vbase_init_ignored, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 10/*, SKIP_ARG*/, /*KEEP_STR*/"initializer for virtual base class %0 of abstract class %1 will never be used"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_access_decl_deprecated, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 25, 131/*, SKIP_ARG*/, /*KEEP_STR*/"access declarations are deprecated; use using declarations instead"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_accessor_property_type_mismatch, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"type of property %0 does not match type of accessor %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_acquire_requires_negative_cap, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 563/*, SKIP_ARG*/, /*KEEP_STR*/"acquiring %0 '%1' requires negative capability '%2'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_acquired_before, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 560/*, SKIP_ARG*/, /*KEEP_STR*/"%0 '%1' must be acquired before '%2'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_acquired_before_after_cycle, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 560/*, SKIP_ARG*/, /*KEEP_STR*/"Cycle in acquired_before/after dependencies, starting with '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_addition_in_bitshift, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 509/*, SKIP_ARG*/, /*KEEP_STR*/"operator '%0' has lower precedence than '%1'; '%1' will be evaluated first"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_address_of_reference_bool_conversion, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 575/*, SKIP_ARG*/, /*KEEP_STR*/"reference cannot be bound to dereferenced null pointer in well-defined C++ code; pointer may be assumed to always convert to true"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_address_of_reference_null_compare, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 557/*, SKIP_ARG*/, /*KEEP_STR*/"reference cannot be bound to dereferenced null pointer in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_alias_to_weak_alias, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"%select{alias|ifunc}2 will always resolve to %0 even if weak definition of %1 is overridden"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_alias_with_section, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"%select{alias|ifunc}1 will not be in section '%0' but in the same section as the %select{aliasee|resolver}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_anon_bitfield_width_exceeds_type_width, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 52/*, SKIP_ARG*/, /*KEEP_STR*/"width of anonymous bit-field (%0 bits) exceeds width of its type; value will be truncated to %1 bit%s1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_arc_lifetime_result_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 5, 241/*, SKIP_ARG*/, /*KEEP_STR*/"ARC %select{unused|__unsafe_unretained|__strong|__weak|__autoreleasing}0 lifetime qualifier on return type is ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_arc_literal_assign, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 5, 28/*, SKIP_ARG*/, /*KEEP_STR*/"assigning %select{array literal|dictionary literal|numeric literal|boxed expression|<should not happen>|block literal}0 to a weak %select{property|variable}1; object will be released after assignment"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_arc_object_memaccess, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 5, 24/*, SKIP_ARG*/, /*KEEP_STR*/"%select{destination for|source of}0 this %1 call is a pointer to ownership-qualified type %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_arc_perform_selector_leaks, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 25/*, SKIP_ARG*/, /*KEEP_STR*/"performSelector may cause a leak because its selector is unknown"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_arc_possible_repeated_use_of_weak, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 23/*, SKIP_ARG*/, /*KEEP_STR*/"weak %select{variable|property|implicit property|instance variable}0 %1 may be accessed multiple times in this %select{function|method|block|lambda}2 and may be unpredictably set to nil; assign to a strong variable to keep the object alive"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_arc_repeated_use_of_weak, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 26/*, SKIP_ARG*/, /*KEEP_STR*/"weak %select{variable|property|implicit property|instance variable}0 %1 is accessed multiple times in this %select{function|method|block|lambda}2 but may be unpredictably set to nil; assign to a strong variable to keep the object alive"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_arc_retain_cycle, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 23, 27/*, SKIP_ARG*/, /*KEEP_STR*/"capturing %0 strongly in this block is likely to lead to a retain cycle"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_arc_retained_assign, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 5, 28/*, SKIP_ARG*/, /*KEEP_STR*/"assigning retained object to %select{weak|unsafe_unretained}0 %select{property|variable}1; object will be released after assignment"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_arc_retained_property_assign, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 5, 28/*, SKIP_ARG*/, /*KEEP_STR*/"assigning retained object to unsafe property; object will be released after assignment"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_arc_strong_pointer_objc_pointer, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 10, 176/*, SKIP_ARG*/, /*KEEP_STR*/"method parameter of type %0 with no explicit ownership"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_array_index_exceeds_bounds, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 29/*, SKIP_ARG*/, /*KEEP_STR*/"array index %0 is past the end of the array (which contains %1 element%s2)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_array_index_precedes_bounds, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 29/*, SKIP_ARG*/, /*KEEP_STR*/"array index %0 is before the beginning of the array"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_array_new_too_large, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 48/*, SKIP_ARG*/, /*KEEP_STR*/"array is too large (%0 elements)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_asm_label_on_auto_decl, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"ignored asm label '%0' on automatic variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_asm_mismatched_size_modifier, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 12, 32/*, SKIP_ARG*/, /*KEEP_STR*/"value size does not match register size specified by the constraint and modifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_assume_side_effects, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 34/*, SKIP_ARG*/, /*KEEP_STR*/"the argument to %0 has side effects that will be discarded"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_atomic_op_has_invalid_memory_order, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 36/*, SKIP_ARG*/, /*KEEP_STR*/"memory order argument to atomic operation is invalid"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_atomic_property_rule, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 38/*, SKIP_ARG*/, /*KEEP_STR*/"writable atomic property %0 cannot pair a synthesized %select{getter|setter}1 with a user defined %select{getter|setter}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_atprotocol_protocol, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 35/*, SKIP_ARG*/, /*KEEP_STR*/"@protocol is using a forward protocol declaration of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attr_abi_tag_namespace, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"'abi_tag' attribute on %select{non-inline|anonymous}0 namespace ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attr_on_unconsumable_class, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 112/*, SKIP_ARG*/, /*KEEP_STR*/"consumed analysis attribute is attached to member of class '%0' which isn't marked as consumable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_after_definition_ignored, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"attribute %0 after definition is ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_argument_n_negative, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 119/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute parameter %1 is negative and will be ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_dll_instantiated_base_class, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 602/*, SKIP_ARG*/, /*KEEP_STR*/"propagating dll attribute to %select{already instantiated|explicitly specialized}0 base class template without dll attribute is not supported"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_dll_redeclaration, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 148/*, SKIP_ARG*/, /*KEEP_STR*/"redeclaration of %q0 should not add %q1 attribute"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_dllexport_explicit_instantiation_decl, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 149/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation declaration should not be 'dllexport'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_dllimport_static_field_definition, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 150/*, SKIP_ARG*/, /*KEEP_STR*/"definition of dllimport static field"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_iboutlet, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute can only be applied to instance variables or properties"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_ignored, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_ignored_on_inline, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute ignored on inline function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_invalid_on_definition, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' attribute cannot be specified on a definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_nonnull_no_pointers, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"'nonnull' attribute applied to function with no pointer arguments"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_nonnull_parm_no_args, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"'nonnull' attribute when used on parameters takes no arguments"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_not_on_decl, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute ignored when parsing type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_packed_for_bitfield, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 39/*, SKIP_ARG*/, /*KEEP_STR*/"'packed' attribute was ignored on bit-fields with single-byte alignment in older versions of GCC and Clang"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_pointer_or_reference_only, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute only applies to a pointer or reference (%1 is invalid)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_pointers_only, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute only applies to%select{| constant}1 pointer arguments"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_precede_definition, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"attribute declaration must precede definition"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_protected_visibility, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 605/*, SKIP_ARG*/, /*KEEP_STR*/"target does not support 'protected' visibility; using 'default'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_return_pointers_only, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute only applies to return values that are pointers"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_return_pointers_refs_only, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute only applies to return values that are pointers or references"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_sentinel_named_arguments, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"'sentinel' attribute requires named arguments"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_sentinel_not_variadic, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"'sentinel' attribute only supported for variadic %select{functions|blocks}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_type_not_supported, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute argument not supported: %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_unknown_visibility, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"unknown visibility %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_void_function_method, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"attribute %0 cannot be applied to %select{functions|Objective-C method}1 without return value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_weak_on_field, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"__weak attribute cannot be specified on a field declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_weak_on_local, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"__weak attribute cannot be specified on an automatic variable when ARC is not enabled"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_attribute_wrong_decl_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute only applies to %select{functions|unions|variables and functions|functions, variables, and Objective-C interfaces|functions and methods|parameters|functions, methods and blocks|functions, methods, and classes|functions, methods, and parameters|classes|enums|variables|methods|fields and global variables|structs|parameters and typedefs|variables and typedefs|thread-local variables|variables and fields|variables, data members and tag types|types and namespaces|Objective-C interfaces|methods and properties|struct or union|struct, union or class|types|Objective-C instance methods|init methods of interface or class extension declarations|variables, functions and classes|functions, variables, classes, and Objective-C interfaces|Objective-C protocols|functions and global variables|structs, unions, and typedefs|structs and typedefs|interface or protocol declarations|kernel functions|non-K&R-style functions|variables, enums, fields and typedefs|functions, methods, enums, and classes|structs, classes, variables, functions, and inline namespaces|variables, functions, methods, types, enumerations, enumerators, labels, and non-static data members}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_auto_implicit_atomic_property, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 243/*, SKIP_ARG*/, /*KEEP_STR*/"property is assumed atomic when auto-synthesizing the property"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_auto_readonly_iboutlet_property, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 472/*, SKIP_ARG*/, /*KEEP_STR*/"readonly IBOutlet property %0 when auto-synthesized may not work correctly with 'nib' loader"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_auto_storage_class, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 65/*, SKIP_ARG*/, /*KEEP_STR*/"'auto' storage class specifier is redundant and incompatible with C++11"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_auto_synthesizing_protocol_property, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 415/*, SKIP_ARG*/, /*KEEP_STR*/"auto property synthesis will not synthesize property %0 declared in protocol %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_auto_var_is_id, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 44/*, SKIP_ARG*/, /*KEEP_STR*/"'auto' deduced as 'id' in declaration of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_autosynthesis_property_in_superclass, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 413/*, SKIP_ARG*/, /*KEEP_STR*/"auto property synthesis will not synthesize property %0; it will be implemented by its superclass, use @dynamic to acknowledge intention"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_autosynthesis_property_ivar_match, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 394/*, SKIP_ARG*/, /*KEEP_STR*/"autosynthesized property %0 will use %select{|synthesized}1 instance variable %2, not existing instance variable %3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_availability_unknown_platform, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 45/*, SKIP_ARG*/, /*KEEP_STR*/"unknown platform %0 in availability macro"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_availability_version_ordering, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 45/*, SKIP_ARG*/, /*KEEP_STR*/"feature cannot be %select{introduced|deprecated|obsoleted}0 in %1 version %2 before it was %select{introduced|deprecated|obsoleted}3 in version %4; attribute ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_available_using_star_case, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 582/*, SKIP_ARG*/, /*KEEP_STR*/"using '*' case here, platform %0 is not accounted for"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_bad_function_cast, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 49/*, SKIP_ARG*/, /*KEEP_STR*/"cast from function call of type %0 to non-matching type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_bad_receiver_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 473/*, SKIP_ARG*/, /*KEEP_STR*/"receiver type %0 is not 'id' or interface pointer, consider casting it to 'id'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_base_class_is_uninit, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 585/*, SKIP_ARG*/, /*KEEP_STR*/"base class %0 is uninitialized when used here to access %q1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_bind_ref_member_to_parameter, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 122/*, SKIP_ARG*/, /*KEEP_STR*/"binding reference member %0 to stack allocated parameter %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_bind_ref_member_to_temporary, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 122/*, SKIP_ARG*/, /*KEEP_STR*/"binding reference %select{|subobject of }1member %0 to a temporary value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_binding_null_to_reference, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 388/*, SKIP_ARG*/, /*KEEP_STR*/"binding dereferenced null pointer to reference has undefined behavior"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_bitfield_width_exceeds_type_width, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 52/*, SKIP_ARG*/, /*KEEP_STR*/"width of bit-field %0 (%1 bits) exceeds the width of its type; value will be truncated to %2 bit%s2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_bitwise_op_in_bitwise_op, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 53/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' within '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_block_literal_attributes_on_omitted_return_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 238/*, SKIP_ARG*/, /*KEEP_STR*/"attribute %0 ignored, because it cannot be applied to omitted return type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_block_literal_qualifiers_on_omitted_return_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 241/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' qualifier on omitted return type %1 has no effect"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_bool_switch_condition, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 548/*, SKIP_ARG*/, /*KEEP_STR*/"switch condition has boolean value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_braces_around_scalar_init, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 56/*, SKIP_ARG*/, /*KEEP_STR*/"braces around scalar initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_break_binds_to_switch, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 206/*, SKIP_ARG*/, /*KEEP_STR*/"'break' is bound to loop, GCC binds it to switch"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_builtin_unknown, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 248/*, SKIP_ARG*/, /*KEEP_STR*/"use of unknown builtin %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_call_to_pure_virtual_member_function_from_ctor_dtor, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"call to pure virtual member function %0 has undefined behavior; overrides of %0 in subclasses are not available in the %select{constructor|destructor}1 of %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_call_wrong_number_of_arguments, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"too %select{few|many}0 arguments in call to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cannot_pass_non_pod_arg_to_vararg, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 378/*, SKIP_ARG*/, /*KEEP_STR*/"cannot pass object of %select{non-POD|non-trivial}0 type %1 through variadic %select{function|block|method|constructor}2; call will abort at runtime"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cannot_resolve_lock, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 560/*, SKIP_ARG*/, /*KEEP_STR*/"cannot resolve lock expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_case_empty_range, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"empty case range specified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_case_value_overflow, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 547/*, SKIP_ARG*/, /*KEEP_STR*/"overflow converting case value to switch condition type (%0 to %1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cast_align, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 93/*, SKIP_ARG*/, /*KEEP_STR*/"cast from %0 to %1 increases required alignment from %2 to %3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cast_calling_conv, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 94/*, SKIP_ARG*/, /*KEEP_STR*/"cast between incompatible calling conventions '%0' and '%1'; calls through this pointer may abort at runtime"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cast_nonnull_to_bool, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 453/*, SKIP_ARG*/, /*KEEP_STR*/"nonnull %select{function call|parameter}0 '%1' will evaluate to 'true' on first encounter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cast_pointer_from_sel, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 95/*, SKIP_ARG*/, /*KEEP_STR*/"cast of type %0 to %1 is deprecated; use sel_getName instead"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cast_qual, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 96/*, SKIP_ARG*/, /*KEEP_STR*/"cast from %0 to %1 drops %select{const and volatile qualifiers|const qualifier|volatile qualifier}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cast_qual2, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 96/*, SKIP_ARG*/, /*KEEP_STR*/"cast from %0 to %1 must have all intermediate pointers const qualified to be safe"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_category_method_impl_match, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 414/*, SKIP_ARG*/, /*KEEP_STR*/"category is implementing a method which will also be implemented by its primary class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cconv_ignored, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"calling convention %0 ignored for this target"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cconv_knr, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 352/*, SKIP_ARG*/, /*KEEP_STR*/"function with no prototype cannot use the %0 calling convention"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cconv_structors, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"%0 calling convention ignored on constructor/destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cconv_varargs, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"%0 calling convention ignored on variadic function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cdtor_function_try_handler_mem_expr, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 172/*, SKIP_ARG*/, /*KEEP_STR*/"cannot refer to a non-static member from the handler of a %select{constructor|destructor}0 function try block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cfstring_truncated, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 3/*, SKIP_ARG*/, /*KEEP_STR*/"input conversion stopped due to an input byte that does not belong to the input codeset UTF-8"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_class_method_not_found, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 403/*, SKIP_ARG*/, /*KEEP_STR*/"class method %objcclass0 not found (return type defaults to 'id')"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_class_method_not_found_with_typo, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 403/*, SKIP_ARG*/, /*KEEP_STR*/"class method %objcclass0 not found (return type defaults to 'id'); did you mean %objcclass2?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cleanup_ext, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 206/*, SKIP_ARG*/, /*KEEP_STR*/"GCC does not allow the 'cleanup' attribute argument to be anything other than a simple identifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cocoa_naming_owned_rule, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 411/*, SKIP_ARG*/, /*KEEP_STR*/"property follows Cocoa naming convention for returning 'owned' objects"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_collection_expr_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"collection expression type %0 may not respond to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_comma_operator, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 101/*, SKIP_ARG*/, /*KEEP_STR*/"possible misuse of comma operator here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_comparison_always, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 553/*, SKIP_ARG*/, /*KEEP_STR*/"%select{self-|array }0comparison always evaluates to %select{false|true|a constant}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_comparison_bitwise_always, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 553/*, SKIP_ARG*/, /*KEEP_STR*/"bitwise comparison always evaluates to %select{false|true}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_comparison_of_mixed_enum_types, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 169/*, SKIP_ARG*/, /*KEEP_STR*/"comparison of two values with different enumeration types%diff{ ($ and $)|}0,1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_concatenated_nsarray_literal, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 422/*, SKIP_ARG*/, /*KEEP_STR*/"concatenated NSString literal for an NSArray expression - possibly missing a comma"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_condition_is_assignment, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 441/*, SKIP_ARG*/, /*KEEP_STR*/"using the result of an assignment as a condition without parentheses"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_condition_is_idiomatic_assignment, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 237/*, SKIP_ARG*/, /*KEEP_STR*/"using the result of an assignment as a condition without parentheses"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_conflicting_overriding_param_modifiers, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 437/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting distributed object modifiers on parameter type in declaration of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_conflicting_overriding_param_types, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 437/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting parameter types in declaration of %0%diff{: $ vs $|}1,2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_conflicting_overriding_ret_type_modifiers, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 437/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting distributed object modifiers on return type in declaration of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_conflicting_overriding_ret_types, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 437/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting return type in declaration of %0%diff{: $ vs $|}1,2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_conflicting_overriding_variadic, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 437/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting variadic declaration of method and its implementation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_conflicting_param_modifiers, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 145/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting distributed object modifiers on parameter type in implementation of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_conflicting_param_types, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 341/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting parameter types in implementation of %0%diff{: $ vs $|}1,2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_conflicting_ret_type_modifiers, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 145/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting distributed object modifiers on return type in implementation of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_conflicting_ret_types, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 342/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting return type in implementation of %0%diff{: $ vs $|}1,2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_conflicting_variadic, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting variadic declaration of method and its implementation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_conv_to_base_not_used, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conversion function converting %0 to its base class %1 will never be used"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_conv_to_self_not_used, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conversion function converting %0 to itself will never be used"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_conv_to_void_not_used, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"conversion function converting %0 to %1 will never be used"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_ctor_parm_shadows_field, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 503/*, SKIP_ARG*/, /*KEEP_STR*/"constructor parameter %0 shadows the field %1 of %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx11_compat_constexpr_body_invalid_stmt, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 83/*, SKIP_ARG*/, /*KEEP_STR*/"use of this statement in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx11_compat_constexpr_body_multiple_return, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 83/*, SKIP_ARG*/, /*KEEP_STR*/"multiple return statements in constexpr function is incompatible with C++ standards before C++14"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx11_compat_constexpr_body_no_return, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 83/*, SKIP_ARG*/, /*KEEP_STR*/"constexpr function with no return statements is incompatible with C++ standards before C++14"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx11_compat_constexpr_local_var, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 83/*, SKIP_ARG*/, /*KEEP_STR*/"variable declaration in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx11_compat_constexpr_type_definition, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 83/*, SKIP_ARG*/, /*KEEP_STR*/"type definition in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx11_compat_init_capture, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 3, 83/*, SKIP_ARG*/, /*KEEP_STR*/"initialized lambda captures are incompatible with C++ standards before C++14"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx11_compat_variable_template, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 83/*, SKIP_ARG*/, /*KEEP_STR*/"variable templates are incompatible with C++ standards before C++14"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx11_gnu_attribute_on_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"attribute %0 ignored, because it cannot be applied to a type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx14_compat_constexpr_not_const, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 111/*, SKIP_ARG*/, /*KEEP_STR*/"'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx14_compat_inline_variable, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 81/*, SKIP_ARG*/, /*KEEP_STR*/"inline variables are incompatible with C++ standards before C++1z"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx14_compat_star_this_lambda_capture, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 3, 81/*, SKIP_ARG*/, /*KEEP_STR*/"by value capture of '*this' is incompatible with C++ standards before C++1z"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx14_compat_static_assert_no_message, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 81/*, SKIP_ARG*/, /*KEEP_STR*/"static_assert with no message is incompatible with C++ standards before C++1z"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_array_size_conversion, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 88/*, SKIP_ARG*/, /*KEEP_STR*/"implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_auto_type_specifier, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"'auto' type specifier is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_cast_fn_obj, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 88/*, SKIP_ARG*/, /*KEEP_STR*/"cast between pointer-to-function and pointer-to-object is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_constexpr, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"'constexpr' specifier is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_ctor_list_init, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"constructor call from initializer list is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_delegating_ctor, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"delegating constructors are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_empty_scalar_initializer, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"scalar initialized from empty initializer list is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_enum_friend, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"befriending enumeration type %0 is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_enum_nested_name_spec, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"enumeration type in nested name specifier is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_explicit_conversion_functions, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"explicit conversion functions are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_explicit_instantiation_after_specialization, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 88/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation of %0 that occurs after an explicit specialization is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_friend_is_member, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"friend declaration naming a member of the declaring class is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_goto_into_protected_scope, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"jump from this goto statement to its label is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_indirect_goto_in_protected_scope, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"jump from this indirect goto statement to one of its possible targets is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_initializer_list_init, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"initialization of initializer_list object is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_non_static_member_use, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"use of non-static data member %0 in an unevaluated context is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_nonclass_type_friend, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"non-class friend type %0 is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_nontrivial_union_or_anon_struct_member, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"%select{anonymous struct|union}0 member %1 with a non-trivial %select{constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2 is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_pass_non_pod_arg_to_vararg, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"passing object of trivial but non-POD type %0 through variadic %select{function|block|method|constructor}1 is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_reference_list_init, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"reference initialized from initializer list is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_sfinae_access_control, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Report, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"substitution failure due to access control is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_static_data_member_in_union, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"static data member %0 in union is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_switch_into_protected_scope, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"jump from switch statement to this case label is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_temp_copy, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 86/*, SKIP_ARG*/, /*KEEP_STR*/"%select{copying variable|copying parameter|returning object|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element}1 of type %2 when binding a reference to a temporary would %select{invoke an inaccessible constructor|find no viable constructor|find ambiguous constructors|invoke a deleted constructor}0 in C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_template_arg_extra_parens, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"redundant parentheses surrounding address non-type template argument are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_template_arg_local_type, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 87/*, SKIP_ARG*/, /*KEEP_STR*/"local type %0 as template argument is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_template_arg_null, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"use of null pointer as non-type template argument is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_template_arg_object_internal, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument referring to %select{function|object}0 %1 with internal linkage is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_template_arg_unnamed_type, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 89/*, SKIP_ARG*/, /*KEEP_STR*/"unnamed type as template argument is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_template_outside_of_template, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"use of 'template' keyword outside of a template is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_template_parameter_default_in_function_template, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"default template arguments for a function template are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_template_spec_decl_out_of_scope, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 outside namespace %2 is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_typename_outside_of_template, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"use of 'typename' outside of a template is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_unelaborated_friend_type, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"befriending %1 without '%select{struct|interface|union|class|enum}0' keyword is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_unicode_type, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' type specifier is incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx98_compat_using_decl_constructor, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 85/*, SKIP_ARG*/, /*KEEP_STR*/"inheriting constructors are incompatible with C++98"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_cxx_ms_struct, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 258/*, SKIP_ARG*/, /*KEEP_STR*/"ms_struct may not produce Microsoft-compatible layouts for classes with base classes or virtual functions"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_dangling_std_initializer_list, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 123/*, SKIP_ARG*/, /*KEEP_STR*/"array backing the initializer list will be destroyed at the end of %select{the full-expression|the constructor}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_dealloc_in_category, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 125/*, SKIP_ARG*/, /*KEEP_STR*/"-dealloc is being overridden in a category"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_decl_in_param_list, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 633/*, SKIP_ARG*/, /*KEEP_STR*/"declaration of %0 will not be visible outside of this function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_decl_shadow, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 501/*, SKIP_ARG*/, /*KEEP_STR*/"declaration shadows a %select{local variable|variable in %2|static data member of %2|field of %2}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_declspec_attribute_ignored, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"attribute %0 is ignored, place it after \"%select{class|struct|interface|union|enum}1\" to apply attribute to type declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_def_missing_case, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 550/*, SKIP_ARG*/, /*KEEP_STR*/"%plural{1:enumeration value %1 not explicitly handled in switch|2:enumeration values %1 and %2 not explicitly handled in switch|3:enumeration values %1, %2, and %3 not explicitly handled in switch|:%0 enumeration values not explicitly handled in switch: %1, %2, %3...}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_default_atomic_custom_getter_setter, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 120/*, SKIP_ARG*/, /*KEEP_STR*/"atomic by default property %0 has a user defined %select{getter|setter}1 (property should be marked 'atomic' if this is intended)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_delegating_ctor_cycle, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 128/*, SKIP_ARG*/, /*KEEP_STR*/"constructor for %0 creates a delegation cycle"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_delete_abstract_non_virtual_dtor, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 130/*, SKIP_ARG*/, /*KEEP_STR*/"%select{delete|destructor}0 called on %1 that is abstract but has non-virtual destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_delete_array_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'delete' applied to a pointer-to-array type %0 treated as 'delete[]'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_delete_incomplete, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 129/*, SKIP_ARG*/, /*KEEP_STR*/"deleting pointer to incomplete type %0 may cause undefined behavior"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_delete_non_virtual_dtor, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 130/*, SKIP_ARG*/, /*KEEP_STR*/"%select{delete|destructor}0 called on non-final %1 that has virtual functions but non-virtual destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_deprecated, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 25, 133/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is deprecated"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_deprecated_anonymous_namespace, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"'deprecated' attribute on anonymous namespace ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_deprecated_copy_operation, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 25, 131/*, SKIP_ARG*/, /*KEEP_STR*/"definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-declared %select{copy %select{assignment operator|constructor}1|destructor}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_deprecated_def, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 134/*, SKIP_ARG*/, /*KEEP_STR*/"Implementing deprecated %select{method|class|category}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_deprecated_fwdclass_message, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 25, 133/*, SKIP_ARG*/, /*KEEP_STR*/"%0 may be deprecated because the receiver type is unknown"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_deprecated_message, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 25, 133/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is deprecated: %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_deprecated_redundant_constexpr_static_def, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 25, 131/*, SKIP_ARG*/, /*KEEP_STR*/"out-of-line definition of constexpr static data member is redundant in C++17 and is deprecated"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_deprecated_register, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 25, 139/*, SKIP_ARG*/, /*KEEP_STR*/"'register' storage class specifier is deprecated and incompatible with C++1z"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_deprecated_string_literal_conversion, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 25, 66/*, SKIP_ARG*/, /*KEEP_STR*/"conversion from string literal to %0 is deprecated"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_direct_initialize_call, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 175/*, SKIP_ARG*/, /*KEEP_STR*/"explicit call to +initialize results in duplicate call to +initialize"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_direct_ivar_access, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 141/*, SKIP_ARG*/, /*KEEP_STR*/"instance variable %0 is being directly accessed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_direct_super_initialize_call, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 175/*, SKIP_ARG*/, /*KEEP_STR*/"explicit call to [super initialize] should only be in implementation of +initialize"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_dllimport_dropped_from_inline_function, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"%q0 redeclared inline; %1 attribute ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_double_const_requires_fp64, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"double precision constant requires cl_khr_fp64, casting to single precision"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_double_lock, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 560/*, SKIP_ARG*/, /*KEEP_STR*/"acquiring %0 '%1' that is already held"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_dup_category_def, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"duplicate definition of category %1 on interface %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_duplicate_attribute, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"attribute %0 is already applied with different parameters"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_duplicate_attribute_exact, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"attribute %0 is already applied"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_duplicate_declspec, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 158/*, SKIP_ARG*/, /*KEEP_STR*/"duplicate '%0' declaration specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_duplicate_enum_values, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 159/*, SKIP_ARG*/, /*KEEP_STR*/"element %0 has been implicitly assigned %1 which another element has been assigned"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_duplicate_method_decl, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 161/*, SKIP_ARG*/, /*KEEP_STR*/"multiple declarations of method %0 found and ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_duplicate_protocol_def, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"duplicate protocol definition of %0 is ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_dyn_class_memaccess, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 162/*, SKIP_ARG*/, /*KEEP_STR*/"%select{destination for|source of|first operand of|second operand of}0 this %1 call is a pointer to %select{|class containing a }2dynamic class %3; vtable pointer will be %select{overwritten|copied|moved|compared}4"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_empty_for_body, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 165/*, SKIP_ARG*/, /*KEEP_STR*/"for loop has empty body"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_empty_format_string, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 200/*, SKIP_ARG*/, /*KEEP_STR*/"format string is empty"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_empty_if_body, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 165/*, SKIP_ARG*/, /*KEEP_STR*/"if statement has empty body"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_empty_parens_are_function_decl, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 632/*, SKIP_ARG*/, /*KEEP_STR*/"empty parentheses interpreted as a function declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_empty_range_based_for_body, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 165/*, SKIP_ARG*/, /*KEEP_STR*/"range-based for loop has empty body"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_empty_switch_body, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 165/*, SKIP_ARG*/, /*KEEP_STR*/"switch statement has empty body"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_empty_while_body, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 165/*, SKIP_ARG*/, /*KEEP_STR*/"while loop has empty body"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_enum_value_overflow, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"overflow in enumeration value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_equality_with_extra_parens, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 442/*, SKIP_ARG*/, /*KEEP_STR*/"equality comparison with extraneous parentheses"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_exception_caught_by_earlier_handler, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 172/*, SKIP_ARG*/, /*KEEP_STR*/"exception of type %0 will be caught by earlier handler"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_exception_spec_deprecated, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 25, 131/*, SKIP_ARG*/, /*KEEP_STR*/"dynamic exception specifications are deprecated"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_exit_time_destructor, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 173/*, SKIP_ARG*/, /*KEEP_STR*/"declaration requires an exit-time destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_expecting_lock_held_on_loop, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 560/*, SKIP_ARG*/, /*KEEP_STR*/"expecting %0 '%1' to be held at start of each loop"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_expecting_locked, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 560/*, SKIP_ARG*/, /*KEEP_STR*/"expecting %0 '%1' to be held at the end of function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_explicit_instantiation_inline_0x, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 65/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation cannot be 'inline'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_explicit_instantiation_must_be_global_0x, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 65/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation of %0 must occur at global scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_explicit_instantiation_out_of_scope_0x, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 65/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation of %0 not in a namespace enclosing %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_explicit_instantiation_unqualified_wrong_namespace_0x, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 65/*, SKIP_ARG*/, /*KEEP_STR*/"explicit instantiation of %q0 must occur in namespace %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_extern_init, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 179/*, SKIP_ARG*/, /*KEEP_STR*/"'extern' variable has an initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_falloff_nonvoid_function, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 487/*, SKIP_ARG*/, /*KEEP_STR*/"control reaches end of non-void function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_falloff_nonvoid_lambda, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 3, 487/*, SKIP_ARG*/, /*KEEP_STR*/"control reaches end of non-void lambda"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_falloff_noreturn_function, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 284/*, SKIP_ARG*/, /*KEEP_STR*/"function declared 'noreturn' should not return"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_fallthrough_attr_unreachable, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 246/*, SKIP_ARG*/, /*KEEP_STR*/"fallthrough annotation in unreachable code"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_field_is_uninit, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 585/*, SKIP_ARG*/, /*KEEP_STR*/"field %0 is uninitialized when used here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_flag_enum_constant_out_of_range, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 185/*, SKIP_ARG*/, /*KEEP_STR*/"enumeration value %0 is out of range of flags in enumeration type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_float_overflow, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 299/*, SKIP_ARG*/, /*KEEP_STR*/"magnitude of floating-point constant too large for type %0; maximum is %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_float_underflow, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 299/*, SKIP_ARG*/, /*KEEP_STR*/"magnitude of floating-point constant too small for type %0; minimum is %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_floatingpoint_eq, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 188/*, SKIP_ARG*/, /*KEEP_STR*/"comparing floating point with == or != is unsafe"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_for_range_begin_end_types_differ, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 81/*, SKIP_ARG*/, /*KEEP_STR*/"'begin' and 'end' returning different types (%0 and %1) is incompatible with C++ standards before C++1z"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_for_range_const_reference_copy, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 471/*, SKIP_ARG*/, /*KEEP_STR*/"loop variable %0 %diff{has type $ but is initialized with type $| is initialized with a value of a different type}1,2 resulting in a copy"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_for_range_copy, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 471/*, SKIP_ARG*/, /*KEEP_STR*/"loop variable %0 of type %1 creates a copy from type %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_for_range_variable_always_copy, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 471/*, SKIP_ARG*/, /*KEEP_STR*/"loop variable %0 is always a copy because the range of type %1 does not return a reference"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_format_argument_needs_cast, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"%select{values of type|enum values with underlying type}2 '%0' should not be used as format arguments; add an explicit cast to %1 instead"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_format_conversion_argument_type_mismatch, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"format specifies type %0 but the argument has %select{type|underlying type}2 %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_format_conversion_argument_type_mismatch_pedantic, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 197/*, SKIP_ARG*/, /*KEEP_STR*/"format specifies type %0 but the argument has %select{type|underlying type}2 %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_format_invalid_conversion, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 194/*, SKIP_ARG*/, /*KEEP_STR*/"invalid conversion specifier '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_format_invalid_positional_specifier, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"invalid position specified for %select{field width|field precision}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_format_mix_positional_nonpositional_args, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"cannot mix positional and non-positional arguments in format string"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_format_non_standard, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 195/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' %select{length modifier|conversion specifier}1 is not supported by ISO C"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_format_non_standard_conversion_spec, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 195/*, SKIP_ARG*/, /*KEEP_STR*/"using length modifier '%0' with conversion specifier '%1' is not supported by ISO C"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_format_non_standard_positional_arg, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 195/*, SKIP_ARG*/, /*KEEP_STR*/"positional arguments are not supported by ISO C"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_format_nonliteral, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 196/*, SKIP_ARG*/, /*KEEP_STR*/"format string is not a string literal"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_format_nonliteral_noargs, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 198/*, SKIP_ARG*/, /*KEEP_STR*/"format string is not a string literal (potentially insecure)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_format_nonsensical_length, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"length modifier '%0' results in undefined behavior or no effect with '%1' conversion specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_format_string_is_wide_literal, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"format string should not be a wide string"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_format_zero_positional_specifier, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"position arguments in format strings start counting at 1 (not 0)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_forward_class_redefinition, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 398/*, SKIP_ARG*/, /*KEEP_STR*/"redefinition of forward class %0 of a typedef name of an object type is ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_fun_excludes_mutex, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 560/*, SKIP_ARG*/, /*KEEP_STR*/"cannot call function '%1' while %0 '%2' is held"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_fun_requires_lock, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 560/*, SKIP_ARG*/, /*KEEP_STR*/"calling function '%1' requires holding %0 %select{'%2'|'%2' exclusively}3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_fun_requires_lock_precise, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 564/*, SKIP_ARG*/, /*KEEP_STR*/"calling function '%1' requires holding %0 %select{'%2'|'%2' exclusively}3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_func_template_missing, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 576/*, SKIP_ARG*/, /*KEEP_STR*/"instantiation of function %q0 required here, but no definition is available"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_function_def_in_objc_container, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 204/*, SKIP_ARG*/, /*KEEP_STR*/"function definition inside an Objective-C container is deprecated"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_function_marked_not_override_overriding, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 267/*, SKIP_ARG*/, /*KEEP_STR*/"%0 overrides a member function but is not marked 'override'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_gc_attribute_weak_on_local, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"Objective-C GC does not allow weak variables on the stack"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_global_constructor, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 207/*, SKIP_ARG*/, /*KEEP_STR*/"declaration requires a global constructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_global_destructor, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 207/*, SKIP_ARG*/, /*KEEP_STR*/"declaration requires a global destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_gnu_inline_attribute_requires_inline, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"'gnu_inline' attribute requires function to be marked 'inline', attribute ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_guarded_pass_by_reference, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 565/*, SKIP_ARG*/, /*KEEP_STR*/"passing variable '%1' by reference requires holding %0 %select{'%2'|'%2' exclusively}3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_iboutlet_object_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 282/*, SKIP_ARG*/, /*KEEP_STR*/"%select{instance variable|property}2 with %0 attribute must be an object type (invalid %1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_iboutletcollection_property_assign, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 282/*, SKIP_ARG*/, /*KEEP_STR*/"IBOutletCollection properties should be copy/strong and not assign"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_identity_field_assign, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 495/*, SKIP_ARG*/, /*KEEP_STR*/"assigning %select{field|instance variable}0 to itself"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_ignored_ms_inheritance, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"inheritance model ignored on %select{primary template|partial specialization}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_illegal_constant_array_size, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 449/*, SKIP_ARG*/, /*KEEP_STR*/"size of static array must be an integer constant expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impcast_bitfield_precision_constant, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 51/*, SKIP_ARG*/, /*KEEP_STR*/"implicit truncation from %2 to bitfield changes value from %0 to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impcast_bool_to_null_pointer, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 54/*, SKIP_ARG*/, /*KEEP_STR*/"initialization of pointer of type %0 to null from a constant boolean expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impcast_complex_scalar, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 113/*, SKIP_ARG*/, /*KEEP_STR*/"implicit conversion discards imaginary component: %0 to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impcast_different_enum_types, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 170/*, SKIP_ARG*/, /*KEEP_STR*/"implicit conversion from enumeration type %0 to different enumeration type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impcast_double_promotion, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 157/*, SKIP_ARG*/, /*KEEP_STR*/"implicit conversion increases floating-point precision: %0 to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impcast_float_integer, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 187/*, SKIP_ARG*/, /*KEEP_STR*/"implicit conversion turns floating-point number into integer: %0 to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impcast_float_precision, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 113/*, SKIP_ARG*/, /*KEEP_STR*/"implicit conversion loses floating-point precision: %0 to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impcast_float_to_integer, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 189/*, SKIP_ARG*/, /*KEEP_STR*/"implicit conversion of out of range value from %0 to %1 changes value from %2 to %3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impcast_float_to_integer_zero, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 190/*, SKIP_ARG*/, /*KEEP_STR*/"implicit conversion from %0 to %1 changes non-zero value from %2 to %3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impcast_floating_point_to_bool, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 244/*, SKIP_ARG*/, /*KEEP_STR*/"implicit conversion turns floating-point number into bool: %0 to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impcast_integer_64_32, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 512/*, SKIP_ARG*/, /*KEEP_STR*/"implicit conversion loses integer precision: %0 to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impcast_integer_precision, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 113/*, SKIP_ARG*/, /*KEEP_STR*/"implicit conversion loses integer precision: %0 to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impcast_integer_precision_constant, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 109/*, SKIP_ARG*/, /*KEEP_STR*/"implicit conversion from %2 to %3 changes value from %0 to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impcast_integer_sign, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 514/*, SKIP_ARG*/, /*KEEP_STR*/"implicit conversion changes signedness: %0 to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impcast_integer_sign_conditional, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 514/*, SKIP_ARG*/, /*KEEP_STR*/"operand of ? changes signedness: %0 to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impcast_literal_float_to_integer, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 298/*, SKIP_ARG*/, /*KEEP_STR*/"implicit conversion from %0 to %1 changes value from %2 to %3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impcast_null_pointer_to_integer, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 387/*, SKIP_ARG*/, /*KEEP_STR*/"implicit conversion of %select{NULL|nullptr}0 constant to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impcast_objective_c_literal_to_bool, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 401/*, SKIP_ARG*/, /*KEEP_STR*/"implicit boolean conversion of Objective-C object literal always evaluates to true"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impcast_pointer_to_bool, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 453/*, SKIP_ARG*/, /*KEEP_STR*/"address of%select{| function| array}0 '%1' will always evaluate to 'true'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impcast_string_literal_to_bool, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 541/*, SKIP_ARG*/, /*KEEP_STR*/"implicit conversion turns string literal into bool: %0 to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impcast_vector_scalar, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 113/*, SKIP_ARG*/, /*KEEP_STR*/"implicit conversion turns vector to scalar: %0 to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impl_required_for_class_property, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 409/*, SKIP_ARG*/, /*KEEP_STR*/"class property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this class implementation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_impl_required_in_category_for_class_property, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 409/*, SKIP_ARG*/, /*KEEP_STR*/"class property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_implements_nscopying, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"default assign attribute on property %0 which implements NSCopying protocol is not appropriate with -fobjc-gc[-only]"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_implicit_atomic_property, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 243/*, SKIP_ARG*/, /*KEEP_STR*/"property is assumed atomic by default"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_implicit_decl_requires_sysheader, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 60/*, SKIP_ARG*/, /*KEEP_STR*/"declaration of built-in function '%1' requires inclusion of the header <%0>"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_implicit_function_decl, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 248/*, SKIP_ARG*/, /*KEEP_STR*/"implicit declaration of function %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_implicitly_retains_self, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 250/*, SKIP_ARG*/, /*KEEP_STR*/"block implicitly retains 'self'; explicitly mention 'self' to indicate this is intended behavior"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_inaccessible_base_class, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 254/*, SKIP_ARG*/, /*KEEP_STR*/"direct base %0 is inaccessible due to ambiguity:%1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_incompatible_qualified_id, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_incompatible_vectors, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 630/*, SKIP_ARG*/, /*KEEP_STR*/"incompatible vector types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_incomplete_encoded_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 167/*, SKIP_ARG*/, /*KEEP_STR*/"encoding of %0 type is incomplete because %1 component has unknown encoding"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_increment_bool, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 25, 135/*, SKIP_ARG*/, /*KEEP_STR*/"incrementing expression of type bool is deprecated and incompatible with C++1z"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_independentclass_attribute, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 5/*, SKIP_ARG*/, /*KEEP_STR*/"'objc_independent_class' attribute may be put on a typedef only; attribute is ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_indirection_through_null, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 388/*, SKIP_ARG*/, /*KEEP_STR*/"indirection of non-volatile null pointer will be deleted, not trap"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_infinite_recursive_function, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 269/*, SKIP_ARG*/, /*KEEP_STR*/"all paths through this function will call itself"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_init_list_constant_narrowing, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 73/*, SKIP_ARG*/, /*KEEP_STR*/"constant expression evaluates to %0 which cannot be narrowed to type %1 in C++11"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_init_list_type_narrowing, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 73/*, SKIP_ARG*/, /*KEEP_STR*/"type %0 cannot be narrowed to %1 in initializer list in C++11"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_init_list_variable_narrowing, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 73/*, SKIP_ARG*/, /*KEEP_STR*/"non-constant-expression cannot be narrowed from type %0 to %1 in initializer list in C++11"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_init_ptr_member_to_parameter_addr, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 122/*, SKIP_ARG*/, /*KEEP_STR*/"initializing pointer member %0 with the stack address of parameter %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_initializer_out_of_order, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 481/*, SKIP_ARG*/, /*KEEP_STR*/"%select{field|base class}0 %1 will be initialized after %select{field|base}2 %3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_initializer_overrides, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 271/*, SKIP_ARG*/, /*KEEP_STR*/"initializer overrides prior initialization of this subobject"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_inline_namespace_reopened_noninline, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"inline namespace cannot be reopened as a non-inline namespace"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_inst_method_not_found, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 403/*, SKIP_ARG*/, /*KEEP_STR*/"instance method %objcinstance0 not found (return type defaults to 'id')"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_instance_method_not_found_with_typo, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 403/*, SKIP_ARG*/, /*KEEP_STR*/"instance method %objcinstance0 not found (return type defaults to 'id'); did you mean %objcinstance2?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_instance_method_on_class_found, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 403/*, SKIP_ARG*/, /*KEEP_STR*/"instance method %0 found instead of class method %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_int_to_pointer_cast, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 277/*, SKIP_ARG*/, /*KEEP_STR*/"cast to %1 from smaller integer type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_int_to_void_pointer_cast, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 278/*, SKIP_ARG*/, /*KEEP_STR*/"cast to %1 from smaller integer type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_internal_linkage_local_storage, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"'internal_linkage' attribute on a non-static local variable is ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_invalid_asm_cast_lvalue, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 12, 0/*, SKIP_ARG*/, /*KEEP_STR*/"invalid use of a cast in an inline asm context requiring an l-value: accepted due to -fheinous-gnu-extensions, but clang may remove support for this in the future"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_invalid_capability_name, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 561/*, SKIP_ARG*/, /*KEEP_STR*/"invalid capability name '%0'; capability name must be 'mutex' or 'role'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_invalid_initializer_from_system_header, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 283/*, SKIP_ARG*/, /*KEEP_STR*/"invalid constructor form class in system header, should not be explicit"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_ivar_use_hidden, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 505/*, SKIP_ARG*/, /*KEEP_STR*/"local declaration of %0 hides instance variable"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_ivars_in_interface, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 399/*, SKIP_ARG*/, /*KEEP_STR*/"declaration of instance variables in the interface is deprecated"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_jump_out_of_seh_finally, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 291/*, SKIP_ARG*/, /*KEEP_STR*/"jump out of __finally block has undefined behavior"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_kern_is_inline, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 119/*, SKIP_ARG*/, /*KEEP_STR*/"ignored 'inline' attribute on kernel function %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_kern_is_method, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_EXTENSION, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 119/*, SKIP_ARG*/, /*KEEP_STR*/"kernel function %0 is a member function; this may not be accepted by nvcc"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_lock_exclusive_and_shared, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 560/*, SKIP_ARG*/, /*KEEP_STR*/"%0 '%1' is acquired exclusively and shared in the same scope"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_lock_some_predecessors, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 560/*, SKIP_ARG*/, /*KEEP_STR*/"%0 '%1' is not held on every path through here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_logical_and_in_logical_or, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 302/*, SKIP_ARG*/, /*KEEP_STR*/"'&&' within '||'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_logical_instead_of_bitwise, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 110/*, SKIP_ARG*/, /*KEEP_STR*/"use of logical '%0' with constant operand"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_logical_not_on_lhs_of_comparison, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 301/*, SKIP_ARG*/, /*KEEP_STR*/"logical not is only applied to the left hand side of this comparison"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_loop_ctrl_binds_to_inner, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 206/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' is bound to current loop, GCC binds it to the enclosing loop"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_loop_state_mismatch, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 112/*, SKIP_ARG*/, /*KEEP_STR*/"state of variable '%0' must match at the entry and exit of loop"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_lunsigned_always_true_comparison, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 553/*, SKIP_ARG*/, /*KEEP_STR*/"comparison of unsigned%select{| enum}2 expression %0 is always %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_main_one_arg, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 306/*, SKIP_ARG*/, /*KEEP_STR*/"only one parameter on 'main' declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_main_redefined, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 306/*, SKIP_ARG*/, /*KEEP_STR*/"variable named 'main' with external linkage has undefined behavior"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_maybe_falloff_nonvoid_function, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 487/*, SKIP_ARG*/, /*KEEP_STR*/"control may reach end of non-void function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_maybe_falloff_nonvoid_lambda, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 3, 487/*, SKIP_ARG*/, /*KEEP_STR*/"control may reach end of non-void lambda"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_maybe_uninit_var, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 107/*, SKIP_ARG*/, /*KEEP_STR*/"variable %0 may be uninitialized when %select{used here|captured by block}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_maynot_respond, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%0 may not respond to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_member_extra_qualification, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 326/*, SKIP_ARG*/, /*KEEP_STR*/"extra qualification on member %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_memcpy_chk_overflow, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 59/*, SKIP_ARG*/, /*KEEP_STR*/"%0 will always overflow destination buffer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_memsize_comparison, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 310/*, SKIP_ARG*/, /*KEEP_STR*/"size argument in %0 call is a comparison"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_mips_interrupt_attribute, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"MIPS 'interrupt' attribute only applies to functions that have %select{no parameters|a 'void' return type}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_mismatched_availability, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 45/*, SKIP_ARG*/, /*KEEP_STR*/"availability does not match previous declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_mismatched_availability_override, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 45/*, SKIP_ARG*/, /*KEEP_STR*/"%select{|overriding }4method %select{introduced after|deprecated before|obsoleted before}0 %select{the protocol method it implements|overridden method}4 on %1 (%2 vs. %3)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_mismatched_availability_override_unavail, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 45/*, SKIP_ARG*/, /*KEEP_STR*/"%select{|overriding }1method cannot be unavailable on %0 when %select{the protocol method it implements|its overridden method}1 is available"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_mismatched_delete_new, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 340/*, SKIP_ARG*/, /*KEEP_STR*/"'delete%select{|[]}0' applied to a pointer that was allocated with 'new%select{[]|}0'; did you mean 'delete%select{[]|}0'?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_mismatched_nullability_attr, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 17, 389/*, SKIP_ARG*/, /*KEEP_STR*/"nullability specifier %0 conflicts with existing specifier %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_mismatched_section, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 491/*, SKIP_ARG*/, /*KEEP_STR*/"section does not match previous declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_missing_braces, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 344/*, SKIP_ARG*/, /*KEEP_STR*/"suggest braces around initialization of subobject"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_missing_case, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 547/*, SKIP_ARG*/, /*KEEP_STR*/"%plural{1:enumeration value %1 not handled in switch|2:enumeration values %1 and %2 not handled in switch|3:enumeration values %1, %2, and %3 not handled in switch|:%0 enumeration values not handled in switch: %1, %2, %3...}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_missing_case_for_condition, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"no case matching constant switch condition '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_missing_explicit_synthesis, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 404/*, SKIP_ARG*/, /*KEEP_STR*/"auto property synthesis is synthesizing property not explicitly synthesized"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_missing_field_initializers, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 347/*, SKIP_ARG*/, /*KEEP_STR*/"missing field %0 initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_missing_format_string, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"format string missing"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_missing_method_return_type, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 350/*, SKIP_ARG*/, /*KEEP_STR*/"method has no return type specified; defaults to 'id'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_missing_prototype, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 353/*, SKIP_ARG*/, /*KEEP_STR*/"no previous prototype for function %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_missing_sentinel, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 498/*, SKIP_ARG*/, /*KEEP_STR*/"missing sentinel in %select{function call|method dispatch|block call}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_missing_variable_declarations, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 356/*, SKIP_ARG*/, /*KEEP_STR*/"no previous extern declaration for non-static variable %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_mixed_sign_comparison, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 513/*, SKIP_ARG*/, /*KEEP_STR*/"comparison of integers of different signs: %0 and %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_modifying_shadowing_decl, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 504/*, SKIP_ARG*/, /*KEEP_STR*/"modifying constructor parameter %0 that shadows a field of %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_multiple_method_decl, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 406/*, SKIP_ARG*/, /*KEEP_STR*/"multiple methods named %0 found"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_namespace_member_extra_qualification, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 181/*, SKIP_ARG*/, /*KEEP_STR*/"extra qualification on member %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_neon_vector_initializer_non_portable, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 384/*, SKIP_ARG*/, /*KEEP_STR*/"vector initializers are not compatible with NEON intrinsics in big endian mode"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_no_autosynthesis_property, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 413/*, SKIP_ARG*/, /*KEEP_STR*/"auto property synthesis will not synthesize property %0 because it is 'readwrite' but it will be synthesized 'readonly' via another property"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_no_autosynthesis_shared_ivar_property, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 413/*, SKIP_ARG*/, /*KEEP_STR*/"auto property synthesis will not synthesize property %0 because it cannot share an ivar with another synthesized property"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_no_constructor_for_refconst, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{struct|interface|union|class|enum}0 %1 does not declare any constructor to initialize its non-modifiable members"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_no_unlock, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 560/*, SKIP_ARG*/, /*KEEP_STR*/"%0 '%1' is still held at the end of function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_non_contravariant_overriding_param_types, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 437/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting parameter types in declaration of %0: %1 vs %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_non_contravariant_param_types, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 311/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting parameter types in implementation of %0: %1 vs %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_non_covariant_overriding_ret_types, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 437/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting return type in declaration of %0: %1 vs %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_non_covariant_ret_types, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 311/*, SKIP_ARG*/, /*KEEP_STR*/"conflicting return type in implementation of %0: %1 vs %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_non_literal_null_pointer, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 375/*, SKIP_ARG*/, /*KEEP_STR*/"expression which evaluates to zero treated as a null pointer constant of type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_non_pod_vararg_with_format_string, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 378/*, SKIP_ARG*/, /*KEEP_STR*/"cannot pass %select{non-POD|non-trivial}0 object of type %1 to variadic %select{function|block|method|constructor}2; expected type from format string was %3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_non_virtual_dtor, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 379/*, SKIP_ARG*/, /*KEEP_STR*/"%0 has virtual functions but non-virtual destructor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_nonnull_expr_compare, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 556/*, SKIP_ARG*/, /*KEEP_STR*/"comparison of nonnull %select{function call|parameter}0 '%1' %select{not |}2equal to a null pointer is '%select{true|false}2' on first encounter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_noreturn_function_has_return_expr, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 284/*, SKIP_ARG*/, /*KEEP_STR*/"function %0 declared 'noreturn' should not return"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_not_a_doxygen_trailing_member_comment, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 22, 151/*, SKIP_ARG*/, /*KEEP_STR*/"not a Doxygen trailing comment"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_not_compound_assign, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of unary operator that may be intended as compound assignment (%0=)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_not_enough_argument, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 498/*, SKIP_ARG*/, /*KEEP_STR*/"not enough variable arguments in %0 declaration to fit a sentinel"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_not_in_enum, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 547/*, SKIP_ARG*/, /*KEEP_STR*/"case value not in enumerated type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_not_in_enum_assignment, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 33/*, SKIP_ARG*/, /*KEEP_STR*/"integer constant not in range of enumerated type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_ns_attribute_wrong_parameter_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute only applies to %select{Objective-C object|pointer|pointer-to-CF-pointer}1 parameters"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_ns_attribute_wrong_return_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute only applies to %select{functions|methods|properties}1 that return %select{an Objective-C object|a pointer|a non-retainable pointer}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_nsobject_attribute, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 6/*, SKIP_ARG*/, /*KEEP_STR*/"'NSObject' attribute may be put on a typedef only; attribute is ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_null_arg, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 380/*, SKIP_ARG*/, /*KEEP_STR*/"null passed to a callee that requires a non-null argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_null_in_arithmetic_operation, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 385/*, SKIP_ARG*/, /*KEEP_STR*/"use of NULL in arithmetic operation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_null_in_comparison_operation, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 385/*, SKIP_ARG*/, /*KEEP_STR*/"comparison between NULL and non-pointer %select{(%1 and NULL)|(NULL and %1)}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_null_pointer_compare, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 556/*, SKIP_ARG*/, /*KEEP_STR*/"comparison of %select{address of|function|array}0 '%1' %select{not |}2equal to a null pointer is always %select{true|false}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_null_resettable_setter, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 17, 389/*, SKIP_ARG*/, /*KEEP_STR*/"synthesized setter %0 for null_resettable property %1 does not handle nil"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_null_ret, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 380/*, SKIP_ARG*/, /*KEEP_STR*/"null returned from %select{function|method}0 that requires a non-null return value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_nullability_declspec, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 17, 391/*, SKIP_ARG*/, /*KEEP_STR*/"nullability specifier %0 cannot be applied to non-pointer type %1; did you mean to apply the specifier to the %select{pointer|block pointer|member pointer|function pointer|member function pointer}2?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_nullability_lost, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 17, 393/*, SKIP_ARG*/, /*KEEP_STR*/"implicit conversion from nullable pointer %0 to non-nullable pointer type %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_nullability_missing, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 17, 390/*, SKIP_ARG*/, /*KEEP_STR*/"%select{pointer|block pointer|member pointer}0 is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_cdirective_format_string, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 117/*, SKIP_ARG*/, /*KEEP_STR*/"using %0 directive in %select{NSString|CFString}1 which is being passed as a formatting argument to the formatting %select{method|CFfunction}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_circular_container, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 395/*, SKIP_ARG*/, /*KEEP_STR*/"adding '%0' to '%1' might cause circular dependency in container"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_collection_literal_element, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 401/*, SKIP_ARG*/, /*KEEP_STR*/"object of type %0 is not compatible with %select{array element type|dictionary key type|dictionary value type}1 %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_designated_init_missing_super_call, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 397/*, SKIP_ARG*/, /*KEEP_STR*/"designated initializer missing a 'super' call to a designated initializer of the super class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_designated_init_non_designated_init_call, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 397/*, SKIP_ARG*/, /*KEEP_STR*/"designated initializer invoked a non-designated initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_designated_init_non_super_designated_init_call, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 397/*, SKIP_ARG*/, /*KEEP_STR*/"designated initializer should only invoke a designated initializer on 'super'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_implementation_missing_designated_init_override, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 397/*, SKIP_ARG*/, /*KEEP_STR*/"method override for the designated initializer of the superclass %objcinstance0 not found"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_invalid_bridge, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 57/*, SKIP_ARG*/, /*KEEP_STR*/"%0 bridges to %1, not %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_invalid_bridge_to_cf, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 57/*, SKIP_ARG*/, /*KEEP_STR*/"%0 cannot bridge to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_isa_assign, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 136/*, SKIP_ARG*/, /*KEEP_STR*/"assignment to Objective-C's isa is deprecated in favor of object_setClass()"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_isa_use, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 136/*, SKIP_ARG*/, /*KEEP_STR*/"direct access to Objective-C's isa is deprecated in favor of object_getClass()"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_literal_comparison, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 400/*, SKIP_ARG*/, /*KEEP_STR*/"direct comparison of %select{an array literal|a dictionary literal|a numeric literal|a boxed expression|}0 has undefined behavior"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_missing_super_call, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 405/*, SKIP_ARG*/, /*KEEP_STR*/"method possibly missing a [super %0] call"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_pointer_cxx_catch_fragile, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 408/*, SKIP_ARG*/, /*KEEP_STR*/"cannot catch an exception thrown with @throw in C++ in the non-unified exception model"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_pointer_masking, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 137/*, SKIP_ARG*/, /*KEEP_STR*/"bitmasking for introspection of Objective-C object pointers is strongly discouraged"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_pointer_masking_performSelector, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 138/*, SKIP_ARG*/, /*KEEP_STR*/"bitmasking for introspection of Objective-C object pointers is strongly discouraged"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_precise_lifetime_meaningless, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_ERROR, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_SubstitutionFailure, /*KEEP_BOOL*/false, /*KEEP_BOOL*/true, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"objc_precise_lifetime is not meaningful for %select{__unsafe_unretained|__autoreleasing}0 objects"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_property_copy_missing_on_block, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'copy' attribute must be specified for the block property when -fobjc-gc-only is specified"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_property_default_assign_on_object, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 412/*, SKIP_ARG*/, /*KEEP_STR*/"default property attribute 'assign' not appropriate for non-GC object"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_property_no_assignment_attribute, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 412/*, SKIP_ARG*/, /*KEEP_STR*/"no 'assign', 'retain', or 'copy' attribute is specified - 'assign' is assumed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_property_retain_of_block, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 407/*, SKIP_ARG*/, /*KEEP_STR*/"retain'ed block property does not copy the block - use copy attribute instead"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_readonly_property_has_setter, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 417/*, SKIP_ARG*/, /*KEEP_STR*/"setter cannot be specified for a readonly property"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_redundant_literal_use, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 27, 419/*, SKIP_ARG*/, /*KEEP_STR*/"using %0 with a literal is redundant"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_redundant_qualified_class_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 0, 416/*, SKIP_ARG*/, /*KEEP_STR*/"parameterized class %0 already conforms to the protocols listed; did you forget a '*'?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_requires_super_protocol, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 482/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute cannot be applied to %select{methods in protocols|dealloc}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_root_class_missing, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 420/*, SKIP_ARG*/, /*KEEP_STR*/"class %0 defined without specifying a base class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_secondary_init_missing_init_call, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 397/*, SKIP_ARG*/, /*KEEP_STR*/"convenience initializer missing a 'self' call to another initializer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_secondary_init_super_init_call, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 397/*, SKIP_ARG*/, /*KEEP_STR*/"convenience initializer should not invoke an initializer on 'super'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_objc_string_literal_comparison, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 421/*, SKIP_ARG*/, /*KEEP_STR*/"direct comparison of a string literal has undefined behavior"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_old_style_cast, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 424/*, SKIP_ARG*/, /*KEEP_STR*/"use of old-style cast"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_omp_alignment_not_power_of_two, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 426/*, SKIP_ARG*/, /*KEEP_STR*/"aligned clause will be ignored because the requested alignment is not a power of 2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_omp_linear_step_zero, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 426/*, SKIP_ARG*/, /*KEEP_STR*/"zero linear step (%0 %select{|and other variables in clause }1should probably be const)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_omp_loop_64_bit_var, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 427/*, SKIP_ARG*/, /*KEEP_STR*/"OpenMP loop iteration variable cannot have more than 64 bits size and will be narrowed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_omp_nesting_simd, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 520/*, SKIP_ARG*/, /*KEEP_STR*/"OpenMP only allows an ordered construct with the simd clause nested in a simd construct"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_omp_not_in_target_context, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 428/*, SKIP_ARG*/, /*KEEP_STR*/"declaration is not declared in any declare target region"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_omp_section_is_char, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 11, 98/*, SKIP_ARG*/, /*KEEP_STR*/"array section %select{lower bound|length}0 is of type 'char'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_on_superclass_use, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"class implementation may not have super class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_opencl_attr_deprecated_ignored, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute is deprecated and ignored in OpenCL version %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_operator_new_returns_null, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 372/*, SKIP_ARG*/, /*KEEP_STR*/"%0 should not return a null pointer unless it is declared 'throw()'%select{| or 'noexcept'}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_out_of_range_compare, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 554/*, SKIP_ARG*/, /*KEEP_STR*/"comparison of %select{constant %0|true|false}1 with %select{expression of type %2|boolean expression}3 is always %select{false|true}4"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_overaligned_type, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 431/*, SKIP_ARG*/, /*KEEP_STR*/"type %0 requires %1 bytes of alignment and the default allocator only guarantees %2 bytes"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_overloaded_shift_in_comparison, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 434/*, SKIP_ARG*/, /*KEEP_STR*/"overloaded operator %select{>>|<<}0 has higher precedence than comparison operator"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_overloaded_virtual, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 435/*, SKIP_ARG*/, /*KEEP_STR*/"%q0 hides overloaded virtual %select{function|functions}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_padded_struct_anon_field, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 440/*, SKIP_ARG*/, /*KEEP_STR*/"padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%s2 to align anonymous bit-field"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_padded_struct_field, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 440/*, SKIP_ARG*/, /*KEEP_STR*/"padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%s2 to align %4"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_padded_struct_size, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 440/*, SKIP_ARG*/, /*KEEP_STR*/"padding size of %0 with %1 %select{byte|bit}2%s1 to alignment boundary"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_param_return_typestate_mismatch, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 112/*, SKIP_ARG*/, /*KEEP_STR*/"parameter '%0' not in expected state when the function returns: expected '%1', observed '%2'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_param_typestate_mismatch, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 112/*, SKIP_ARG*/, /*KEEP_STR*/"argument not in expected state; expected '%0', observed '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_parameter_size, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 296/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is a large (%1 bytes) pass-by-value argument; pass it by reference instead ?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_parens_disambiguated_as_function_declaration, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 632/*, SKIP_ARG*/, /*KEEP_STR*/"parentheses were disambiguated as a function declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_partial_availability, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 443/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is only available conditionally"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_partial_fwdclass_message, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 443/*, SKIP_ARG*/, /*KEEP_STR*/"%0 may be partial because the receiver type is unknown"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_partial_message, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 443/*, SKIP_ARG*/, /*KEEP_STR*/"%0 is partial: %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_partial_specs_not_deducible, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"%select{class|variable}0 template partial specialization contains %select{a template parameter|template parameters}1 that cannot be deduced; this partial specialization will never be used"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pass_class_arg_to_vararg, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 100/*, SKIP_ARG*/, /*KEEP_STR*/"passing object of class type %0 through variadic %select{function|block|method|constructor}1%select{|; did you mean to call '%3'?}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pessimizing_move_on_initialization, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 451/*, SKIP_ARG*/, /*KEEP_STR*/"moving a temporary object prevents copy elision"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pessimizing_move_on_return, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 451/*, SKIP_ARG*/, /*KEEP_STR*/"moving a local object in a return statement prevents copy elision"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pointer_abs, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 8/*, SKIP_ARG*/, /*KEEP_STR*/"taking the absolute value of %select{pointer|function|array}0 type %1 is suspicious"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pointer_indirection_from_incompatible_type, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 579/*, SKIP_ARG*/, /*KEEP_STR*/"dereference of type %1 that was reinterpret_cast from type %0 has undefined behavior"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_options_align_reset_failed, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 240/*, SKIP_ARG*/, /*KEEP_STR*/"#pragma options align=reset failed: %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_pack_invalid_alignment, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 240/*, SKIP_ARG*/, /*KEEP_STR*/"expected #pragma pack parameter to be '1', '2', '4', '8', or '16'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_pack_pop_identifer_and_alignment, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"specifying both a name and alignment to 'pop' is undefined"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_pack_show, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"value of #pragma pack(show) == %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_pop_failed, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 240/*, SKIP_ARG*/, /*KEEP_STR*/"#pragma %0(pop, ...) failed: %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_unused_expected_var_arg, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 240/*, SKIP_ARG*/, /*KEEP_STR*/"only variables can be arguments to '#pragma unused'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pragma_unused_undeclared_var, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 240/*, SKIP_ARG*/, /*KEEP_STR*/"undeclared variable %0 used as an argument for '#pragma unused'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_precedence_bitwise_rel, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 441/*, SKIP_ARG*/, /*KEEP_STR*/"%0 has lower precedence than %1; %1 will be evaluated first"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_precedence_conditional, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 441/*, SKIP_ARG*/, /*KEEP_STR*/"operator '?:' has lower precedence than '%0'; '%0' will be evaluated first"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_printf_ObjCflags_without_ObjCConversion, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"object format flags cannot be used with '%0' conversion specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_printf_asterisk_missing_arg, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"'%select{*|.*}0' specified field %select{width|precision}0 is missing a matching 'int' argument"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_printf_asterisk_wrong_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"field %select{width|precision}0 should have type %1, but argument has type %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_printf_data_arg_not_used, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 193/*, SKIP_ARG*/, /*KEEP_STR*/"data argument not used by format string"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_printf_empty_objc_flag, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"missing object format flag"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_printf_format_string_contains_null_char, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"format string contains '\\0' within the string body"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_printf_format_string_not_null_terminated, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"format string is not null-terminated"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_printf_ignored_flag, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"flag '%0' is ignored when flag '%1' is present"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_printf_incomplete_specifier, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"incomplete format specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_printf_insufficient_data_args, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"more '%%' conversions than data arguments"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_printf_invalid_objc_flag, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' is not a valid object format flag"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_printf_nonsensical_flag, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"flag '%0' results in undefined behavior with '%1' conversion specifier"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_printf_nonsensical_optional_amount, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"%select{field width|precision}0 used with '%1' conversion specifier, resulting in undefined behavior"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_printf_positional_arg_exceeds_data_args, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"data argument position '%0' exceeds the number of data arguments (%1)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_private_extern, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 462/*, SKIP_ARG*/, /*KEEP_STR*/"use of __private_extern__ on a declaration may not produce external symbol private to the linkage unit and is deprecated"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_profile_data_out_of_date, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 29, 464/*, SKIP_ARG*/, /*KEEP_STR*/"profile data may be out of date: of %0 function%s0, %1 %plural{1:has|:have}1 no data and %2 %plural{1:has|:have}2 mismatched data that will be ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_profile_data_unprofiled, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 29, 465/*, SKIP_ARG*/, /*KEEP_STR*/"no profile data available for file \"%0\""), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_property_access_suggest, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 466/*, SKIP_ARG*/, /*KEEP_STR*/"property %0 not found on object of type %1; did you mean to access property %2?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_property_attr_mismatch, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 467/*, SKIP_ARG*/, /*KEEP_STR*/"property attribute in class extension does not match the primary class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_property_attribute, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 467/*, SKIP_ARG*/, /*KEEP_STR*/"'%1' attribute on property %0 does not match the property inherited from %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_property_getter_owning_mismatch, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"property declared as returning non-retained objects; getter returning retained objects"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_property_implicitly_mismatched, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 410/*, SKIP_ARG*/, /*KEEP_STR*/"primary property declaration is implicitly strong while redeclaration in class extension is weak"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_property_method_deprecated, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 25, 133/*, SKIP_ARG*/, /*KEEP_STR*/"property access is using %0 method which is deprecated"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_property_redecl_getter_mismatch, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 467/*, SKIP_ARG*/, /*KEEP_STR*/"getter name mismatch between property redeclaration (%1) and its original declaration (%0)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_property_types_are_incompatible, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 261/*, SKIP_ARG*/, /*KEEP_STR*/"property type %0 is incompatible with type %1 inherited from %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_protocol_property_mismatch, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 469/*, SKIP_ARG*/, /*KEEP_STR*/"property of type %0 was selected for synthesis"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_pt_guarded_pass_by_reference, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 565/*, SKIP_ARG*/, /*KEEP_STR*/"passing the value that '%1' points to by reference requires holding %0 %select{'%2'|'%2' exclusively}3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_ptr_arith_exceeds_bounds, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 30/*, SKIP_ARG*/, /*KEEP_STR*/"the pointer incremented by %0 refers past the end of the array (that contains %1 element%s2)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_ptr_arith_precedes_bounds, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 30/*, SKIP_ARG*/, /*KEEP_STR*/"the pointer decremented by %0 refers before the beginning of the array"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_ptr_independentclass_attribute, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 5/*, SKIP_ARG*/, /*KEEP_STR*/"'objc_independent_class' attribute may be put on Objective-C object pointer type only; attribute is ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_qual_return_type, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 241/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' type qualifier%s1 on return type %plural{1:has|:have}1 no effect"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_readonly_property, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 467/*, SKIP_ARG*/, /*KEEP_STR*/"attribute 'readonly' of property %0 restricts attribute 'readwrite' of property inherited from %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_receiver_forward_class, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 474/*, SKIP_ARG*/, /*KEEP_STR*/"receiver %0 is a forward class and corresponding @interface may not exist"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_receiver_forward_instance, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 5, 474/*, SKIP_ARG*/, /*KEEP_STR*/"receiver type %0 for instance message is a forward declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_redecl_library_builtin, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 257/*, SKIP_ARG*/, /*KEEP_STR*/"incompatible redeclaration of library function %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_redeclaration_without_attribute_prev_attribute_ignored, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 266/*, SKIP_ARG*/, /*KEEP_STR*/"%q0 redeclared without %1 attribute: previous %1 ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_redeclaration_without_import_attribute, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 266/*, SKIP_ARG*/, /*KEEP_STR*/"%q0 redeclared without 'dllimport' attribute: 'dllexport' attribute added"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_redefine_extname_not_applied, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 460/*, SKIP_ARG*/, /*KEEP_STR*/"#pragma redefine_extname is applicable to external C declarations only; not applied to %select{function|variable}0 %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_redefinition_in_param_list, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 633/*, SKIP_ARG*/, /*KEEP_STR*/"redefinition of %0 will not be visible outside of this function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_redundant_loop_iteration, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 191/*, SKIP_ARG*/, /*KEEP_STR*/"variable %0 is %select{decremented|incremented}1 both in the loop header and in the loop body"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_redundant_move_on_return, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 477/*, SKIP_ARG*/, /*KEEP_STR*/"redundant move in return statement"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_reference_field_is_uninit, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 585/*, SKIP_ARG*/, /*KEEP_STR*/"reference %0 is not yet bound to a value when used here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_register_objc_catch_parm, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'register' storage specifier on @catch parameter will be ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_reinterpret_different_from_static, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 479/*, SKIP_ARG*/, /*KEEP_STR*/"'reinterpret_cast' %select{from|to}3 class %0 %select{to|from}3 its %select{virtual base|base at non-zero offset}2 %1 behaves differently from 'static_cast'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_related_result_type_compatibility_class, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 24, 0/*, SKIP_ARG*/, /*KEEP_STR*/"method is expected to return an instance of its class type %diff{$, but is declared to return $|, but is declared to return different type}0,1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_related_result_type_compatibility_protocol, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 24, 0/*, SKIP_ARG*/, /*KEEP_STR*/"protocol method is expected to return an instance of the implementing class, but is declared to return %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_remainder_division_by_zero, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 147/*, SKIP_ARG*/, /*KEEP_STR*/"%select{remainder|division}0 by zero is undefined"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_ret_addr_label, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 486/*, SKIP_ARG*/, /*KEEP_STR*/"returning address of label, which is local"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_ret_local_temp_addr_ref, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 486/*, SKIP_ARG*/, /*KEEP_STR*/"returning %select{address of|reference to}0 local temporary object"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_ret_stack_addr_ref, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 486/*, SKIP_ARG*/, /*KEEP_STR*/"%select{address of|reference to}0 stack memory associated with local variable %1 returned"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_return_missing_expr, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 487/*, SKIP_ARG*/, /*KEEP_STR*/"non-void %select{function|method}1 %0 should return a value"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_return_typestate_for_unconsumable_type, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 112/*, SKIP_ARG*/, /*KEEP_STR*/"return state set for an unconsumable type '%0'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_return_typestate_mismatch, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 112/*, SKIP_ARG*/, /*KEEP_STR*/"return value not in expected state; expected '%0', observed '%1'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_return_value_size, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 296/*, SKIP_ARG*/, /*KEEP_STR*/"return value of %0 is a large (%1 bytes) pass-by-value object; pass it by reference instead ?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_return_value_udt, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 488/*, SKIP_ARG*/, /*KEEP_STR*/"%0 has C-linkage specified, but returns user-defined type %1 which is incompatible with C"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_return_value_udt_incomplete, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 488/*, SKIP_ARG*/, /*KEEP_STR*/"%0 has C-linkage specified, but returns incomplete type %1 which could be incompatible with C"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_root_inst_method_not_found, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 403/*, SKIP_ARG*/, /*KEEP_STR*/"instance method %0 is being used on 'Class' which is not in the root class"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_runsigned_always_true_comparison, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 553/*, SKIP_ARG*/, /*KEEP_STR*/"comparison of %0 unsigned%select{| enum}2 expression is always %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_scanf_nonzero_width, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"zero field width in scanf format string is unused"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_scanf_scanlist_incomplete, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 26, 192/*, SKIP_ARG*/, /*KEEP_STR*/"no closing ']' for '%%[' in scanf format string"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_second_arg_of_va_start_not_last_named_param, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 628/*, SKIP_ARG*/, /*KEEP_STR*/"second argument to 'va_start' is not the last named parameter"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_second_parameter_to_va_arg_never_compatible, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 628/*, SKIP_ARG*/, /*KEEP_STR*/"second argument to 'va_arg' is of promotable type %0; this va_arg has undefined behavior because arguments will be promoted to %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_second_parameter_to_va_arg_not_pod, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 378/*, SKIP_ARG*/, /*KEEP_STR*/"second argument to 'va_arg' is of non-POD type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_second_parameter_to_va_arg_ownership_qualified, /*KEEP_ENUM*/diag.Severity.Error, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 378/*, SKIP_ARG*/, /*KEEP_STR*/"second argument to 'va_arg' is of ARC ownership-qualified type %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_self_assignment, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 494/*, SKIP_ARG*/, /*KEEP_STR*/"explicitly assigning value of variable of type %0 to itself"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_self_move, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 496/*, SKIP_ARG*/, /*KEEP_STR*/"explicitly moving variable of type %0 to itself"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_setter_getter_impl_required, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 409/*, SKIP_ARG*/, /*KEEP_STR*/"property %0 requires method %1 to be defined - use @synthesize, @dynamic or provide a method implementation in this class implementation"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_setter_getter_impl_required_in_category, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 409/*, SKIP_ARG*/, /*KEEP_STR*/"property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_shift_gt_typewidth, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 507/*, SKIP_ARG*/, /*KEEP_STR*/"shift count >= width of type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_shift_lhs_negative, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 508/*, SKIP_ARG*/, /*KEEP_STR*/"shifting a negative signed value is undefined"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_shift_negative, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 506/*, SKIP_ARG*/, /*KEEP_STR*/"shift count is negative"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_shift_result_gt_typewidth, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 510/*, SKIP_ARG*/, /*KEEP_STR*/"signed shift result (%0) requires %1 bits to represent, but %2 only has %3 bits"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_shift_result_sets_sign_bit, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 511/*, SKIP_ARG*/, /*KEEP_STR*/"signed shift result (%0) sets the sign bit of the shift expression's type (%1) and becomes negative"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_side_effects_typeid, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 30, 457/*, SKIP_ARG*/, /*KEEP_STR*/"expression with side effects will be evaluated despite being used as an operand to 'typeid'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_side_effects_unevaluated_context, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 30, 581/*, SKIP_ARG*/, /*KEEP_STR*/"expression with side effects has no effect in an unevaluated context"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_sizeof_array_decay, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 517/*, SKIP_ARG*/, /*KEEP_STR*/"sizeof on pointer operation will return size of %0 instead of %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_sizeof_array_param, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 516/*, SKIP_ARG*/, /*KEEP_STR*/"sizeof on array function parameter will return size of %0 instead of %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_sizeof_pointer_expr_memaccess, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 518/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' call operates on objects of type %1 while the size is based on a different type %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_sizeof_pointer_expr_memaccess_note, /*KEEP_ENUM*/diag.Severity.Fatal, /*KEEP_ENUM*/CLASS_NOTE, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"did you mean to %select{dereference the argument to 'sizeof' (and multiply it by the number of elements)|remove the addressof in the argument to 'sizeof' (and multiply it by the number of elements)|provide an explicit length}0?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_sizeof_pointer_type_memaccess, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 518/*, SKIP_ARG*/, /*KEEP_STR*/"argument to 'sizeof' in %0 call is the same pointer type %1 as the %select{destination|source}2; expected %3 or an explicit length"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_sometimes_uninit_var, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 519/*, SKIP_ARG*/, /*KEEP_STR*/"variable %0 is %select{used|captured}1 uninitialized whenever %select{'%3' condition is %select{true|false}4|'%3' loop %select{is entered|exits because its condition is false}4|'%3' loop %select{condition is true|exits because its condition is false}4|switch %3 is taken|its declaration is reached|%3 is called}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_standalone_specifier, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 345/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' ignored on this declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_static_array_too_small, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 29/*, SKIP_ARG*/, /*KEEP_STR*/"array argument is too small; contains %0 elements, callee requires at least %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_static_local_in_extern_inline, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 525/*, SKIP_ARG*/, /*KEEP_STR*/"non-constant static local variable in inline function may be different in different files"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_static_main, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 306/*, SKIP_ARG*/, /*KEEP_STR*/"'main' should not be declared static"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_static_self_reference_in_init, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 526/*, SKIP_ARG*/, /*KEEP_STR*/"static variable %0 is suspiciously used within its own initialization"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_strict_multiple_method_decl, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 539/*, SKIP_ARG*/, /*KEEP_STR*/"multiple methods named %0 found"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_string_plus_char, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 542/*, SKIP_ARG*/, /*KEEP_STR*/"adding %0 to a string pointer does not append to the string"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_string_plus_int, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 543/*, SKIP_ARG*/, /*KEEP_STR*/"adding %0 to a string does not append to the string"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_stringcompare, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 540/*, SKIP_ARG*/, /*KEEP_STR*/"result of comparison against %select{a string literal|@encode}0 is unspecified (use strncmp instead)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_strlcpycat_wrong_size, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 544/*, SKIP_ARG*/, /*KEEP_STR*/"size argument in %0 call appears to be size of the source; expected the size of the destination"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_strncat_large_size, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 545/*, SKIP_ARG*/, /*KEEP_STR*/"the value of the size argument in 'strncat' is too large, might lead to a buffer overflow"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_strncat_src_size, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 545/*, SKIP_ARG*/, /*KEEP_STR*/"size argument in 'strncat' call appears to be size of the source"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_strncat_wrong_size, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 545/*, SKIP_ARG*/, /*KEEP_STR*/"the value of the size argument to 'strncat' is wrong"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_struct_class_previous_tag_mismatch, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 343/*, SKIP_ARG*/, /*KEEP_STR*/"%2 defined as %select{a struct|an interface|a class}0%select{| template}1 here but previously declared as %select{a struct|an interface|a class}3%select{| template}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_struct_class_tag_mismatch, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 343/*, SKIP_ARG*/, /*KEEP_STR*/"%select{struct|interface|class}0%select{| template}1 %2 was previously declared as a %select{struct|interface|class}3%select{| template}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_sub_ptr_zero_size_types, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 452/*, SKIP_ARG*/, /*KEEP_STR*/"subtraction of pointers to type %0 of zero size has undefined behavior"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_subobject_initializer_overrides, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 271/*, SKIP_ARG*/, /*KEEP_STR*/"subobject initialization overrides initialization of other fields within its enclosing subobject"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_subscript_is_char, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 98/*, SKIP_ARG*/, /*KEEP_STR*/"array subscript is of type 'char'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_suggest_noreturn_block, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 351/*, SKIP_ARG*/, /*KEEP_STR*/"block could be declared with attribute 'noreturn'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_suggest_noreturn_function, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 351/*, SKIP_ARG*/, /*KEEP_STR*/"%select{function|method}0 %1 could be declared with attribute 'noreturn'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_sync_fetch_and_nand_semantics_change, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 551/*, SKIP_ARG*/, /*KEEP_STR*/"the semantics of this intrinsic changed with GCC version 4.4 - the newer semantics are provided here"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_tautological_overlap_comparison, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 555/*, SKIP_ARG*/, /*KEEP_STR*/"overlapping comparisons always evaluate to %select{false|true}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_template_arg_negative, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 113/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument with value '%0' converted to '%1' for unsigned template parameter of type %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_template_arg_too_large, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 113/*, SKIP_ARG*/, /*KEEP_STR*/"non-type template argument value '%0' truncated to '%1' for template parameter of type %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_template_export_unsupported, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"exported templates are unsupported"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_template_qualified_friend_ignored, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 603/*, SKIP_ARG*/, /*KEEP_STR*/"dependent nested name specifier '%0' for friend template declaration is not supported; ignoring this friend declaration"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_template_qualified_friend_unsupported, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 603/*, SKIP_ARG*/, /*KEEP_STR*/"dependent nested name specifier '%0' for friend class declaration is not supported; turning off access control for %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_template_spec_extra_headers, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"extraneous template parameter list in template specialization"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_temporary_array_to_pointer_decay, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 12/*, SKIP_ARG*/, /*KEEP_STR*/"pointer is initialized by a temporary array, which will be destroyed at the end of the full-expression"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_tentative_incomplete_array, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"tentative array definition assumed to have one element"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_this_bool_conversion, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 21, 575/*, SKIP_ARG*/, /*KEEP_STR*/"'this' pointer cannot be null in well-defined C++ code; pointer may be assumed to always convert to true"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_this_null_compare, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 557/*, SKIP_ARG*/, /*KEEP_STR*/"'this' pointer cannot be null in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_thread_attribute_argument_not_lockable, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 561/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute requires arguments whose type is annotated with 'capability' attribute; type here is %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_thread_attribute_decl_not_lockable, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 561/*, SKIP_ARG*/, /*KEEP_STR*/"%0 attribute can only be applied in a context annotated with 'capability(\"mutex\")' attribute"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_thread_attribute_decl_not_pointer, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 561/*, SKIP_ARG*/, /*KEEP_STR*/"%0 only applies to pointer types; type here is %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_thread_attribute_ignored, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 561/*, SKIP_ARG*/, /*KEEP_STR*/"ignoring %0 attribute because its argument is invalid"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_thread_safety_beta, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 562/*, SKIP_ARG*/, /*KEEP_STR*/"Thread safety beta warning."), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_thread_safety_verbose, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 566/*, SKIP_ARG*/, /*KEEP_STR*/"Thread safety verbose warning."), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_transparent_union_attribute_field_size_align, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"%select{alignment|size}0 of field %1 (%2 bits) does not match the %select{alignment|size}0 of the first field in transparent union; transparent_union attribute ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_transparent_union_attribute_floating, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"first field of a transparent union cannot have %select{floating point|vector}0 type %1; transparent_union attribute ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_transparent_union_attribute_not_definition, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"transparent_union attribute can only be applied to a union definition; attribute ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_transparent_union_attribute_zero_fields, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"transparent union definition must contain at least one field; transparent_union attribute ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_type_attribute_wrong_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' only applies to %select{function|pointer|Objective-C object or block pointer}1 types; type here is %2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_type_safety_null_pointer_required, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 569/*, SKIP_ARG*/, /*KEEP_STR*/"specified %0 type tag requires a null pointer"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_type_safety_type_mismatch, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 569/*, SKIP_ARG*/, /*KEEP_STR*/"argument type %0 doesn't match specified %1 type tag %select{that requires %3|}2"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_type_tag_for_datatype_wrong_kind, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 569/*, SKIP_ARG*/, /*KEEP_STR*/"this type tag was not designed to be used with this function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_typecheck_function_qualifiers_ignored, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 241/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' qualifier on function type %1 has no effect"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_typecheck_function_qualifiers_unspecified, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' qualifier on function type %1 has unspecified behavior"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_typecheck_negative_array_new_size, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 48/*, SKIP_ARG*/, /*KEEP_STR*/"array size is negative"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_typecheck_reference_qualifiers, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 241/*, SKIP_ARG*/, /*KEEP_STR*/"'%0' qualifier on reference type %1 has no effect"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_typecheck_zero_static_array_size, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 29/*, SKIP_ARG*/, /*KEEP_STR*/"'static' has no effect on zero-length arrays"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unannotated_fallthrough, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 246/*, SKIP_ARG*/, /*KEEP_STR*/"unannotated fall-through between switch labels"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unannotated_fallthrough_per_function, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 247/*, SKIP_ARG*/, /*KEEP_STR*/"unannotated fall-through between switch labels in partly-annotated function"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unavailable_fwdclass_message, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 572/*, SKIP_ARG*/, /*KEEP_STR*/"%0 may be unavailable because the receiver type is unknown"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_undeclared_selector, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 573/*, SKIP_ARG*/, /*KEEP_STR*/"undeclared selector %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_undeclared_selector_with_typo, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 573/*, SKIP_ARG*/, /*KEEP_STR*/"undeclared selector %0; did you mean %1?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_undef_interface, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot find interface declaration for %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_undef_interface_suggest, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot find interface declaration for %0; did you mean %1?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_undef_method_impl, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 263/*, SKIP_ARG*/, /*KEEP_STR*/"method definition for %0 not found"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_undef_protocolref, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"cannot find protocol definition for %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_undefined_inline, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 577/*, SKIP_ARG*/, /*KEEP_STR*/"inline function %q0 is not defined"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_undefined_internal, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 578/*, SKIP_ARG*/, /*KEEP_STR*/"%select{function|variable}0 %q1 has internal linkage but is not defined"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_undefined_reinterpret_cast, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 579/*, SKIP_ARG*/, /*KEEP_STR*/"reinterpret_cast from %0 to %1 has undefined behavior"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unhandled_ms_attribute_ignored, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"__declspec attribute %0 is not supported"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unimplemented_protocol_method, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 468/*, SKIP_ARG*/, /*KEEP_STR*/"method %0 in protocol %1 not implemented"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unimplemented_selector, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 492/*, SKIP_ARG*/, /*KEEP_STR*/"no method with selector %0 is implemented in this translation unit"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_uninit_byref_blockvar_captured_by_block, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 585/*, SKIP_ARG*/, /*KEEP_STR*/"block pointer variable %0 is uninitialized when captured by block"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_uninit_self_reference_in_init, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 585/*, SKIP_ARG*/, /*KEEP_STR*/"variable %0 is uninitialized when used within its own initialization"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_uninit_self_reference_in_reference_init, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 585/*, SKIP_ARG*/, /*KEEP_STR*/"reference %0 is not yet bound to a value when used within its own initialization"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_uninit_var, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 585/*, SKIP_ARG*/, /*KEEP_STR*/"variable %0 is uninitialized when %select{used here|captured by block}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unknown_attribute_ignored, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 587/*, SKIP_ARG*/, /*KEEP_STR*/"unknown attribute %0 ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unknown_sanitizer_ignored, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 590/*, SKIP_ARG*/, /*KEEP_STR*/"unknown sanitizer '%0' ignored"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unlock_but_no_lock, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 560/*, SKIP_ARG*/, /*KEEP_STR*/"releasing %0 '%1' that was not held"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unlock_kind_mismatch, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 560/*, SKIP_ARG*/, /*KEEP_STR*/"releasing %0 '%1' using %select{shared|exclusive}2 access, expected %select{shared|exclusive}3 access"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unnecessary_packed, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 439/*, SKIP_ARG*/, /*KEEP_STR*/"packed attribute is unnecessary for %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unneeded_internal_decl, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 30, 593/*, SKIP_ARG*/, /*KEEP_STR*/"%select{function|variable}0 %1 is not needed and will not be emitted"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unneeded_member_function, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 594/*, SKIP_ARG*/, /*KEEP_STR*/"member function %0 is not needed and will not be emitted"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unneeded_static_internal_decl, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 30, 593/*, SKIP_ARG*/, /*KEEP_STR*/"'static' function %0 declared in header file should be declared 'static inline'"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unreachable, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 595/*, SKIP_ARG*/, /*KEEP_STR*/"code will never be executed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unreachable_break, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 597/*, SKIP_ARG*/, /*KEEP_STR*/"'break' will never be executed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unreachable_default, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 116/*, SKIP_ARG*/, /*KEEP_STR*/"default label in switch which covers all enumeration values"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unreachable_loop_increment, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 598/*, SKIP_ARG*/, /*KEEP_STR*/"loop will run at most once (loop increment never executed)"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unreachable_return, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 599/*, SKIP_ARG*/, /*KEEP_STR*/"'return' will never be executed"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unsequenced_mod_mod, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 600/*, SKIP_ARG*/, /*KEEP_STR*/"multiple unsequenced modifications to %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unsequenced_mod_use, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 600/*, SKIP_ARG*/, /*KEEP_STR*/"unsequenced modification and access to %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unsigned_abs, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 8/*, SKIP_ARG*/, /*KEEP_STR*/"taking the absolute value of unsigned type %0 has no effect"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unsupported_target_attribute, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 238/*, SKIP_ARG*/, /*KEEP_STR*/"Ignoring unsupported '%0' in the target attribute string"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unused_call, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 30, 623/*, SKIP_ARG*/, /*KEEP_STR*/"ignoring return value of function declared with %0 attribute"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unused_comparison, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 30, 609/*, SKIP_ARG*/, /*KEEP_STR*/"%select{%select{|in}1equality|relational}0 comparison result unused"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unused_const_variable, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 30, 610/*, SKIP_ARG*/, /*KEEP_STR*/"unused variable %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unused_container_subscript_expr, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 30, 623/*, SKIP_ARG*/, /*KEEP_STR*/"container access result unused - container access should not be used for side effects"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unused_exception_param, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 611/*, SKIP_ARG*/, /*KEEP_STR*/"unused exception parameter %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unused_expr, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 30, 623/*, SKIP_ARG*/, /*KEEP_STR*/"expression result unused"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unused_function, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 30, 612/*, SKIP_ARG*/, /*KEEP_STR*/"unused function %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unused_label, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 30, 614/*, SKIP_ARG*/, /*KEEP_STR*/"unused label %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unused_local_typedef, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 30, 615/*, SKIP_ARG*/, /*KEEP_STR*/"unused %select{typedef|type alias}0 %1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unused_member_function, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 618/*, SKIP_ARG*/, /*KEEP_STR*/"unused member function %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unused_parameter, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 619/*, SKIP_ARG*/, /*KEEP_STR*/"unused parameter %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unused_private_field, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 30, 620/*, SKIP_ARG*/, /*KEEP_STR*/"private field %0 is not used"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unused_property_backing_ivar, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 30, 621/*, SKIP_ARG*/, /*KEEP_STR*/"ivar %0 which backs the property is not referenced in this property's accessor"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unused_property_expr, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 613/*, SKIP_ARG*/, /*KEEP_STR*/"property access result unused - getters should not be used for side effects"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unused_result, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 622/*, SKIP_ARG*/, /*KEEP_STR*/"ignoring return value of function declared with %0 attribute"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unused_variable, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 30, 624/*, SKIP_ARG*/, /*KEEP_STR*/"unused variable %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unused_voidptr, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 30, 623/*, SKIP_ARG*/, /*KEEP_STR*/"expression result unused; should this cast be to 'void'?"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_unused_volatile, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 625/*, SKIP_ARG*/, /*KEEP_STR*/"expression result unused; assign into a variable to force a volatile load"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_use_in_invalid_state, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 112/*, SKIP_ARG*/, /*KEEP_STR*/"invalid invocation of method '%0' on object '%1' while it is in the '%2' state"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_use_of_temp_in_invalid_state, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 112/*, SKIP_ARG*/, /*KEEP_STR*/"invalid invocation of method '%0' on a temporary object while it is in the '%1' state"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_use_out_of_scope_declaration, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"use of out-of-scope declaration of %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_used_but_marked_unused, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 626/*, SKIP_ARG*/, /*KEEP_STR*/"%0 was marked unused but was used"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_user_literal_reserved, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 627/*, SKIP_ARG*/, /*KEEP_STR*/"user-defined literal suffixes not starting with '_' are reserved%select{; no literal will invoke this operator|}0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_using_directive_in_header, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 236/*, SKIP_ARG*/, /*KEEP_STR*/"using namespace directive in global context in header"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_va_start_type_is_undefined, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 628/*, SKIP_ARG*/, /*KEEP_STR*/"passing %select{an object that undergoes default argument promotion|an object of reference type|a parameter declared with the 'register' keyword}0 to 'va_start' has undefined behavior"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_var_deref_requires_any_lock, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 560/*, SKIP_ARG*/, /*KEEP_STR*/"%select{reading|writing}1 the value pointed to by '%0' requires holding %select{any mutex|any mutex exclusively}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_var_deref_requires_lock, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 560/*, SKIP_ARG*/, /*KEEP_STR*/"%select{reading|writing}3 the value pointed to by '%1' requires holding %0 %select{'%2'|'%2' exclusively}3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_var_deref_requires_lock_precise, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 564/*, SKIP_ARG*/, /*KEEP_STR*/"%select{reading|writing}3 the value pointed to by '%1' requires holding %0 %select{'%2'|'%2' exclusively}3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_var_template_missing, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 580/*, SKIP_ARG*/, /*KEEP_STR*/"instantiation of variable %q0 required here, but no definition is available"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_variable_requires_any_lock, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 560/*, SKIP_ARG*/, /*KEEP_STR*/"%select{reading|writing}1 variable '%0' requires holding %select{any mutex|any mutex exclusively}1"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_variable_requires_lock, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 560/*, SKIP_ARG*/, /*KEEP_STR*/"%select{reading|writing}3 variable '%1' requires holding %0 %select{'%2'|'%2' exclusively}3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_variable_requires_lock_precise, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 564/*, SKIP_ARG*/, /*KEEP_STR*/"%select{reading|writing}3 variable '%1' requires holding %0 %select{'%2'|'%2' exclusively}3"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_variables_not_in_loop_body, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 191/*, SKIP_ARG*/, /*KEEP_STR*/"variable%select{s| %1|s %1 and %2|s %1, %2, and %3|s %1, %2, %3, and %4}0 used in loop condition not modified in loop body"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_vbase_moved_multiple_times, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 368/*, SKIP_ARG*/, /*KEEP_STR*/"defaulted move assignment operator of %0 will move assign virtual base class %1 multiple times"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_vector_long_decl_spec_combination, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 25, 131/*, SKIP_ARG*/, /*KEEP_STR*/"Use of 'long' with '__vector' is deprecated"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_vector_mode_deprecated, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 25, 132/*, SKIP_ARG*/, /*KEEP_STR*/"specifying vector types with the 'mode' attribute is deprecated; use the 'vector_size' attribute instead"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_vla_used, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 634/*, SKIP_ARG*/, /*KEEP_STR*/"variable length array used"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_weak_identifier_undeclared, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"weak identifier %0 never declared"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_weak_import, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 0/*, SKIP_ARG*/, /*KEEP_STR*/"an already-declared variable is made a weak_import declaration %0"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_weak_template_vtable, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 638/*, SKIP_ARG*/, /*KEEP_STR*/"explicit template instantiation %0 will emit a vtable in every translation unit"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_weak_vtable, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 639/*, SKIP_ARG*/, /*KEEP_STR*/"%0 has no out-of-line virtual method definitions; its vtable will be emitted in every translation unit"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_wrong_absolute_value_type, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 8/*, SKIP_ARG*/, /*KEEP_STR*/"using %select{integer|floating point|complex}1 absolute value function %0 when argument is of %select{integer|floating point|complex}2 type"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_zero_size_struct_union_compat, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 61/*, SKIP_ARG*/, /*KEEP_STR*/"%select{|empty }0%select{struct|union}1 has size 0 in C, %select{size 1|non-zero size}2 in C++"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warn_zero_size_struct_union_in_extern_c, /*KEEP_ENUM*/diag.Severity.Warning, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 178/*, SKIP_ARG*/, /*KEEP_STR*/"%select{|empty }0%select{struct|union}1 has size 0 in C, %select{size 1|non-zero size}2 in C++"), 
  new StaticDiagInfoRec(/*KEEP_ENUM*/diag.warning_multiple_selectors, /*KEEP_ENUM*/diag.Severity.Ignored, /*KEEP_ENUM*/CLASS_WARNING, /*KEEP_ENUM*/DiagnosticIDs.SFINAEResponse.SFINAE_Suppress, /*KEEP_BOOL*/false, /*KEEP_BOOL*/false, 2, 493/*, SKIP_ARG*/, /*KEEP_STR*/"several methods with selector %0 of mismatched types are found for the @selector expression")  
};
}

//<editor-fold defaultstate="collapsed" desc="static StaticDiagInfo">  
@Converted(kind = Converted.Kind.AUTO, source = "${LLVM_SRC}/llvm/tools/clang/lib/Basic/DiagnosticIDs.cpp", line = 82,
 cmd = "jclank.sh -java-options=${SPUTNIK}/modules/org.clang.basic/llvmToClangType ${LLVM_SRC}/llvm/tools/clang/lib/Basic/DiagnosticIDs.cpp -no-enum2int -filter=StaticDiagInfo")
//</editor-fold>
private static StaticDiagInfoRec [] init_After_DiagnosticSemaKinds() {
//TO generate use only following include
//#include "clang/Basic/DiagnosticAnalysisKinds.inc"
  return new StaticDiagInfoRec[0];// {/*zero-init*/};
}
  private JavaHugeStaticDiagInfoDelegate() {
  }
  
}
