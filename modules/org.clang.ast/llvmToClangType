#add common conversions of types
<include> "../../contrib/JConvert/llvmToClankType"

[DELEGATE_BODY]
<include> "./commands_org.clang.ast_delegates.properties"

[STATICS_AND_GLOBALS]
<include> "./statics_and_globals_org.clang.ast.properties"

[IMPORTS]
<include> "./JavaImports"

[OLD_NEW_POSITIONS_MAP]
path = ./updated_positions.txt

[TYPES_MAP]
#map class forward
ASTDeserializationListener=ASTDeserializationListenerImplementation
#the conversion below is used by some *Attr classes
#ConsumedState * = type$ptr<ConsumedState/*P*/>
#std::conditional<has_same_member_pointer_type<decltype(/*AddrOf*//*FPtr*/RecursiveASTVisitor<Derived>::TraverseStmt), decltype(Native.$bitand(Derived.TraverseStmt))>::value, Derived /*&*/ , RecursiveASTVisitor<Derived> /*&*/ >::type = Derived
#std::conditional<has_same_member_pointer_type<decltype(/*AddrOf*//*FPtr*/RecursiveASTVisitor<Derived>::TraverseLambdaBody), decltype(Native.$bitand(Derived.TraverseLambdaBody))>::value, Derived /*&*/ , RecursiveASTVisitor<Derived> /*&*/ >::type = Derived
#std::conditional<has_same_member_pointer_type<decltype(/*AddrOf*//*FPtr*/RecursiveASTVisitor<Derived>::TraverseBinPtrMemD), decltype(Native.$bitand(Derived.TraverseBinPtrMemD))>::value, Derived /*&*/ , RecursiveASTVisitor<Derived> /*&*/ >::type = Derived
#std::conditional<has_same_member_pointer_type<decltype(/*AddrOf*//*FPtr*/RecursiveASTVisitor<Derived>::TraverseBinPtrMemI), decltype(Native.$bitand(Derived.TraverseBinPtrMemI))>::value, Derived /*&*/ , RecursiveASTVisitor<Derived> /*&*/ >::type = Derived
#std::conditional<%TEMPLATE, %TEMPLATE, %TEMPLATE>::type = Derived
TemplateArgument * = type$ptr<TemplateArgument/*P*/>
TemplateArgumentLoc * = type$ptr<TemplateArgumentLoc/*P*/>
SpecIterator<%TEMPLATE> = SpecIterator<%0, /*SpecEntryTraits,*/ %0>#|SpecEntryTraits.<%0>$Info()
SpecIterator<%CLASS> = SpecIterator<%0, /*SpecEntryTraits,*/ %0>#|SpecEntryTraits.<%0>$Info()
SpecIterator<FunctionTemplateSpecializationInfo> = SpecIterator<FunctionTemplateSpecializationInfo, /*SpecEntryTraits<FunctionTemplateSpecializationInfo>,*/ FunctionDecl>#|new SpecEntryTraitsFunctionTemplateSpecializationInfo()
SpecIterator<%CLASS, %CLASS, %CLASS> = SpecIterator<%0, %2>#%|new %1()
auto (const ObjCContainerDecl * ) const -> const ObjCPropertyDecl * = ObjCPropertyDecl2ObjCContainerDecl
DenseMap</*const*/ CXXRecordDecl /*P*/ , LazyOffsetPtr<Decl, /*uint*/int, GetExternalDecl>, DenseMapInfoT$P</*const*/ CXXRecordDecl>, std.pair</*const*/ CXXRecordDecl /*P*/ , LazyOffsetPtr<Decl, /*uint*/int, GetExternalDecl>> > = DenseMap</*const*/ CXXRecordDecl /*P*/ , LazyDeclPtr>
DenseMapIterator</*const*/ CXXRecordDecl /*P*/ , LazyOffsetPtr<Decl, /*uint*/int, GetExternalDecl>, DenseMapInfoT$P</*const*/ CXXRecordDecl>, std.pair</*const*/ CXXRecordDecl /*P*/ , LazyOffsetPtr<Decl, /*uint*/int, GetExternalDecl>>, true> = DenseMapIterator<CXXRecordDecl, LazyDeclPtr>

bool (* )(const CXXBaseSpecifier * , CXXBasePath & , DeclarationName)=CXXBaseSpecifierCXXBasePathDeclarationName2Bool
bool (const CXXBaseSpecifier * , CXXBasePath & , DeclarationName)=CXXBaseSpecifierCXXBasePathDeclarationName2Bool

#Container::const_iterator=type$iterator<?, ? extends Attr>
specific_attr_iterator<SpecificAttr, Container>=specific_attr_iterator<SpecificAttr>
VTableThunkTy=std.pairULongType<ThunkInfo>
void (Decl * )=Decl2Void

SmallVector<Job, %i>=SmallVectorWithDestroy<Job>#%i|Job.EMPTY

[INTERFACES]
#used only when generate CanProxy/CanProxyAdaptor interfaces themselves 
#clang::CanProxy=CanProxy
#clang::CanProxyAdaptor=CanProxyAdaptor

[EXTRA_MEMBERS]
<include> "./AstExtraMembers.txt"

[MEMBER_ACCESS]
(anonymous namespace)::ItaniumRecordLayoutBuilder::Alignment = /*friend*/public
(anonymous namespace)::ItaniumRecordLayoutBuilder::Bases=/*friend*/public
(anonymous namespace)::ItaniumRecordLayoutBuilder::FieldOffsets = /*friend*/public
(anonymous namespace)::ItaniumRecordLayoutBuilder::HasOwnVFPtr=/*friend*/public
(anonymous namespace)::ItaniumRecordLayoutBuilder::ItaniumRecordLayoutBuilder = /*friend*/public
(anonymous namespace)::ItaniumRecordLayoutBuilder::Layout = /*friend*/public
(anonymous namespace)::ItaniumRecordLayoutBuilder::Layout=/*friend*/public
(anonymous namespace)::ItaniumRecordLayoutBuilder::NonVirtualAlignment=/*friend*/public
(anonymous namespace)::ItaniumRecordLayoutBuilder::NonVirtualSize=/*friend*/public
(anonymous namespace)::ItaniumRecordLayoutBuilder::PrimaryBase=/*friend*/public
(anonymous namespace)::ItaniumRecordLayoutBuilder::PrimaryBaseIsVirtual=/*friend*/public
(anonymous namespace)::ItaniumRecordLayoutBuilder::VBases=/*friend*/public
(anonymous namespace)::ItaniumRecordLayoutBuilder::getDataSize = /*friend*/public
(anonymous namespace)::ItaniumRecordLayoutBuilder::getSize = /*friend*/public
(anonymous namespace)::ParentMapASTVisitor::TraverseDecl=public
(anonymous namespace)::ParentMapASTVisitor::TraverseNestedNameSpecifierLoc=public
(anonymous namespace)::ParentMapASTVisitor::TraverseStmt=public
(anonymous namespace)::ParentMapASTVisitor::TraverseTypeLoc=public
(anonymous namespace)::ParentMapASTVisitor::shouldVisitImplicitCode=public
(anonymous namespace)::ParentMapASTVisitor::shouldVisitTemplateInstantiations=public

#clang::Type::(anonymous)
_ZN5clang4TypeE_Unnamed_union11=/*friend*/public
_ZN5clang8comments6Parser7putBackEN4llvm8ArrayRefINS0_5TokenEEE=public/*friend*/
clang::ASTConsumer::SemaConsumer=public/*friend*/
clang::ASTContext::BuiltinMSVaListDecl = /*friend*/public
clang::ASTContext::BuiltinVaListDecl = /*friend*/public
clang::ASTContext::CFConstantStringTagDecl = /*friend*/public
clang::ASTContext::CFConstantStringTypeDecl = /*friend*/public
clang::ASTContext::ExternCContext = /*friend*/public
clang::ASTContext::FILEDecl = /*friend*/public
clang::ASTContext::GlobalNestedNameSpecifier=/*friend*/protected
clang::ASTContext::Int128Decl = /*friend*/public
clang::ASTContext::KeyFunctions = /*friend*/public
clang::ASTContext::LastSDM=/*friend*/protected
clang::ASTContext::MakeIntegerSeqDecl = /*friend*/public
clang::ASTContext::MangleNumbers = /*friend*/public

clang::ASTContext::NestedNameSpecifiers=/*friend*/protected
clang::ASTContext::ObjCClassDecl = /*friend*/public
clang::ASTContext::ObjCClassRedefinitionType = /*friend*/public
clang::ASTContext::ObjCIdDecl = /*friend*/public
clang::ASTContext::ObjCIdRedefinitionType = /*friend*/public
clang::ASTContext::ObjCInstanceTypeDecl = /*friend*/public
clang::ASTContext::ObjCProtocolClassDecl = /*friend*/public
clang::ASTContext::ObjCSelDecl = /*friend*/public
clang::ASTContext::ObjCSelRedefinitionType = /*friend*/public
clang::ASTContext::SourceMgr = /*friend*/public
clang::ASTContext::StaticLocalNumbers = /*friend*/public
clang::ASTContext::TypePackElementDecl = /*friend*/public
clang::ASTContext::UInt128Decl = /*friend*/public
clang::ASTContext::jmp_bufDecl = /*friend*/public
clang::ASTContext::sigjmp_bufDecl = /*friend*/public
clang::ASTContext::ucontext_tDecl = /*friend*/public
clang::ASTRecordLayout::ASTRecordLayout=/*friend*/public
clang::ASTRecordLayout::Destroy=/*friend*/
clang::ASTUnresolvedSet::Decls = /*friend*/protected final
clang::AbstractConditionalOperator::ColonLoc = /*friend*/public
clang::AbstractConditionalOperator::QuestionLoc = /*friend*/public
clang::AlignedAttr::Unnamed_field1 = private final
clang::ArrayTypeTraitExpr::ATT = /*friend*/public
clang::ArrayTypeTraitExpr::Loc = /*friend*/public
clang::ArrayTypeTraitExpr::QueriedType = /*friend*/public
clang::ArrayTypeTraitExpr::RParen = /*friend*/public
clang::ArrayTypeTraitExpr::Value = /*friend*/public
clang::AsTypeExpr::AsTypeExpr = /*friend*/public
clang::AsTypeExpr::BuiltinLoc = /*friend*/public
clang::AsTypeExpr::RParenLoc = /*friend*/public
clang::AsTypeExpr::SrcExpr = /*friend*/public
clang::AsmStmt::NumClobbers = /*friend*/public
clang::AsmStmt::NumInputs = /*friend*/public
clang::AsmStmt::NumOutputs = /*friend*/public
clang::AtomicExpr::BuiltinLoc = /*friend*/public
clang::AtomicExpr::NumSubExprs = /*friend*/public
clang::AtomicExpr::Op = /*friend*/public
clang::AtomicExpr::RParenLoc = /*friend*/public
clang::AtomicExpr::SubExprs = /*friend*/public
clang::AtomicType::AtomicType=/*friend*//*package*/
clang::AttributedStmt::AttrLoc = /*friend*/public
clang::AttributedStmt::NumAttrs = /*friend*/public
clang::AttributedStmt::SubStmt = /*friend*/public
clang::AttributedStmt::getAttrArrayPtr = /*friend*/public
clang::AttributedType::AttributedType=/*friend*//*package*/
clang::AutoType::AutoType=/*friend*//*package*/
clang::BinaryConditionalOperator::(anonymous) = /*friend*/public
clang::BinaryConditionalOperator::OpaqueValue = /*friend*/public
clang::BinaryConditionalOperator::SubExprs = /*friend*/public
clang::BlockPointerType::BlockPointerType=/*friend*//*package*/
clang::CXXBasePaths::Paths=/*friend*/protected

clang::CXXBasePaths::lookupInBases=/*friend*/protected
clang::CXXCatchStmt::CatchLoc = /*friend*/public
clang::CXXCatchStmt::ExceptionDecl = /*friend*/public
clang::CXXCatchStmt::HandlerBlock = /*friend*/public
clang::CXXConstructExpr::Args = /*friend*/public
clang::CXXConstructExpr::NumArgs = /*friend*/public
clang::CXXConstructExpr::ParenOrBraceRange = /*friend*/public
clang::CXXConstructExpr::setConstructor = /*friend*/public
clang::CXXConstructorDecl::CtorInitializers = /*friend*/public
clang::CXXConstructorDecl::IsExplicitSpecified = /*friend*/public
clang::CXXConstructorDecl::NumCtorInitializers = /*friend*/public
clang::CXXConversionDecl::IsExplicitSpecified = /*friend*/public
clang::CXXDefaultArgExpr::Loc = /*friend*/public
clang::CXXDefaultArgExpr::Param = /*friend*/public
clang::CXXDefaultInitExpr::CXXDefaultInitExpr = /*friend*/public
clang::CXXDefaultInitExpr::Field = /*friend*/public
clang::CXXDefaultInitExpr::Loc = /*friend*/public
clang::CXXDeleteExpr::Argument = /*friend*/public
clang::CXXDeleteExpr::ArrayForm = /*friend*/public
clang::CXXDeleteExpr::ArrayFormAsWritten = /*friend*/public
clang::CXXDeleteExpr::GlobalDelete = /*friend*/public
clang::CXXDeleteExpr::Loc = /*friend*/public
clang::CXXDeleteExpr::OperatorDelete = /*friend*/public
clang::CXXDeleteExpr::UsualArrayDeleteWantsSize = /*friend*/public
clang::CXXDependentScopeMemberExpr = /*friend*/public
clang::CXXDependentScopeMemberExpr::Base = /*friend*/public
clang::CXXDependentScopeMemberExpr::BaseType = /*friend*/public
clang::CXXDependentScopeMemberExpr::FirstQualifierFoundInScope = /*friend*/public
clang::CXXDependentScopeMemberExpr::HasTemplateKWAndArgsInfo = /*friend*/public
clang::CXXDependentScopeMemberExpr::IsArrow = /*friend*/public
clang::CXXDependentScopeMemberExpr::MemberNameInfo = /*friend*/public
clang::CXXDependentScopeMemberExpr::OperatorLoc = /*friend*/public
clang::CXXDependentScopeMemberExpr::QualifierLoc = /*friend*/public
clang::CXXDestructorDecl::OperatorDelete = /*friend*/public
clang::CXXFoldExpr::EllipsisLoc = /*friend*/public
clang::CXXFoldExpr::LParenLoc = /*friend*/public
clang::CXXFoldExpr::Opcode = /*friend*/public
clang::CXXFoldExpr::RParenLoc = /*friend*/public
clang::CXXFoldExpr::SubExprs = /*friend*/public
clang::CXXForRangeStmt::CoawaitLoc = /*friend*/public
clang::CXXForRangeStmt::ColonLoc = /*friend*/public
clang::CXXForRangeStmt::ForLoc = /*friend*/public
clang::CXXForRangeStmt::RParenLoc = /*friend*/public
clang::CXXInheritedCtorInitExpr::Constructor = /*friend*/public
clang::CXXInheritedCtorInitExpr::ConstructsVirtualBase = /*friend*/public
clang::CXXInheritedCtorInitExpr::InheritedFromVirtualBase = /*friend*/public
clang::CXXInheritedCtorInitExpr::Loc = /*friend*/public
clang::CXXNamedCastExpr::AngleBrackets = /*friend*/public
clang::CXXNamedCastExpr::Loc = /*friend*/public
clang::CXXNamedCastExpr::RParenLoc = /*friend*/public
clang::CXXNewExpr::AllocatedTypeInfo = /*friend*/public
clang::CXXNewExpr::DirectInitRange = /*friend*/public
clang::CXXNewExpr::GlobalNew = /*friend*/public
clang::CXXNewExpr::Range = /*friend*/public
clang::CXXNewExpr::StoredInitializationStyle = /*friend*/public
clang::CXXNewExpr::TypeIdParens = /*friend*/public
clang::CXXNewExpr::UsualArrayDeleteWantsSize = /*friend*/public
clang::CXXNoexceptExpr::Operand = /*friend*/public
clang::CXXNoexceptExpr::Range = /*friend*/public
clang::CXXNoexceptExpr::Value = /*friend*/public
clang::CXXOperatorCallExpr::Operator = /*friend*/public
clang::CXXOperatorCallExpr::Range = /*friend*/public
clang::CXXPseudoDestructorExpr::Base = /*friend*/public
clang::CXXPseudoDestructorExpr::ColonColonLoc = /*friend*/public
clang::CXXPseudoDestructorExpr::IsArrow = /*friend*/public
clang::CXXPseudoDestructorExpr::OperatorLoc = /*friend*/public
clang::CXXPseudoDestructorExpr::QualifierLoc = /*friend*/public
clang::CXXPseudoDestructorExpr::ScopeType = /*friend*/public
clang::CXXPseudoDestructorExpr::TildeLoc = /*friend*/public
clang::CXXRecordDecl::DefinitionData=public/*friend*/
clang::CXXRecordDecl::LambdaDefinitionData = /*friend*/public
clang::CXXRecordDecl::TemplateOrInstantiation = /*friend*/public
clang::CXXRecordDecl::addedMember = /*friend*/ final public
clang::CXXRecordDecl::data=public/*friend*/
clang::CXXRecordDecl::getFirstFriend = /*friend*/public
clang::CXXRecordDecl::getLambdaData = /*friend*/public
clang::CXXRecordDecl::markedVirtualFunctionPure=public
clang::CXXScalarValueInitExpr::RParenLoc = /*friend*/public
clang::CXXScalarValueInitExpr::TypeInfo = /*friend*/public
clang::CXXStdInitializerListExpr::CXXStdInitializerListExpr = /*friend*/public
clang::CXXStdInitializerListExpr::SubExpr = /*friend*/public
clang::CXXTemporaryObjectExpr::Type = /*friend*/public
clang::CXXThrowExpr = /*friend*/public
clang::CXXThrowExpr::IsThrownVariableInScope = /*friend*/public
clang::CXXThrowExpr::Op = /*friend*/public
clang::CXXTryStmt::TryLoc = /*friend*/public
clang::CXXTryStmt::getStmts = /*friend*/public
clang::CXXUnresolvedConstructExpr::Type = /*friend*/public
clang::CapturedDecl::NumParams = /*friend*/public
clang::CapturedStmt::CapDeclAndKind = private final
clang::CapturedStmt::Capture::Loc = /*friend*/public
clang::CapturedStmt::Capture::VarAndKind = /*friend*/public
clang::CapturedStmt::NumCaptures = private final
clang::CapturedStmt::setCapturedStmt = /*friend*/public
clang::ClassScopeFunctionSpecializationDecl::Specialization = /*friend*/public
clang::ClassTemplateDecl::Common = /*friend*/public
clang::ClassTemplateDecl::getCommonPtr = /*friend*/public
clang::ClassTemplatePartialSpecializationDecl::ArgsAsWritten = /*friend*/public
clang::ClassTemplatePartialSpecializationDecl::InstantiatedFromMember = /*friend*/public
clang::ClassTemplatePartialSpecializationDecl::TemplateParams = /*friend*/public
clang::ClassTemplateSpecializationDecl::ExplicitInfo = /*friend*/public
clang::ClassTemplateSpecializationDecl::ExplicitSpecializationInfo = /*friend*/public
clang::ClassTemplateSpecializationDecl::PointOfInstantiation = /*friend*/public
clang::ClassTemplateSpecializationDecl::SpecializationKind = /*friend*/public
clang::ClassTemplateSpecializationDecl::SpecializedPartialSpecialization = /*friend*/public
clang::ClassTemplateSpecializationDecl::SpecializedTemplate = /*friend*/public
clang::ClassTemplateSpecializationDecl::TemplateArgs = /*friend*/public
clang::ComplexType::ComplexType=/*friend*/
clang::CompoundStmt::LBraceLoc = /*friend*/public
clang::CompoundStmt::RBraceLoc = /*friend*/public
clang::ConcreteTypeLoc::classofType=/*friend*/
clang::ConcreteTypeLoc::isKind=/*friend*/
clang::ConditionalOperator::(anonymous) = /*friend*/public
clang::ConditionalOperator::SubExprs = /*friend*/public
clang::ConstantArrayType::ConstantArrayType=/*friend*/protected
clang::ConstructorUsingShadowDecl::ConstructedBaseClassShadowDecl = /*friend*/public
clang::ConstructorUsingShadowDecl::IsVirtual = /*friend*/public
clang::ConstructorUsingShadowDecl::NominatedBaseClassShadowDecl = /*friend*/public
clang::ConvertVectorExpr::BuiltinLoc = /*friend*/public
clang::ConvertVectorExpr::ConvertVectorExpr = /*friend*/public
clang::ConvertVectorExpr::RParenLoc = /*friend*/public
clang::ConvertVectorExpr::SrcExpr = /*friend*/public
clang::ConvertVectorExpr::TInfo = /*friend*/public
clang::DecayedType::DecayedType=/*friend*//*package*/
clang::Decl = /*friend*/public
clang::Decl::FromASTFile = /*friend*/public final
clang::Decl::Hidden = /*friend*/public
clang::Decl::Used = /*friend*/public
clang::Decl::getCachedLinkage=/*friend*/public
clang::Decl::hasCachedLinkage=/*friend*/public
clang::Decl::setAttrsImpl = /*friend*/public
clang::Decl::setCachedLinkage=/*friend*/public
clang::Decl::setDeclContextsImpl = /*friend*/public
clang::Decl::setModulePrivate=public
clang::Decl::setOwningModuleID = /*friend*/public
clang::DeclRefExpr::DNLoc = /*friend*/public
clang::DeclRefExpr::hasFoundDecl = /*friend*/public
clang::DeclaratorDecl = /*friend*/public
clang::DeclaratorDecl::ExtInfo = /*friend*/public
clang::DeclaratorDecl::getExtInfo = /*friend*/public
clang::DeclaratorDecl::hasExtInfo = /*friend*/public

clang::DependentDiagnostic::NextDiagnostic=/*friend*/protected
clang::DependentNameType::DependentNameType=/*friend*//*package*/
clang::DependentScopeDeclRefExpr::HasTemplateKWAndArgsInfo = /*friend*/public
clang::DependentScopeDeclRefExpr::NameInfo = /*friend*/public
clang::DependentScopeDeclRefExpr::QualifierLoc = /*friend*/public
clang::DependentSizedArrayType::DependentSizedArrayType=/*friend*//*package*/
clang::DependentSizedExtVectorType::DependentSizedExtVectorType=/*friend*//*package*/
clang::DependentStoredDeclsMap::FirstDiagnostic=/*friend*/protected
clang::DependentTemplateName::CanonicalTemplateName=/*friend*/protected
clang::DependentTemplateName::DependentTemplateName=/*friend*//*package*/
clang::DependentTemplateSpecializationType::DependentTemplateSpecializationType=/*friend*//*package*/
clang::ElaboratedType::ElaboratedType=/*friend*//*package*/
clang::EnumDecl::setInstantiationOfMemberEnum = /*friend*/public
clang::EnumType::EnumType=/*friend*/protected
clang::ExprWithCleanups::SubExpr = /*friend*/public
clang::ExpressionTraitExpr::ET = /*friend*/public
clang::ExpressionTraitExpr::Loc = /*friend*/public
clang::ExpressionTraitExpr::QueriedExpression = /*friend*/public
clang::ExpressionTraitExpr::RParen = /*friend*/public
clang::ExpressionTraitExpr::Value = /*friend*/public
clang::ExtQualsTypeCommonBase::BaseType=public/*friend*/
clang::ExtQualsTypeCommonBase::CanonicalType=public/*friend*/
clang::ExtVectorType::ExtVectorType=/*friend*//*package*/
clang::ExternalASTSource::SemaSource=public/*friend*/
clang::FieldDecl::InitStorage = /*friend*/public
clang::FieldDecl::InitStorageKind = /*friend*/public
clang::FieldDecl::Mutable = /*friend*/public
clang::FriendDecl::Friend = /*friend*/public
clang::FriendDecl::FriendLoc = /*friend*/public
clang::FriendDecl::NextFriend=public
clang::FriendDecl::NumTPLists = /*friend*/public
clang::FriendDecl::UnsupportedFriend = /*friend*/public
clang::FriendDecl::getNextFriend=public
clang::FriendTemplateDecl::Friend = /*friend*/public
clang::FriendTemplateDecl::FriendLoc = /*friend*/public
clang::FriendTemplateDecl::NumParams = /*friend*/public
clang::FriendTemplateDecl::Params = /*friend*/public
clang::FunctionDecl::DNLoc = /*friend*/public
clang::FunctionDecl::EndRangeLoc = /*friend*/public
clang::FunctionDecl::HasImplicitReturnZero = /*friend*/public
clang::FunctionDecl::HasInheritedPrototype = /*friend*/public
clang::FunctionDecl::HasSkippedBody = /*friend*/public
clang::FunctionDecl::HasWrittenPrototype = /*friend*/public
clang::FunctionDecl::IsConstexpr = /*friend*/public
clang::FunctionDecl::IsDefaulted = /*friend*/public
clang::FunctionDecl::IsDeleted = /*friend*/public
clang::FunctionDecl::IsExplicitlyDefaulted = /*friend*/public
clang::FunctionDecl::IsInline = /*friend*/public
clang::FunctionDecl::IsInlineSpecified = /*friend*/public
clang::FunctionDecl::IsLateTemplateParsed = /*friend*/public
clang::FunctionDecl::IsPure = /*friend*/public
clang::FunctionDecl::IsTrivial = /*friend*/public
clang::FunctionDecl::IsVirtualAsWritten = /*friend*/public
clang::FunctionDecl::SClass = /*friend*/public
clang::FunctionDecl::TemplateOrSpecialization = /*friend*/public
clang::FunctionDecl::setInstantiationOfMemberFunction = /*friend*/public
clang::FunctionDecl::setParams = /*friend*/public
clang::FunctionNoProtoType::FunctionNoProtoType=/*friend*//*package*/
clang::FunctionParmPackExpr::NameLoc = /*friend*/public
clang::FunctionParmPackExpr::NumParameters = /*friend*/public
clang::FunctionParmPackExpr::ParamPack = /*friend*/public
clang::FunctionProtoType::FunctionProtoType=/*friend*//*package*/
clang::FunctionTemplateDecl::Common=public/*friend*/
clang::FunctionTemplateDecl::getCommonPtr = /*friend*/public
clang::FunctionType::ExtInfo::ExtInfo = /*friend*/public
clang::GCCAsmStmt::setOutputsAndInputsAndClobbers = /*friend*/public
clang::GenericSelectionExpr::(anonymous) = /*friend*/public
clang::GenericSelectionExpr::AssocTypes = /*friend*/public
clang::GenericSelectionExpr::DefaultLoc = /*friend*/public
clang::GenericSelectionExpr::GenericLoc = /*friend*/public
clang::GenericSelectionExpr::NumAssocs = /*friend*/public
clang::GenericSelectionExpr::RParenLoc = /*friend*/public
clang::GenericSelectionExpr::ResultIndex = /*friend*/public
clang::GenericSelectionExpr::SubExprs = /*friend*/public
clang::ImportDecl::ImportedAndComplete = /*friend*/public
clang::ImportDecl::NextLocalImport=/*friend*/
clang::IncompleteArrayType::IncompleteArrayType=/*friend*//*package*/
clang::IndirectFieldDecl::Chaining = /*friend*/public
clang::IndirectFieldDecl::ChainingSize = /*friend*/public
clang::InheritingConcreteTypeLoc::classofType=/*friend*/
clang::InheritingConcreteTypeLoc::isKind=/*friend*/
clang::InitListExpr::ArrayFillerOrUnionFieldInit = /*friend*/public
clang::InjectedClassNameType::InjectedClassNameType=/*friend*/public
clang::LValueReferenceType::LValueReferenceType=/*friend*//*package*/
clang::LambdaExpr::CaptureDefault = /*friend*/public
clang::LambdaExpr::CaptureDefaultLoc = /*friend*/public
clang::LambdaExpr::ClosingBrace = /*friend*/public
clang::LambdaExpr::ExplicitParams = /*friend*/public
clang::LambdaExpr::ExplicitResultType = /*friend*/public
clang::LambdaExpr::HasArrayIndexVars = /*friend*/public
clang::LambdaExpr::IntroducerRange = /*friend*/public
clang::LambdaExpr::NumCaptures = /*friend*/public
clang::LambdaExpr::getArrayIndexStarts = /*friend*/public
clang::LambdaExpr::getArrayIndexVars = /*friend*/public
clang::LocInfoType::LocInfoType=public
clang::MSAsmStmt::EndLoc = /*friend*/public
clang::MSAsmStmt::LBraceLoc = /*friend*/public
clang::MSAsmStmt::NumAsmToks = /*friend*/public
clang::MSAsmStmt::initialize = /*friend*/public
clang::MSDependentExistsStmt::IsIfExists = /*friend*/public
clang::MSDependentExistsStmt::KeywordLoc = /*friend*/public
clang::MSDependentExistsStmt::NameInfo = /*friend*/public
clang::MSDependentExistsStmt::QualifierLoc = /*friend*/public
clang::MSDependentExistsStmt::SubStmt = /*friend*/public
clang::MSPropertyDecl::GetterId = /*friend*/public
clang::MSPropertyDecl::SetterId = /*friend*/public
clang::MSPropertyRefExpr::BaseExpr = /*friend*/public
clang::MSPropertyRefExpr::IsArrow = /*friend*/public
clang::MSPropertyRefExpr::MemberLoc = /*friend*/public
clang::MSPropertyRefExpr::QualifierLoc = /*friend*/public
clang::MSPropertyRefExpr::TheDecl = /*friend*/public
clang::MSPropertySubscriptExpr::setBase = /*friend*/public
clang::MSPropertySubscriptExpr::setIdx = /*friend*/public
clang::MaterializeTemporaryExpr::State = /*friend*/public
clang::MemberExpr::HasTemplateKWAndArgsInfo = /*friend*/public
clang::MemberExpr::MemberDNLoc = /*friend*/public
clang::MemberPointerType::MemberPointerType=/*friend*//*package*/
clang::NamespaceAliasDecl::IdentLoc = /*friend*/public
clang::NamespaceAliasDecl::Namespace = /*friend*/public
clang::NamespaceAliasDecl::NamespaceLoc = /*friend*/public
clang::NamespaceAliasDecl::QualifierLoc = /*friend*/public
clang::NamespaceDecl::AnonOrFirstNamespaceAndInline = /*friend*/public
clang::NamespaceDecl::LocStart = /*friend*/public
clang::NamespaceDecl::RBraceLoc = /*friend*/public
clang::NonTypeTemplateParmDecl = /*friend*/public
clang::NullStmt::HasLeadingEmptyMacro = /*friend*/public
clang::OMPAlignedClause::setAlignment = /*friend*/public
clang::OMPAtomicDirective::IsPostfixUpdate = /*friend*/public
clang::OMPAtomicDirective::IsXLHSInRHSPart = /*friend*/public
clang::OMPAtomicDirective::setExpr = /*friend*/public
clang::OMPAtomicDirective::setUpdateExpr = /*friend*/public
clang::OMPAtomicDirective::setV = /*friend*/public
clang::OMPAtomicDirective::setX = /*friend*/public
clang::OMPCancelDirective::setCancelRegion = /*friend*/public
clang::OMPCancellationPointDirective::setCancelRegion = /*friend*/public
clang::OMPCollapseClause::setNumForLoops = /*friend*/public
clang::OMPCopyinClause::setAssignmentOps = /*friend*/public
clang::OMPCopyinClause::setDestinationExprs = /*friend*/public
clang::OMPCopyinClause::setSourceExprs = /*friend*/public
clang::OMPCopyprivateClause::setAssignmentOps = /*friend*/public
clang::OMPCopyprivateClause::setDestinationExprs = /*friend*/public
clang::OMPCopyprivateClause::setSourceExprs = /*friend*/public
clang::OMPCriticalDirective::DirName = /*friend*/public
clang::OMPDeclareReductionDecl::PrevDeclInScope = /*friend*/public
clang::OMPDefaultClause::setDefaultKind = /*friend*/public
clang::OMPDefaultClause::setDefaultKindKwLoc = /*friend*/public
clang::OMPDefaultmapClause::setDefaultmapKind = /*friend*/public
clang::OMPDefaultmapClause::setDefaultmapKindLoc = /*friend*/public
clang::OMPDefaultmapClause::setDefaultmapModifier = /*friend*/public
clang::OMPDefaultmapClause::setDefaultmapModifierLoc = /*friend*/public
clang::OMPDefaultmapClause::setLParenLoc = /*friend*/public
clang::OMPDependClause::setColonLoc = /*friend*/public
clang::OMPDependClause::setDependencyKind = /*friend*/public
clang::OMPDependClause::setDependencyLoc = /*friend*/public
clang::OMPDeviceClause::setDevice = /*friend*/public
clang::OMPDistScheduleClause::setChunkSize = /*friend*/public
clang::OMPDistScheduleClause::setCommaLoc = /*friend*/public
clang::OMPDistScheduleClause::setDistScheduleKind = /*friend*/public
clang::OMPDistScheduleClause::setDistScheduleKindLoc = /*friend*/public
clang::OMPDistScheduleClause::setLParenLoc = /*friend*/public
clang::OMPExecutableDirective::setAssociatedStmt = /*friend*/public
clang::OMPExecutableDirective::setClauses = /*friend*/public
clang::OMPFinalClause::setCondition = /*friend*/public
clang::OMPFirstprivateClause::setInits = /*friend*/public
clang::OMPFirstprivateClause::setPrivateCopies = /*friend*/public
clang::OMPForDirective::setHasCancel = /*friend*/public
clang::OMPGrainsizeClause::setGrainsize = /*friend*/public
clang::OMPHintClause::setHint = /*friend*/public
clang::OMPIfClause::setColonLoc = /*friend*/public
clang::OMPIfClause::setCondition = /*friend*/public
clang::OMPIfClause::setNameModifier = /*friend*/public
clang::OMPIfClause::setNameModifierLoc = /*friend*/public
clang::OMPLastprivateClause::setAssignmentOps = /*friend*/public
clang::OMPLastprivateClause::setDestinationExprs = /*friend*/public
clang::OMPLastprivateClause::setSourceExprs = /*friend*/public
clang::OMPLinearClause::setCalcStep = /*friend*/public
clang::OMPLinearClause::setInits = /*friend*/public
clang::OMPLinearClause::setPrivates = /*friend*/public
clang::OMPLinearClause::setStep = /*friend*/public
clang::OMPLoopDirective::setCalcLastIteration = /*friend*/public
clang::OMPLoopDirective::setCond = /*friend*/public
clang::OMPLoopDirective::setCounters = /*friend*/public
clang::OMPLoopDirective::setEnsureUpperBound = /*friend*/public
clang::OMPLoopDirective::setFinals = /*friend*/public
clang::OMPLoopDirective::setInc = /*friend*/public
clang::OMPLoopDirective::setInit = /*friend*/public
clang::OMPLoopDirective::setInits = /*friend*/public
clang::OMPLoopDirective::setIsLastIterVariable = /*friend*/public
clang::OMPLoopDirective::setIterationVariable = /*friend*/public
clang::OMPLoopDirective::setLastIteration = /*friend*/public
clang::OMPLoopDirective::setLowerBoundVariable = /*friend*/public
clang::OMPLoopDirective::setNextLowerBound = /*friend*/public
clang::OMPLoopDirective::setNextUpperBound = /*friend*/public
clang::OMPLoopDirective::setNumIterations = /*friend*/public
clang::OMPLoopDirective::setPreCond = /*friend*/public
clang::OMPLoopDirective::setPreInits = /*friend*/public
clang::OMPLoopDirective::setPrevLowerBoundVariable = /*friend*/public
clang::OMPLoopDirective::setPrevUpperBoundVariable = /*friend*/public
clang::OMPLoopDirective::setPrivateCounters = /*friend*/public
clang::OMPLoopDirective::setStrideVariable = /*friend*/public
clang::OMPLoopDirective::setUpdates = /*friend*/public
clang::OMPLoopDirective::setUpperBoundVariable = /*friend*/public
clang::OMPMapClause::setColonLoc = /*friend*/public
clang::OMPMapClause::setMapLoc = /*friend*/public
clang::OMPMapClause::setMapType = /*friend*/public
clang::OMPMapClause::setMapTypeModifier = /*friend*/public
clang::OMPMappableExprListClause::setComponentListSizes = /*friend*/public
clang::OMPMappableExprListClause::setComponents = /*friend*/public
clang::OMPMappableExprListClause::setDeclNumLists = /*friend*/public
clang::OMPMappableExprListClause::setUniqueDecls = /*friend*/public
clang::OMPNumTasksClause::setNumTasks = /*friend*/public
clang::OMPNumTeamsClause::setNumTeams = /*friend*/public
clang::OMPNumThreadsClause::setNumThreads = /*friend*/public
clang::OMPOrderedClause::setNumForLoops = /*friend*/public
clang::OMPParallelDirective::setHasCancel = /*friend*/public
clang::OMPParallelForDirective::setHasCancel = /*friend*/public
clang::OMPParallelSectionsDirective::setHasCancel = /*friend*/public
clang::OMPPriorityClause::setPriority = /*friend*/public
clang::OMPPrivateClause::setPrivateCopies = /*friend*/public
clang::OMPProcBindClause::setProcBindKind = /*friend*/public
clang::OMPProcBindClause::setProcBindKindKwLoc = /*friend*/public
clang::OMPReductionClause = /*friend*/public
clang::OMPReductionClause::setColonLoc = /*friend*/public
clang::OMPReductionClause::setLHSExprs = /*friend*/public
clang::OMPReductionClause::setNameInfo = /*friend*/public
clang::OMPReductionClause::setQualifierLoc = /*friend*/public
clang::OMPReductionClause::setRHSExprs = /*friend*/public
clang::OMPReductionClause::setReductionOps = /*friend*/public
clang::OMPSafelenClause::setSafelen = /*friend*/public
clang::OMPScheduleClause::setChunkSize = /*friend*/public
clang::OMPScheduleClause::setCommaLoc = /*friend*/public
clang::OMPScheduleClause::setFirstScheduleModifier = /*friend*/public
clang::OMPScheduleClause::setFirstScheduleModifierLoc = /*friend*/public
clang::OMPScheduleClause::setLParenLoc = /*friend*/public
clang::OMPScheduleClause::setScheduleKind = /*friend*/public
clang::OMPScheduleClause::setScheduleKindLoc = /*friend*/public
clang::OMPScheduleClause::setSecondScheduleModifier = /*friend*/public
clang::OMPScheduleClause::setSecondScheduleModifierLoc = /*friend*/public
clang::OMPSectionsDirective::setHasCancel = /*friend*/public
clang::OMPSimdlenClause::setSimdlen = /*friend*/public
clang::OMPTargetParallelForDirective::setHasCancel = /*friend*/public
clang::OMPTaskDirective::setHasCancel = /*friend*/public
clang::OMPThreadLimitClause::setThreadLimit = /*friend*/public
clang::OMPThreadPrivateDecl::setVars = /*friend*/public
clang::OMPVarListClause::setVarRefs = /*friend*/public
clang::ObjCArrayLiteral::ArrayWithObjectsMethod = /*friend*/public
clang::ObjCArrayLiteral::Range = /*friend*/public
clang::ObjCAvailabilityCheckExpr::AtLoc = /*friend*/public
clang::ObjCAvailabilityCheckExpr::RParen = /*friend*/public
clang::ObjCAvailabilityCheckExpr::VersionToCheck = /*friend*/public
clang::ObjCBoxedExpr::BoxingMethod = /*friend*/public
clang::ObjCBoxedExpr::Range = /*friend*/public
clang::ObjCBoxedExpr::SubExpr = /*friend*/public
clang::ObjCBridgeAttr::getBridgedType = @Override public
clang::ObjCBridgeMutableAttr::getBridgedType = @Override public
clang::ObjCBridgedCastExpr::BridgeKeywordLoc = /*friend*/public
clang::ObjCBridgedCastExpr::Kind = /*friend*/public
clang::ObjCBridgedCastExpr::LParenLoc = /*friend*/public
clang::ObjCCategoryDecl::ClassInterface = /*friend*/public
clang::ObjCCategoryDecl::NextClassCategory = /*friend*/public
clang::ObjCCategoryDecl::TypeParamList = /*friend*/public
clang::ObjCCategoryImplDecl::CategoryNameLoc = /*friend*/public
clang::ObjCDictionaryElement::EllipsisLoc = public final
clang::ObjCDictionaryElement::NumExpansions = public final
clang::ObjCDictionaryLiteral::DictWithObjectsMethod = /*friend*/public
clang::ObjCDictionaryLiteral::HasPackExpansions = /*friend*/public
clang::ObjCDictionaryLiteral::Range = /*friend*/public
clang::ObjCImplementationDecl::IvarInitializers = /*friend*/public
clang::ObjCImplementationDecl::NumIvarInitializers = /*friend*/public
clang::ObjCImplementationDecl::SuperLoc = /*friend*/public
clang::ObjCIndirectCopyRestoreExpr::ObjCIndirectCopyRestoreExpr = /*friend*/public
clang::ObjCIndirectCopyRestoreExpr::Operand = /*friend*/public
clang::ObjCIndirectCopyRestoreExpr::setShouldCopy = /*friend*/public
clang::ObjCInterfaceDecl::Data = /*friend*/public
clang::ObjCInterfaceDecl::DefinitionData=public
clang::ObjCInterfaceDecl::TypeForDecl = /*friend*/public
clang::ObjCInterfaceDecl::TypeParamList = /*friend*/public
clang::ObjCInterfaceDecl::allocateDefinitionData = /*friend*/public
clang::ObjCInterfaceDecl::data = /*friend*/public
clang::ObjCInterfaceType::Decl = /*friend*/public
clang::ObjCInterfaceType::ObjCInterfaceDecl=public
clang::ObjCMessageExpr::IsImplicit = /*friend*/public
clang::ObjCMessageExpr::LBracLoc = /*friend*/public
clang::ObjCMessageExpr::RBracLoc = /*friend*/public
clang::ObjCMessageExpr::SelLocsKind = /*friend*/public
clang::ObjCMessageExpr::getNumStoredSelLocs = /*friend*/public
clang::ObjCMessageExpr::getStoredSelLocs = /*friend*/public
clang::ObjCMethodDecl::DeclEndLoc = /*friend*/public
clang::ObjCMethodDecl::HasRedeclaration = /*friend*/public
clang::ObjCMethodDecl::HasSkippedBody = /*friend*/public
clang::ObjCMethodDecl::IsOverriding = /*friend*/public
clang::ObjCMethodDecl::IsRedeclaration = /*friend*/public
clang::ObjCMethodDecl::SelLocsKind = /*friend*/public
clang::ObjCMethodDecl::getNumStoredSelLocs = /*friend*/public
clang::ObjCMethodDecl::getStoredSelLocs = /*friend*/public
clang::ObjCMethodDecl::setParamsAndSelLocs = /*friend*/public
clang::ObjCObjectPointerType::ObjCObjectPointerType=/*friend*/public
clang::ObjCObjectTypeImpl::ObjCObjectTypeImpl=/*friend*/public
clang::ObjCPropertyImplDecl = /*friend*/public
clang::ObjCPropertyImplDecl::IvarLoc = /*friend*/public
clang::ObjCPropertyRefExpr::SetterAndMethodRefFlags = /*friend*/public
clang::ObjCPropertyRefExpr::setBase = /*friend*/public
clang::ObjCPropertyRefExpr::setClassReceiver = /*friend*/public
clang::ObjCPropertyRefExpr::setExplicitProperty = /*friend*/public
clang::ObjCPropertyRefExpr::setImplicitProperty = /*friend*/public
clang::ObjCPropertyRefExpr::setLocation = /*friend*/public
clang::ObjCPropertyRefExpr::setReceiverLocation = /*friend*/public
clang::ObjCPropertyRefExpr::setSuperReceiver = /*friend*/public
clang::ObjCProtocolDecl::Data = /*friend*/public
clang::ObjCProtocolDecl::allocateDefinitionData = /*friend*/public
clang::ObjCProtocolExpr::ProtoLoc = /*friend*/public
clang::ObjCSubscriptRefExpr::GetAtIndexMethodDecl = /*friend*/public
clang::ObjCSubscriptRefExpr::SetAtIndexMethodDecl = /*friend*/public
clang::ObjCTypeParamDecl::ColonLoc = /*friend*/public
clang::ObjCTypeParamDecl::Index = /*friend*/public
clang::ObjCTypeParamDecl::Variance = /*friend*/public
clang::ObjCTypeParamDecl::VarianceLoc = /*friend*/public
clang::OpaqueValueExpr::Loc = /*friend*/public
clang::OpaqueValueExpr::SourceExpr = /*friend*/public
clang::OverloadExpr::HasTemplateKWAndArgsInfo = /*friend*/public
clang::OverloadExpr::NameInfo = /*friend*/public
clang::OverloadExpr::QualifierLoc = /*friend*/public
clang::OverloadExpr::getTrailingASTTemplateKWAndArgsInfo = /*friend*/public
clang::OverloadExpr::getTrailingTemplateArgumentLoc = /*friend*/public
clang::OverloadExpr::initializeResults = /*friend*/public
clang::OverloadedTemplateStorage::OverloadedTemplateStorage=/*friend*//*package*/

clang::OverloadedTemplateStorage::getStorage=/*friend*/protected
clang::PackExpansionExpr::EllipsisLoc = /*friend*/public
clang::PackExpansionExpr::NumExpansions = /*friend*/public
clang::PackExpansionExpr::Pattern = /*friend*/public
clang::PackExpansionType::PackExpansionType=/*friend*//*package*/
clang::ParenListExpr::Exprs = /*friend*/public
clang::ParenListExpr::LParenLoc = /*friend*/public
clang::ParenListExpr::NumExprs = /*friend*/public
clang::ParenListExpr::RParenLoc = /*friend*/public
clang::ParenType::ParenType=/*friend*//*package*/
clang::PipeType::PipeType=/*friend*//*package*/
clang::PointerType::PointerType=/*friend*/
clang::PragmaCommentDecl::CommentKind = /*friend*/public
clang::PragmaDetectMismatchDecl = /*friend*/public
clang::PredefinedExpr::FnName = /*friend*/public
clang::PredefinedExpr::Type = /*friend*/public
clang::PseudoObjectExpr::getSubExprsBuffer = /*friend*/public
clang::QualType::getExtQualsUnsafe=/*friend*/final protected
clang::QualType::getTypePtrUnsafe=/*friend*/final protected
clang::QualifiedTemplateName::QualifiedTemplateName=/*friend*//*package*/
clang::RValueReferenceType::RValueReferenceType=/*friend*//*package*/
clang::RawComment::RawComment = /*friend*/public
clang::RawCommentList::addDeserializedComments = /*friend*/public
clang::RecordDecl::LoadedFieldsFromExternalStorage=/*friend*/protected
clang::RedeclarableTemplateDecl::Common = /*friend*/public
clang::RedeclarableTemplateDecl::CommonBase = /*friend*/public
clang::RedeclarableTemplateDecl::getCommonPtr = /*friend*/public
clang::RedeclarableTemplateDecl::newCommon = /*friend*/public
clang::SEHExceptStmt::(anonymous) = /*friend*/public
clang::SEHExceptStmt::Children = /*friend*/public
clang::SEHExceptStmt::Loc = /*friend*/public
clang::SEHExceptStmt::SEHExceptStmt = /*friend*/public
clang::SEHFinallyStmt::Block = /*friend*/public
clang::SEHFinallyStmt::Loc = /*friend*/public
clang::SEHFinallyStmt::SEHFinallyStmt = /*friend*/public
clang::SEHTryStmt = /*friend*/public
clang::SEHTryStmt::(anonymous) = /*friend*/public
clang::SEHTryStmt::Children = /*friend*/public
clang::SEHTryStmt::IsCXXTry = /*friend*/public
clang::SEHTryStmt::TryLoc = /*friend*/public
clang::SizeOfPackExpr::Length = /*friend*/public
clang::SizeOfPackExpr::OperatorLoc = /*friend*/public
clang::SizeOfPackExpr::Pack = /*friend*/public
clang::SizeOfPackExpr::PackLoc = /*friend*/public
clang::SizeOfPackExpr::RParenLoc = /*friend*/public
clang::StaticAssertDecl::AssertExprAndFailed = /*friend*/public
clang::StaticAssertDecl::Message = /*friend*/public
clang::StaticAssertDecl::RParenLoc = /*friend*/public
clang::Stmt::(anonymous) = /*friend*/public
clang::Stmt::APFloatSemantics = /*friend*/public
clang::Stmt::CallExprBitfields::NumPreArgs=protected
clang::Stmt::CastExprBitfields::BasePathSize=protected
clang::Stmt::CastExprBitfields::Kind=protected
clang::Stmt::CharacterLiteralBitfields::Kind=protected/*friend*/
clang::Stmt::CompoundStmtBitfields::NumStmts=protected
clang::Stmt::ConstExprIterator=public
clang::Stmt::DeclRefExprBitfields = /*friend*/public
clang::Stmt::DeclRefExprBitfields::HadMultipleCandidates = /*friend*/public
clang::Stmt::DeclRefExprBitfields::HasFoundDecl = /*friend*/public
clang::Stmt::DeclRefExprBitfields::HasQualifier = /*friend*/public
clang::Stmt::DeclRefExprBitfields::HasTemplateKWAndArgsInfo = /*friend*/public
clang::Stmt::DeclRefExprBitfields::RefersToEnclosingVariableOrCapture = /*friend*/public
clang::Stmt::ExprBitfields = /*friend*/public
clang::Stmt::ExprBitfields::ContainsUnexpandedParameterPack = /*friend*/public
clang::Stmt::ExprBitfields::InstantiationDependent=protected
clang::Stmt::ExprBitfields::ObjectKind=protected
clang::Stmt::ExprBitfields::TypeDependent=protected
clang::Stmt::ExprBitfields::ValueDependent=protected
clang::Stmt::ExprBitfields::ValueKind=protected
clang::Stmt::ExprIterator=public
clang::Stmt::ExprWithCleanupsBitfields = /*friend*/public
clang::Stmt::ExprWithCleanupsBitfields::CleanupsHaveSideEffects = protected/*friend*/
clang::Stmt::ExprWithCleanupsBitfields::NumObjects=protected/*friend*/
clang::Stmt::FloatingLiteralBitfields::IsExact=protected/*friend*/
clang::Stmt::FloatingLiteralBitfields::Semantics=protected/*friend*/
clang::Stmt::IfStmtBitfields::IsConstexpr=protected
clang::Stmt::InitListExprBitfields::HadArrayRangeDesignator=protected
clang::Stmt::ObjCIndirectCopyRestoreExprBitfields::ShouldCopy=protected
clang::Stmt::PseudoObjectExprBitfields = /*friend*/public
clang::Stmt::PseudoObjectExprBitfields::NumSubExprs = /*friend*/public
clang::Stmt::PseudoObjectExprBitfields::ResultIndex = /*friend*/public
clang::Stmt::TypeTraitExprBitfields = /*friend*/public
clang::Stmt::TypeTraitExprBitfields::Kind = /*friend*/public
clang::Stmt::TypeTraitExprBitfields::NumArgs = /*friend*/public
clang::Stmt::TypeTraitExprBitfields::Value = /*friend*/public
clang::Stmt::UnaryExprOrTypeTraitExprBitfields::IsType=protected
clang::Stmt::UnaryExprOrTypeTraitExprBitfields::Kind=protected
clang::Stmt::Unnamed_field = /*friend*/public
clang::Stmt::operator new=public
clang::StoredDeclsMap::Previous=/*friend*/protected
clang::SubobjectAdjustment::(anonymous)::DerivedToBase = public final
clang::SubobjectAdjustment::(anonymous)::Ptr = public final
clang::SubobjectAdjustment::Unnamed_field1 = public fina
clang::SubstNonTypeTemplateParmExpr::NameLoc = /*friend*/public
clang::SubstNonTypeTemplateParmExpr::Param = /*friend*/public
clang::SubstNonTypeTemplateParmExpr::Replacement = /*friend*/public
clang::SubstNonTypeTemplateParmExpr::SubstNonTypeTemplateParmExpr = /*friend*/public
clang::SubstNonTypeTemplateParmPackExpr::Arguments = /*friend*/public
clang::SubstNonTypeTemplateParmPackExpr::NameLoc = /*friend*/public
clang::SubstNonTypeTemplateParmPackExpr::NumArguments = /*friend*/public
clang::SubstNonTypeTemplateParmPackExpr::Param = /*friend*/public
clang::SubstNonTypeTemplateParmPackExpr::SubstNonTypeTemplateParmPackExpr = /*friend*/public
clang::SubstTemplateTemplateParmStorage::SubstTemplateTemplateParmStorage=/*friend*//*package*/
clang::SubstTemplateTypeParmPackType::SubstTemplateTypeParmPackType=/*friend*//*package*/
clang::SubstTemplateTypeParmType::SubstTemplateTypeParmType=/*friend*//*package*/
clang::TagDecl::IsCompleteDefinition = /*friend*/public
clang::TagDecl::IsFixed = /*friend*/public
clang::TagDecl::IsScoped = /*friend*/public
clang::TagDecl::IsScopedUsingClassTag = /*friend*/public
clang::TagDecl::TypedefNameDeclOrQualifier = /*friend*/public
clang::TagDecl::getExtInfo = /*friend*/public
clang::TagDecl::hasExtInfo = /*friend*/public
clang::TagType::decl = /*friend*/public
clang::TemplateSpecializationType::TemplateSpecializationType=/*friend*//*package*/
clang::TemplateTemplateParmDecl::ParameterPack = /*friend*/public
clang::TemplateTypeParmType::TemplateTypeParmType=/*friend*//*package*/
clang::Type::ArrayTypeBitfields=/*friend*/public
clang::Type::AttributedTypeBits::AttrKind=/*friend*/public
clang::Type::AutoTypeBitfields::Keyword=/*friend*/public
clang::Type::BuiltinTypeBitfields::Kind=/*friend*/
clang::Type::FunctionTypeBitfields::ExtInfo=/*friend*/protected
clang::Type::FunctionTypeBitfields::RefQualifier=/*friend*/protected
clang::Type::FunctionTypeBitfields::TypeQuals=/*friend*/protected
clang::Type::ObjCObjectTypeBitfields::IsKindOf=/*friend*/protected
clang::Type::ObjCObjectTypeBitfields::NumProtocols=/*friend*/protected
clang::Type::ObjCObjectTypeBitfields::NumTypeArgs=/*friend*/protected
clang::Type::ReferenceTypeBitfields::InnerRef=/*friend*/protected
clang::Type::ReferenceTypeBitfields::SpelledAsLValue=/*friend*/protected
clang::Type::SizeModifier=/*friend*/public
clang::Type::TypeBitfields=/*friend*/public
clang::Type::TypeBitfields::CacheValid=/*friend*/public
clang::Type::TypeBitfields::CachedLinkage=/*friend*/public
clang::Type::TypeBitfields::CachedLocalOrUnnamed=/*friend*/public
clang::Type::TypeBitfields::FromAST=/*friend*/public
clang::Type::TypeBitfields::getLinkage=/*friend*/public
clang::Type::TypeBitfields::hasLocalOrUnnamedType=/*friend*/public
clang::Type::TypeBitfields::isCacheValid=/*friend*/public
clang::Type::TypeWithKeywordBitfields::Keyword=/*friend*/protected
clang::Type::Unnamed_field=/*friend*/public
clang::Type::VectorTypeBitfields::NumElements=/*friend*/protected
clang::Type::VectorTypeBitfields::VecKind=/*friend*/protected
clang::Type::setDependent = /*friend*/public
clang::Type::setFromAST = /*friend*/public
clang::TypeAliasTemplateDecl::getCommonPtr = /*friend*/public
clang::TypeDecl::TypeForDecl=/*friend*/protected
clang::TypeOfType::TypeOfType=/*friend*//*package*/
clang::TypeSourceInfo::TypeSourceInfo=/*friend*/
clang::TypeSpecTypeLoc::isKind=/*friend*/
clang::TypeTraitExpr::Loc = /*friend*/public
clang::TypeTraitExpr::RParenLoc = /*friend*/public
clang::UnresolvedLookupExpr::NamingClass = /*friend*/public
clang::UnresolvedLookupExpr::Overloaded = /*friend*/public
clang::UnresolvedLookupExpr::RequiresADL = /*friend*/public
clang::UnresolvedMemberExpr::Base = /*friend*/public
clang::UnresolvedMemberExpr::BaseType = /*friend*/public
clang::UnresolvedMemberExpr::HasUnresolvedUsing = /*friend*/public
clang::UnresolvedMemberExpr::IsArrow = /*friend*/public
clang::UnresolvedMemberExpr::OperatorLoc = /*friend*/public
clang::UnresolvedSetImpl::UnresolvedSetImpl=/*friend*/protected
clang::UnresolvedSetImpl::decls=/*friend*/protected
clang::UnresolvedSetIterator::UnresolvedSetIterator=/*friend*/public
clang::UnresolvedUsingType::UnresolvedUsingType=/*friend*/protected
clang::UnresolvedUsingTypenameDecl::QualifierLoc = /*friend*/public
clang::UnresolvedUsingTypenameDecl::TypenameLocation = /*friend*/public
clang::UnresolvedUsingValueDecl::DNLoc = /*friend*/public
clang::UnresolvedUsingValueDecl::QualifierLoc = /*friend*/public
clang::UserDefinedLiteral::UDSuffixLoc = /*friend*/public
clang::UsingDecl::DNLoc = /*friend*/public
clang::UsingDecl::FirstUsingShadow = /*friend*/public
clang::UsingDecl::QualifierLoc = /*friend*/public
clang::UsingDirectiveDecl::CommonAncestor = /*friend*/public
clang::UsingDirectiveDecl::NamespaceLoc = /*friend*/public
clang::UsingDirectiveDecl::NominatedNamespace = /*friend*/public
clang::UsingDirectiveDecl::QualifierLoc = /*friend*/public
clang::UsingDirectiveDecl::UsingLoc = /*friend*/public
clang::UsingDirectiveDecl::getName=/*friend*/final protected
clang::UsingShadowDecl::Underlying=protected
clang::UsingShadowDecl::UsingOrNextShadow = /*friend*/public
clang::VarDecl::(anonymous) = /*friend*/public
clang::VarDecl::NonParmVarDeclBitfields = /*friend*/public
clang::VarDecl::NonParmVarDeclBitfields::ARCPseudoStrong = /*friend*/public
clang::VarDecl::NonParmVarDeclBitfields::CXXForRangeDecl = /*friend*/public
clang::VarDecl::NonParmVarDeclBitfields::ExceptionVar = /*friend*/public
clang::VarDecl::NonParmVarDeclBitfields::IsConstexpr = /*friend*/public
clang::VarDecl::NonParmVarDeclBitfields::IsInitCapture = /*friend*/public
clang::VarDecl::NonParmVarDeclBitfields::IsInline = /*friend*/public
clang::VarDecl::NonParmVarDeclBitfields::IsInlineSpecified = /*friend*/public
clang::VarDecl::NonParmVarDeclBitfields::NRVOVariable = /*friend*/public
clang::VarDecl::NonParmVarDeclBitfields::PreviousDeclInSameBlockScope = /*friend*/public
clang::VarDecl::ParmVarDeclBitfields = /*friend*/public
clang::VarDecl::ParmVarDeclBitfields::DefaultArgKind=protected
clang::VarDecl::ParmVarDeclBitfields::HasInheritedDefaultArg = public
clang::VarDecl::ParmVarDeclBitfields::IsKNRPromoted = public
clang::VarDecl::ParmVarDeclBitfields::IsObjCMethodParam=protected
clang::VarDecl::ParmVarDeclBitfields::ParameterIndex=protected
clang::VarDecl::ParmVarDeclBitfields::ScopeDepthOrObjCQuals = public
clang::VarDecl::Unnamed_field1 = /*friend*/public
clang::VarDecl::VarDeclBitfields = /*friend*/public
clang::VarDecl::VarDeclBitfields::InitStyle = /*friend*/public
clang::VarDecl::VarDeclBitfields::SClass = /*friend*/public
clang::VarDecl::VarDeclBitfields::TSCSpec = /*friend*/public
clang::VarTemplateDecl::Common = /*friend*/public
clang::VarTemplateDecl::getCommonPtr = /*friend*/public
clang::VarTemplatePartialSpecializationDecl::ArgsAsWritten = /*friend*/public
clang::VarTemplatePartialSpecializationDecl::InstantiatedFromMember = /*friend*/public
clang::VarTemplatePartialSpecializationDecl::TemplateParams = /*friend*/public
clang::VarTemplateSpecializationDecl::ExplicitInfo = /*friend*/public
clang::VarTemplateSpecializationDecl::ExplicitSpecializationInfo = /*friend*/public
clang::VarTemplateSpecializationDecl::PointOfInstantiation = /*friend*/public
clang::VarTemplateSpecializationDecl::SpecializationKind = /*friend*/public
clang::VarTemplateSpecializationDecl::SpecializedPartialSpecialization = /*friend*/public
clang::VarTemplateSpecializationDecl::SpecializedTemplate = /*friend*/public
clang::VarTemplateSpecializationDecl::TemplateArgs = /*friend*/public
clang::VariableArrayType::SizeExpr=/*friend*/
clang::VariableArrayType::VariableArrayType=/*friend*//*package*/
clang::ast_type_traits::ASTNodeKind::KindInfo::Name=public final
clang::ast_type_traits::ASTNodeKind::KindInfo::ParentId=public final
clang::ast_type_traits::ASTNodeKind::NodeKindId=/*friend*/
clang::ast_type_traits::ASTNodeKind::NodeKindId=public

clang::comments::Comment::BlockCommandCommentBitfields::CommandID=protected
clang::comments::Comment::BlockCommandCommentBitfields::CommandMarker=protected
clang::comments::Comment::HTMLStartTagCommentBitfields::IsSelfClosing=protected
clang::comments::Comment::HTMLTagCommentBitfields::IsMalformed=protected
clang::comments::Comment::InlineCommandCommentBitfields::CommandID=protected
clang::comments::Comment::InlineCommandCommentBitfields::RenderKind=protected
clang::comments::Comment::InlineContentCommentBitfields::HasTrailingNewline=protected
clang::comments::Comment::ParagraphCommentBitfields::IsWhitespace=protected
clang::comments::Comment::ParagraphCommentBitfields::IsWhitespaceValid=protected
clang::comments::Comment::ParamCommandCommentBitfields::Direction=protected
clang::comments::Comment::ParamCommandCommentBitfields::IsDirectionExplicit=protected
clang::comments::Comment::TextCommentBitfields::IsWhitespace=protected
clang::comments::Comment::TextCommentBitfields::IsWhitespaceValid=protected
clang::comments::Parser::Tok=public/*friend*/
clang::comments::Parser::consumeToken=public/*friend*/
clang::comments::Parser::putBack=public/*friend*/
clang::comments::Token::IntVal=public/*friend*/
clang::comments::Token::TextPtr=public/*friend*/
